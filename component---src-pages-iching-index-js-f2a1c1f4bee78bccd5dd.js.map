{"version":3,"sources":["webpack:///./src/containers/IChing/utils.ts","webpack:///./src/components/Bazi/index.js","webpack:///./src/cm-lib/IChing/index.js","webpack:///./src/containers/IChing/Hexline.css.tsx","webpack:///./src/containers/IChing/HexLine.tsx","webpack:///./src/containers/IChing/Hex.tsx","webpack:///./src/pages/iching/index.js","webpack:///./src/containers/Ad.js","webpack:///./src/components/BoxButton/index.js","webpack:///./src/components/Pillar/index.js","webpack:///./src/containers/Bazi/BaziPillar.js"],"names":["Coin","Line","Home","inputDate","hideOtherInformation","onBazi","t","plumNumber","useTranslation","qs","getQueryString","dateObject","useState","Date","pillars","setPillars","parseInt","g","gender","setGender","bazi","dateObjectToBazi","useEffect","bz","header","ganzhi","GanZhiHour","custom","EB","indexOf","substr","GanZhiDay","lunarDay","GanZhiMonth","lunarMonthNumber","GanZhiYear","map","e","BaziPillar","hiddenStems","luckHeader","tenYearCycle","i","startWesternAge","hundredYear","chunk","year","pillar","BoxButton","activeIndex","onClick","buttons","label","Pillar","list","Accordion","AccordionPanel","Object","keys","stars","classical","k","elementRelationship","first","second","lookup","firstIndex","findIndex","distance","slice","concat","getHex","binary","searchHexagram","split","join","getSixAnimal","dayMaster","index","甲","乙","丙","丁","戊","己","庚","辛","壬","癸","SIX_ANIMALS","changeLine","hexagram","lineIndex","replace","replaceAt","key","value","Hexagram","find","h","word","replacement","length","Tails","Heads","Trigrams","Straight","Broken","TRIGRAM_LOOKUP_ORDER","HEXAGRAM_LOOKUP_TABLE","HEXAGRAM_NAMES","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","Trigram","lines","coinToss","Math","round","random","getLine","this","getKey","trigramName","trigramLookup","changing","some","line","BrokenPlus","StraightPlus","normalizeLine","changeLines","normalizeLines","normalizedLines","lowerTrigram","upperTrigram","hexagramNumber","hexagramName","getLinesAscending","getLinesDescending","reverse","getChangingHex","BrokenContainer","styled","div","BrokenSegment","props","mend","change","left","SegmentSymbol","right","branch","host","guest","kin","shen","margin","HexLine","Hex","data","sixGod","Box","align","justify","TC","inverseIndex","relation","Branch","queryString","require","binToHexagram","lowerLines","upperLines","queryDate","parseStringDate","search","hex","setHex","date","yBranch","dStem","hBranch","sumOfYMD","sumOfYMDH","changingLine","upper","lower","mainHexagram","changeHexagram","changeHexagramObject","mainHexagramObject","getTrigram","ii","dateToBazi","EARLY_HEAVEN_TRIGRAM","ee","element","EBElement","animals","mainHex","Binary","changeHex","console","log","background","assign","stringify","format","DATETIME_FORMAT","Bazi","direction","alignContent","fill","pad","Ad","client","slot","color","wrap","gap","StandardBox","children","PillarGrid","getColor","size","textAlign","HIDDEN_STEMS"],"mappings":"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","file":"component---src-pages-iching-index-js-f2a1c1f4bee78bccd5dd.js","sourcesContent":["/*\nTODO:\n1. organize/break into files\n2. hand drawn lines\n3. Animations on line and draw\n4. Click to re-cast\n7. SEO\n*/\n\nenum Coin {\n  Tails = 0,\n  Heads = 1\n}\n\nexport enum Line {\n  BrokenPlus = Coin.Tails + Coin.Tails + Coin.Tails, // 0\n  Straight = Coin.Heads + Coin.Tails + Coin.Tails, // 1\n  Broken = Coin.Heads + Coin.Heads + Coin.Tails, // 2\n  StraightPlus = Coin.Heads + Coin.Heads + Coin.Heads, // 3\n}\n\n\ninterface Trigrams {\n  [key: string]: string;\n}\n// TODO: convert to enum.\nconst Trigrams: Trigrams = {\n  [`${Line.Straight}${Line.Straight}${Line.Straight}`]: 'Ch\\'ien',\n  // '222': 'Ch\\'ien',\n  // '211': 'Chen',\n  [`${Line.Straight}${Line.Broken}${Line.Broken}`]: 'Chen',\n  // '121': 'K\\'an',\n  [`${Line.Broken}${Line.Straight}${Line.Broken}`]: 'K\\'an',\n  // '112': 'Ken',\n  [`${Line.Broken}${Line.Broken}${Line.Straight}`]: 'Ken',\n  // '111': 'K\\'un',\n  [`${Line.Broken}${Line.Broken}${Line.Broken}`]: 'K\\'un',\n  // '122': 'Sun',\n  [`${Line.Broken}${Line.Straight}${Line.Straight}`]: 'Sun',\n  // '212': 'Li',\n  [`${Line.Straight}${Line.Broken}${Line.Straight}`]: 'Li',\n  // '221': 'Tui',\n  [`${Line.Straight}${Line.Straight}${Line.Broken}`]: 'Tui',\n}\n\ninterface TrigramLookupOrder {\n  [Key: string]: number;\n}\nconst TRIGRAM_LOOKUP_ORDER: TrigramLookupOrder = {\n  'Ch\\'ien': 0,\n  'Chen': 1,\n  'K\\'an': 2,\n  'Ken': 3,\n  'K\\'un': 4,\n  'Sun': 5,\n  'Li': 6,\n  'Tui': 7,\n}\n\nconst HEXAGRAM_LOOKUP_TABLE = [\n  [1, 34, 5, 26, 11, 9, 14, 43],\n  [25, 51, 3, 27, 24, 42, 21, 17],\n  [6, 40, 29, 4, 7, 59, 64, 47],\n  [33, 62, 39, 52, 15, 53, 56, 31],\n  [12, 16, 8, 23, 2, 20, 35, 45],\n  [44, 32, 48, 18, 46, 57, 50, 28],\n  [13, 55, 63, 22, 36, 37, 30, 49],\n  [10, 54, 60, 41, 19, 61, 38, 58]\n];\n\ninterface HexagramNames {\n  [key: number]: string;\n}\n// TODO: correct names\nconst HEXAGRAM_NAMES: HexagramNames = {\n  1: 'The Creative',\n  2: 'The Receptive',\n  3: 'Difficulty at the Beginning',\n  4: 'Youthful Folly',\n  5: 'Waiting (Nourishment)',\n  6: 'Conflict',\n  7: 'The Army',\n  8: 'Holding Together [Union]',\n  9: 'The Taming Power of the Small',\n  10: 'Treading [Conduct]',\n  11: 'Peace',\n  12: 'Standstill [Stagnation]',\n  13: 'Fellowship',\n  14: 'Possession in Great Measure',\n  15: 'Modesty',\n  16: 'Enthusiasm',\n  17: 'Following',\n  18: 'Work on What Has Been Spoiled',\n  19: 'Approach',\n  20: 'Contemplation (View)',\n  21: 'Biting Through',\n  22: 'Grace',\n  23: 'Splitting Apart',\n  24: 'Return (The Turning Point)',\n  25: 'Innocence (The Unexpected)',\n  26: 'The Taming Power of the Great',\n  27: 'The Corners of the Mouth',\n  28: 'Preponderance of the Great',\n  29: 'The Abysmal (Water)',\n  30: 'The Clinging, Fire',\n  31: 'Influence (Wooing)',\n  32: 'Duration',\n  33: 'Retreat',\n  34: 'The Power of the Great',\n  35: 'Progress',\n  36: 'Darkening of the Light',\n  37: 'The Family [The Clan]',\n  38: 'Opposition',\n  39: 'Obstruction',\n  40: 'Deliverance',\n  41: 'Decrease',\n  42: 'Increase',\n  43: 'Break-through (Resoluteness)',\n  44: 'Coming to Meet',\n  45: 'Gathering Together [Massing]',\n  46: 'Pushing Upward',\n  47: 'Oppression (Exhaustion)',\n  48: 'The Well',\n  49: 'Revolution (Molting)',\n  50: 'The Cauldron',\n  51: 'The Arousing (Shock, Thunder)',\n  52: 'Keeping Still, Mountain',\n  53: 'Development (Gradual Progress)',\n  54: 'The Marrying Maiden',\n  55: 'Abundance [Fullness]',\n  56: 'The Wanderer',\n  57: 'The Gentle (The Penetrating, Wind)',\n  58: 'The Joyous, Lake',\n  59: 'Dispersion [Dissolution]',\n  60: 'Limitation',\n  61: 'Inner Truth',\n  62: 'Preponderance of the Small',\n  63: 'After Completion',\n  64: 'Before Completion',\n};\n\nexport class Trigram {\n  lines: [Line, Line, Line];\n  key: string;\n  trigramName: string;\n  trigramLookup: number;\n  changing: boolean;\n\n  constructor(lines?: [Line, Line, Line]) {\n    this.lines = lines || [this.getLine(), this.getLine(), this.getLine()];\n    this.key = this.getKey(this.lines);\n    this.trigramName = Trigrams[this.key];\n    this.trigramLookup = TRIGRAM_LOOKUP_ORDER[this.trigramName];\n    this.changing = this.lines.some((line: Line) => line === Line.BrokenPlus || line === Line.StraightPlus);\n  }\n\n  coinToss = (): Coin => (\n    Math.round(Math.random()) as Coin\n  )\n\n  getLine = (): Line => (\n    (this.coinToss() + this.coinToss() + this.coinToss()) as Line\n  )\n\n  normalizeLine(line: Line): Line {\n    switch (line) {\n      case Line.BrokenPlus:\n        return Line.Broken;\n      case Line.StraightPlus:\n        return Line.Straight;\n      default:\n        return line;\n    }\n  }\n\n  changeLine(line: Line): Line {\n    switch (line) {\n      case Line.BrokenPlus:\n        return Line.Straight;\n      case Line.StraightPlus:\n        return Line.Broken;\n      default:\n        return line;\n    }\n  }\n\n  changeLines(): [Line, Line, Line]{\n    return this.lines.map((line: Line) => this.changeLine(line)) as [Line, Line, Line];\n  }\n\n  normalizeLines(): [Line, Line, Line]{\n    return this.lines.map((line: Line) => this.normalizeLine(line)) as [Line, Line, Line];\n  }\n\n  getKey(lines: Line[]) {\n    const normalizedLines = lines.map((line: Line) => this.normalizeLine(line));\n    const key = '' + normalizedLines[0] + normalizedLines[1] + normalizedLines[2];\n    return key;\n  }\n}\n\nexport class Hexagram {\n  lowerTrigram: Trigram;\n  upperTrigram: Trigram;\n  hexagramNumber: number;\n  hexagramName: string;\n  changing: boolean;\n\n  constructor(lowerTrigram?: Trigram, upperTrigram?: Trigram) {\n    this.lowerTrigram = lowerTrigram || new Trigram();\n    this.upperTrigram = upperTrigram || new Trigram();\n    this.hexagramNumber = HEXAGRAM_LOOKUP_TABLE[this.lowerTrigram.trigramLookup][this.upperTrigram.trigramLookup];\n    this.hexagramName = HEXAGRAM_NAMES[this.hexagramNumber];\n    this.changing = this.lowerTrigram.changing || this.upperTrigram.changing;\n  }\n\n  private getLinesAscending(): Line[] {\n    return [...this.lowerTrigram.lines, ...this.upperTrigram.lines]\n  }\n\n  getLinesDescending(): Line[] {\n    return this.getLinesAscending().reverse();\n  }\n\n  getChangingHex(): Hexagram | null {\n    if (!this.changing) {\n      return null;\n    }\n\n    const newLower = new Trigram(this.lowerTrigram.changeLines());\n    const newUpper = new Trigram(this.upperTrigram.changeLines());\n    return new Hexagram(newLower, newUpper);\n  }\n}\n\n\n","import React, { useState, useEffect } from \"react\"\nimport { Accordion, AccordionPanel } from 'grommet';\nimport DateTimePicker from '../../components/DateTimePicker'\nimport Pillar from '../../components/Pillar'\nimport BaziPillar from '../../containers/Bazi/BaziPillar'\nimport BoxButton from '../../components/BoxButton'\nimport { EB } from '../../cm-lib/constants'\nimport { dateObjectToBazi } from '../../cm-lib/FourPillar'\nimport { useTranslation } from 'react-i18next';\nimport { parseStringDate, getQueryString, chunk } from '../../helpers'\nimport { format } from 'date-fns';\n\nconst isBrowser = typeof window !== `undefined`\n\nconst Home = ({ inputDate, onBazi, hideOtherInformation, plumNumber }) => {\n  const { t } = useTranslation();\n  const qs = getQueryString()\n  const [dateObject] = useState(inputDate || new Date())\n  const [pillars, setPillars] = useState(null)\n  const [gender, setGender] = useState(parseInt(qs.g) || 0)\n  const [bazi] = useState(dateObjectToBazi(dateObject, gender === 0 ? 'M' : 'F' ))\n  useEffect(() => {\n    const bz = [\n      {\n        header: 'Hour',\n        ganzhi: bazi.GanZhiHour.ganzhi,\n        custom: EB.indexOf(bazi.GanZhiHour.ganzhi.substr(1, 1)) + 1,\n      },\n      {\n        header: 'Day',\n        ganzhi: bazi.GanZhiDay.ganzhi,\n        custom: `Lunar: ${bazi.lunarDay}`,\n      },\n      {\n        header: 'Month',\n        ganzhi: bazi.GanZhiMonth.ganzhi,\n        custom: `Lunar: ${bazi.lunarMonthNumber}`,\n      },\n      {\n        header: 'Year',\n        ganzhi: bazi.GanZhiYear.ganzhi,\n        custom: EB.indexOf(bazi.GanZhiYear.ganzhi.substr(1, 1)) + 1,\n      },\n\n    ].map(e => <BaziPillar custom={e.custom} plumNumber hiddenStems header={e.header} ganzhi={e.ganzhi} />)\n\n    const luckHeader = bazi.tenYearCycle\n    .map((e, i) => {\n      \n      return <BaziPillar header={bazi.startWesternAge + i * 10} ganzhi={e} />\n    \n    })\n\n    setPillars({\n      bz,\n      hundredYear: chunk(bazi.hundredYear.map(e => <BaziPillar header={e.year} ganzhi={e.pillar} />), 10),\n      luckHeader,\n      bazi,\n    })\n  }, [bazi])\n  return <>\n\n      {\n        !hideOtherInformation && <BoxButton activeIndex={gender} onClick={(e, i) => setGender(i)} buttons={[\n      { \n        label: 'M', \n        \n      },\n      {\n        label: 'F',\n      }\n    ]} />\n  }\n    <br />\n    {\n      pillars && <Pillar list={pillars.bz} plumNumber />\n    }\n\n    {\n      !hideOtherInformation && <Accordion>\n        <AccordionPanel label=\"More Information\">\n        {\n          Object.keys(bazi.stars.classical).map(k => <AccordionPanel label={`${k} ${t(k)}: ${bazi.stars.classical[k]}`}></AccordionPanel>)\n        }\n        </AccordionPanel>\n      </Accordion>\n    }\n<br />\n    {\n      !hideOtherInformation && pillars && <Pillar list={pillars.luckHeader} />\n    }\n\n<br />\n    {\n      !hideOtherInformation && pillars && pillars.hundredYear.map(e => <Pillar list={e} />)\n    }\n\n  </>\n}\n\nexport default Home\n","import { dateToBazi } from '../FourPillar'\nimport { EB, HS, EARLY_HEAVEN_TRIGRAM, SIX_ANIMALS, EBElement } from '../constants'\nimport Hexagram from './Hexagram.json'\n\nconst elementRelationship = (first, second) => {\n    const lookup = [\"water\", \"wood\", \"fire\", \"earth\", \"metal\"]\n    const firstIndex = lookup.findIndex(e => e === first);\n    const distance = lookup.slice(firstIndex).concat(lookup.slice(0, firstIndex)).findIndex(e => e === second);\n\n    if(distance === 0) {\n        return '兄'\n    }\n    if(distance === 1) {\n        return '子'\n    }\n    if(distance === 2) {\n        return '妻'\n    }\n    if(distance === 3) {\n        return '官'\n    }\n    if(distance === 4) {\n        return '父'\n    }\n}\n\nexport const dateToHexagram = date => {\n    \n    const bazi = dateToBazi(date);\n    const { lunarMonthNumber, lunarDay } = bazi;\n    const [yStem, yBranch] = bazi.GanZhiYear.ganzhi.split('');\n    const [dStem, dBranch] = bazi.GanZhiDay.ganzhi.split('');\n    const [hStem, hBranch] = bazi.GanZhiHour.ganzhi.split('');\n    const yearNum = EB.findIndex(e => e === yBranch) + 1;\n    const hourNum = EB.findIndex(e => e === hBranch) + 1;\n\n    const sumOfYMD = lunarDay + lunarMonthNumber + yearNum;\n\n\n    const sumOfYMDH = sumOfYMD + hourNum;\n    const upperTrigram = (sumOfYMD - 1) % 8;\n    const lowerTrigram = (sumOfYMDH - 1) % 8;\n    const changingLine = (sumOfYMDH - 1) % 6;\n\n\n    const upper = EARLY_HEAVEN_TRIGRAM[Object.keys(EARLY_HEAVEN_TRIGRAM)[upperTrigram]];\n    const lower = EARLY_HEAVEN_TRIGRAM[Object.keys(EARLY_HEAVEN_TRIGRAM)[lowerTrigram]];\n    const mainHexagram = `${lower}${upper}`\n    const changeHexagram = changeLine(mainHexagram, changingLine);\n    const changeHexagramObject = getHex(changeHexagram)\n    const mainHexagramObject = getHex(mainHexagram)\n\n    const getTrigram = binary => Object.keys(EARLY_HEAVEN_TRIGRAM).find(e => EARLY_HEAVEN_TRIGRAM[e] === binary);\n    return {\n        mainHexagram: {\n            ...mainHexagramObject,\n            relation: mainHexagramObject.Branch.split('').map(ee => elementRelationship(mainHexagramObject.element, EBElement[ee])),\n            upper: getTrigram(upper),\n            lower: getTrigram(lower),\n        },\n        changeHexagram: {\n            ...changeHexagramObject,\n            relation: changeHexagramObject.Branch.split('').map(ee => elementRelationship(mainHexagramObject.element, EBElement[ee])),\n            upper: getTrigram(changeHexagram.substr(3, 3)),\n            lower: getTrigram(changeHexagram.substr(0, 3)),\n        },\n        changingLine,\n        animals: getSixAnimal(dStem)\n    }\n}\n\nexport const getHex = binary => {\n    return searchHexagram('Binary', binary.split('').join(''))\n}\n\nexport const getSixAnimal = dayMaster => {\n    const lookup = {\n        甲: 0,\n        乙: 0,\n        丙: 1,\n        丁: 1,\n        戊: 2,\n        己: 3,\n        庚: 4,\n        辛: 4,\n        壬: 5,\n        癸: 5\n    }\n    const index = lookup[dayMaster];\n    return SIX_ANIMALS.slice(index).concat(SIX_ANIMALS.slice(0, index));\n}\n\nexport const getEB = hexagramBinary => {\n    const lowerTrigram = hexagramBinary.substr(0, 3);\n    const upperTrigram = hexagramBinary.substr(3, 3);\n    const lookup = {\n        '111': 0,\n        '100': 0,\n        '001': 4,\n        '010': 2,\n        '000': 7,\n        '101': 3,\n        '011': 1,\n        '110': 5,\n    }\n    const lowerStart = lookup[lowerTrigram];\n    const upperStart = lookup[upperTrigram];\n\n    return [...Array(6).keys()].map(i => {\n        if(i < 3) {\n            const isYin = [0, 5, 3, 6].includes(parseInt(lowerTrigram, 2));\n            if(isYin) {\n                const seq = EB.slice().reverse();\n                return seq[((11 - lowerStart) + i * 2) % 12];\n            } else {\n                return EB[(lowerStart + i * 2) % 12];\n                \n            }\n        } else {\n            const isYin = [0, 5, 3, 6].includes(parseInt(upperTrigram, 2));\n            if(isYin) {\n                const seq = EB.slice().reverse();\n                return seq[((11 - upperStart) + i * 2) % 12];\n            } else {\n                return EB[(upperStart + i * 2)  % 12];\n            }\n        }\n    })\n}\n\nconst changeLine = (hexagram, lineIndex) => {\n    const replace = hexagram[lineIndex] === '1' ? '0' : '1';\n    return replaceAt(hexagram, lineIndex, replace);\n}\n\nexport const searchHexagram = (key, value) => {\n    return Hexagram.find(h => h[key] === value);\n}\n\nconst replaceAt = (word, index, replacement) => {\n    return word.substr(0, index) + replacement+ word.substr(index + replacement.length);\n}","import styled from 'styled-components';\nimport React from 'react';\n\nexport const BrokenContainer = styled.div`\n  display: flex;\n  height: 20px;\n  width: 100%;\n  justify-content: space-between;\n  margin: 10px auto;\n`\n\nexport const BrokenSegment = styled.div`\n  height: 100%;\n  width: ${props => props.mend ? '71%' : '32%'};\n  background-color: ${ props => props.change ? 'tomato' : 'darkslategrey' };\n  color: white;\n  text-align: ${props => props.left ? 'left' : 'right'};\n  display: flex;\n`;\n\nconst SegmentSymbol = styled.div`\n  ${props => props.right ? 'margin-left: auto;' : ''}\n`\n\nexport const Broken = ({ change, branch, host, guest, kin, mend, shen }) => (\n  <BrokenContainer mend={mend}>\n    { shen }\n    {\n      !mend && <BrokenSegment mend={mend} left={true} change={change}>\n          { host && 'S' }\n          { guest && 'O' }\n        </BrokenSegment>\n    }\n    <BrokenSegment mend={mend} margin change={change}>\n      <SegmentSymbol>\n        { mend && host && 'S' }\n        { mend && guest && 'O' }\n      </SegmentSymbol>\n      <SegmentSymbol right>\n        { kin }\n      </SegmentSymbol>\n    </BrokenSegment>\n    { branch  }\n  </BrokenContainer>\n);\n\nexport const Straight = (props) => (\n  <Broken {...props} mend={true} />\n);","import React from 'react';\nimport { Line } from './utils';\nimport { Straight, StraightPlus, Broken, BrokenPlus } from './Hexline.css';\ninterface Props {\n  line: Line;\n}\n\nconst HexLine = (props) => {\n  switch (props.line) {\n    case Line.Broken:\n      return <Broken {...props} />\n    case Line.BrokenPlus:\n      return <BrokenPlus/>\n    case Line.Straight:\n      return <Straight  {...props} />\n    case Line.StraightPlus:\n      return <StraightPlus/>\n    default:\n      return <p>woops</p>\n  }\n};\n\nexport default HexLine;\n","import React from 'react';\nimport { Box, Text } from 'grommet'\nimport { Hexagram, Line } from './utils';\nimport HexLine from './HexLine';\nimport { HexagramWrapper, Title } from './Hex.css';\n\ninterface Props {\n  hexagram: Hexagram;\n}\n\nconst Hex = ({ hexagram, changeLine, data, sixGod }) => (\n  <>\n    <Box align=\"center\" justify=\"center\">{ data.TC }</Box>\n    <Box align=\"center\" justify=\"center\">{ hexagram.hexagramName }</Box>\n    {hexagram.getLinesDescending().map((line: Line, i) => {\n      const inverseIndex = 5 - i;\n      return <HexLine \n                kin={data.relation[inverseIndex]}\n                branch={data.Branch[inverseIndex]} \n                shen={sixGod && sixGod[inverseIndex]}\n                host={data.host - 1 === inverseIndex}  \n                guest={data.guest - 1 === inverseIndex}\n                line={line} \n                change={i === changeLine} />\n    \n    })}\n\n    \n  </>\n);\n\nexport default Hex;\n","import React, { useState, useEffect } from \"react\"\nimport Layout from '../../containers/layout'\nimport Bazi from '../../components/Bazi'\nimport { dateToHexagram } from '../../cm-lib/IChing'\nimport DatePicker from '../../components/DateTimePicker'\nimport { Hexagram, Line, Trigram } from '../../containers/IChing/utils'\nimport Hex from '../../containers/IChing/Hex'\nimport { Box, Accordion, AccordionPanel } from 'grommet'\nimport { DATETIME_FORMAT, DATE_FORMAT, READABLE_DATETIME_FORMAT } from '../../constants'\nimport { assign, getQueryString, parseStringDate } from '../../helpers'\nimport { format } from 'date-fns'\nimport Ad from '../../containers/Ad'\n\nconst queryString = require('query-string');\n\nconst binToHexagram = (lines) => {\n    const lowerLines = lines.slice(0, 3).map(e => e === '0' ? Line.Broken : Line.Straight)\n    const upperLines = lines.slice(3, 6).map(e => e === '0' ? Line.Broken : Line.Straight)\n    return new Hexagram(new Trigram(lowerLines), new Trigram(upperLines))\n}\n\nconst Home = () => {\n  const qs = getQueryString()\n  const queryDate = parseStringDate(qs.search, new Date());\n  const [hex, setHex] = useState(null)\n  useEffect(() => {\n    \n    const ii = dateToHexagram(queryDate)\n    const mainHex = binToHexagram(ii.mainHexagram.Binary.split(''))\n    const changeHex = binToHexagram(ii.changeHexagram.Binary.split(''))\n    console.log(ii)\n    setHex([\n        {\n            hex: mainHex,\n            changeLine: 5 - ii.changingLine,\n            data: ii.mainHexagram,\n            sixGod: ii.animals\n        },\n        {\n            hex: changeHex,\n            data: ii.changeHexagram,\n            sixGod: ii.animals\n        },\n    ])\n  }, [])\n\n\n  return <Layout>\n    <h2>Plum Blossom Divination</h2>\n    <Accordion background=\"light-2\">\n        <AccordionPanel label=\"How The Hexagram Is Derived\">\n            <Box>\n                <ol>\n                    <li> 1 - Qian, 2 - Dui, 3 - Li, 4 - Zhen, 5 - Xun, 6 - Kan, 7 - Gen, 8 - Kun</li>\n                    <li>Basing on the time the question is asked, get the bazi chart</li>\n                    <li>For year and day, get the branch number (1 - 12), for month and day get the lunar month and day</li>\n                    <li><strong>Upper Trigram</strong> = year + month + day divide by 8 and get the remainder, if remainder is 0, take it as 8</li>\n                    <li><strong>Lower Trigram</strong> = year + month + day + hour divide by 8 and get the remainder, if remainder is 0, take it as 8</li>\n                    <li><strong>Changing Line</strong> = year + month + day + hour divide by 6 and get the remainder, if remainder is 0, take it as 6</li>\n                </ol>\n                \n            </Box>\n        </AccordionPanel>\n    </Accordion>\n    <DatePicker \n        dateObject={queryDate}\n        onClick={date => assign('?' + queryString.stringify({\n        search: format(date, DATETIME_FORMAT)\n        }))} \n    />\n\n    <Bazi inputDate={queryDate} hideOtherInformation={true}  plumNumber  />\n    <Box direction=\"row\" alignContent='stretch'>\n        {\n            hex && hex.map(e => <Box fill={true} pad=\"medium\">\n                <Hex \n                    data={e.data}\n                    hexagram={e.hex} \n                    changeLine={e.changeLine} \n                    sixGod={e.sixGod}\n                />\n            </Box>)\n        }\n    </Box>\n    <Ad />\n  </Layout>\n}\n\nexport default Home\n","import React from \"react\"\nimport { Adsense } from '@ctrl/react-adsense';\n\nconst Ad = () => <Adsense\n    client=\"ca-pub-6343289823091285\"\n    slot=\"5114483936\"\n    />\n\nexport default Ad;\n\n","import React from \"react\"\nimport { Box, Text } from 'grommet';\n\nconst Home = ({ onClick, buttons, activeIndex }) => {\n  return <>\n    <Box direction=\"row-responsive\">\n      {\n        buttons && buttons.map((e, i) => <Box \n            key={i}\n            onClick={() => (onClick && onClick(e, i))}\n            align=\"center\" color=\"white\"  \n            background={activeIndex === i ? 'brand' : 'black'} \n            fill=\"horizontal\" \n            pad=\"small\">\n            <Text color=\"white\"> { e.label }</Text>\n          </Box>)\n      }\n    </Box>\n  </>\n}\n\nexport default Home\n","import React from \"react\"\nimport { Box } from 'grommet';\n\nconst Home = ({ list, wrap }) => {\n\n  return <>\n    <Box\n      wrap={wrap}\n      direction=\"row\"\n      gap=\"xxsmall\"\n    >\n    {list}\n    </Box>\n  </>\n}\n\nexport default Home\n","import React from \"react\"\nimport { Box, Text } from 'grommet';\nimport { getColor } from '../../cm-lib/QiMen'\nimport { HIDDEN_STEMS, EB} from '../../cm-lib/constants'\nimport { useTranslation } from \"react-i18next\";\n\n\nconst StandardBox = ({ children }) => <Box\n  justify=\"center\"\n  align=\"center\"\n  alignContent=\"center\"\n>{ children }</Box>\n\n  const PillarGrid = ( { children, t, background }) => <Box background={background || getColor(t)}\n    pad=\"small\"\n    \n    fill=\"horizontal\" \n    justify=\"center\"\n    align=\"center\"\n    alignContent=\"center\"\n  > { children } </Box>\n\nconst Home = ({ header, ganzhi, custom, plumNumber, hiddenStems }) => {\n    const { t } = useTranslation()\n  return <><Box \n\n                direction=\"column\"\n                fill={\"horizontal\"}\n                gap=\"xxsmall\"\n              >\n      <PillarGrid background=\"light-2\">\n        <StandardBox> { header }</StandardBox>\n      </PillarGrid>\n      <PillarGrid t={ganzhi.substr(0, 1)}>\n        <StandardBox> { ganzhi.substr(0, 1) }</StandardBox><StandardBox> <Text size=\"12px\" textAlign=\"center\">{ t(ganzhi.substr(0, 1)) }</Text></StandardBox>\n      </PillarGrid>\n      <PillarGrid t={ganzhi.substr(1, 1)}>\n      <StandardBox> { ganzhi.substr(1, 1) }</StandardBox><StandardBox> <Text size=\"12px\" textAlign=\"center\">{ t(ganzhi.substr(1, 1)) }</Text></StandardBox>\n      </PillarGrid>\n      {\n        hiddenStems && <PillarGrid t={ganzhi.substr(1, 1)}>\n        <StandardBox> { HIDDEN_STEMS[ganzhi.substr(1, 1)] }</StandardBox>\n        </PillarGrid>\n      }\n      {\n        custom && <PillarGrid t={ganzhi.substr(1, 1)}>\n        <StandardBox> { custom }</StandardBox>\n        </PillarGrid>\n      }\n    </Box>\n  </>\n}\n\nexport default Home\n"],"sourceRoot":""}