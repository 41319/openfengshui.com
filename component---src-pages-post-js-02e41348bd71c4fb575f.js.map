{"version":3,"file":"component---src-pages-post-js-02e41348bd71c4fb575f.js","mappings":"6gBAEA,GAAe,EAAAA,EAAA,IAA4B,SAAK,OAAQ,CACtDC,EAAG,+eACD,0B,ikBC2CJ,IAAQC,EAAcC,EAAAA,UAOhBC,IAJUC,EAAAA,EAAAA,GAAhB,IAIoB,SAAAC,GAAS,oBAqDAC,EAIGC,EAxD5B,GAAwBC,EAAAA,EAAAA,KAAhBC,EAAR,SACA,GADA,OACyBC,EAAAA,EAAAA,UAAzB,gBAAOC,EAAP,KAAaC,EAAb,KACMC,EAAW,+BAAG,wGACOC,EAAA,yBAA8B,CACjDC,KADiD,OAEjDC,MAAO,CACHC,QAAS,CAAC,WAAYZ,EAAb,OAJD,2BACTa,EADS,KAOhBN,EAASM,GAATN,IAPgB,2CAAH,qDAUXO,EAAa,+BAAG,qGACZL,EAAA,mBAAwB,CAC1BM,MAAOT,MAAAA,GAAF,UAAEA,EAAF,yBAAEA,EADmB,MAE1BU,KAAM,CACFC,QAASC,KAJC,OAOlBV,IAPkB,2CAAH,sDAUbW,EAAY,+BAAG,qGACXV,EAAA,mBAAwB,CAC1BM,MAAOT,MAAAA,GAAF,UAAEA,EAAF,yBAAEA,EADmB,MAE1BU,KAAM,CACFd,OAAQgB,KAJC,OAOjBV,IAPiB,2CAAH,sDAUZY,EAAe,+BAAG,mGAEdX,EAAA,6BAAkC,CACpCM,MADoC,EAEpCM,IAFoC,EAGpCC,GAAIN,EAAKO,MALO,OAOpBf,IAPoB,2CAAH,0DA+BrB,OAHAZ,EAAS,cAAC,8EACNY,IADM,2CAAVZ,KAGO,iCAEH,cAAmB4B,UAAW,CAAEC,UAAU,GAAQT,KAAM,CAAC,CAAED,MAAOT,MAAAA,GAAF,UAAEA,EAAF,yBAAEA,EAAYS,YAEzET,MAAAA,GAAD,UAACA,EAAD,6BAACA,EAAD,sBAACA,EAAD,UAAgC,cAAmBU,KAAM,CAAC,CACtDU,YAAY,eAAKC,QAAL,OAAsBC,eAAtB,SAAgDC,WAAhD,SAAsEC,cAAtE,oBACR,0EACA,YAAwBC,GAAI,CAAEC,SAAU,eAMhD,cACIR,UAAW,CAAES,aAAc,yBAAUb,EAAgBd,MAAAA,GAAD,QAAC,EAAAA,EAAD,yBAACA,EAAD,gBAAzB,IAA+DF,OAA2B,WAAnB,UAAAA,WAAA,sBAClGY,MAtBgBd,EAsBSI,MAAAA,GAAD,QAAC,EAAAA,EAAD,yBAACA,EAAD,SArBzBJ,MAAAA,OAAA,EAAAA,EAAA,KAAY,SAAAgC,GAAC,UAAOnB,MAAO,UAAd,QAApB,MAwBI,qBAAAX,WAAA,uBAA8B,cAAK+B,OAAQhB,KAE/C,sCACA,cAEIK,UAAW,CAAES,aAAc,yBAAUb,EAAgBd,MAAAA,GAAD,QAAC,EAAAA,EAAD,yBAACA,EAAD,iBAAzB,IAAgEF,OAA2B,WAAnB,UAAAA,WAAA,sBACnGY,MAnCiBf,EAmCKK,MAAAA,GAAD,QAAC,EAAAA,EAAD,yBAACA,EAAD,UAlClBL,MAAAA,OAAA,EAAAA,EAAA,KAAW,SAAAiC,GAAC,UAAOnB,MAAOmB,EAAEE,SAAhB,QAAnB,OAqCA,cAAKD,OAAQrB,SAerB,EAVkB,SAAC,GAAuB,EAArBE,KAAqB,EAAfqB,SAEvB,OACI,+BACI,6BACI,YAAaC,KAAK","sources":["webpack://gatsby-redux-material-ui-boilerplate/./node_modules/@mui/icons-material/esm/PrecisionManufacturing.js","webpack://gatsby-redux-material-ui-boilerplate/./src/pages/post.js"],"sourcesContent":["import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"m19.93 8.21-3.6 1.68L14 7.7V6.3l2.33-2.19 3.6 1.68c.38.18.82.01 1-.36.18-.38.01-.82-.36-1L16.65 2.6c-.38-.18-.83-.1-1.13.2l-1.74 1.6c-.18-.24-.46-.4-.78-.4-.55 0-1 .45-1 1v1H8.82C8.34 4.65 6.98 3.73 5.4 4.07c-1.16.25-2.15 1.25-2.36 2.43-.22 1.32.46 2.47 1.48 3.08L7.08 18H4v3h13v-3h-3.62L8.41 8.77c.17-.24.31-.49.41-.77H12v1c0 .55.45 1 1 1 .32 0 .6-.16.78-.4l1.74 1.6c.3.3.75.38 1.13.2l3.92-1.83c.38-.18.54-.62.36-1-.18-.37-.62-.54-1-.36zM6 8c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1z\"\n}), 'PrecisionManufacturing');","import * as React from \"react\";\nimport { Link } from \"gatsby-theme-material-ui\";\nimport { StaticImage } from \"gatsby-plugin-image\";\nimport Box from '@mui/material/Box';\nimport Layout from \"../components/layout\";\nimport Seo from \"../components/seo\";\nimport { DesktopDatePicker } from '@mui/x-date-pickers/DesktopDatePicker';\nimport { MobileDatePicker } from '@mui/x-date-pickers/MobileDatePicker';\nimport dayjs, { Dayjs } from 'dayjs';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport ChartLayout from \"../components/ChartStructure\"\nimport LifeNumber from \"../components/LifeNumber\"\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport TextField from '@mui/material/TextField';\nimport { useTheme, createTheme } from '@mui/material/styles';\nimport { useState } from 'react'\nimport DatePicker from '../components/DatePicker'\nimport Typography from '@mui/material/Typography';\nimport Stack from '@mui/material/Stack';\nimport { NumberChip as Chip } from '../components/Chip';\nimport MobileNumber from \"../components/MobileNumber\"\nimport { East } from '@mui/icons-material/';\nimport NumberChart from \"../components/NumberChart\"\nimport Tooltip from '@mui/material/Tooltip';\nimport Button from '@mui/material/Button';\nimport { ThemeProvider } from '@mui/styles'\nimport CardHeader from '@mui/material/CardHeader';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport ReactHtmlParser, { processNodes, convertNodeToElement, htmlparser2 } from 'react-html-parser';\nimport Parse from '../vendor/Parse'\nimport PostList from '../components/PostList'\nimport Grid from '@mui/material/Grid';\nimport Divider from '@mui/material/Divider';\nimport Menu from '../components/Menu'\nimport ThreeCol from '../components/ThreeColLayout'\nimport useAuth from \"../hooks/userAuth\";\nimport { graphql, navigate } from 'gatsby'\nimport PostListContainer from '../components/PostListContainer'\nimport AutoComplete from '../components/AutoComplete'\nimport RTE from '../components/RTE'\nimport { Router } from \"@reach/router\"\nimport { parseJSON, format } from \"date-fns\";\nimport { PrecisionManufacturing } from '@mui/icons-material';\nconst { useEffect } = React;\n\n\nconst myTheme = createTheme({\n\n})\n\nconst SomeSubPage = props => {\n    const { isAuth, env } = useAuth()\n    const [post, setPosts] = useState([])\n    const refreshData = async () => {\n        const [result] = await Parse.Cloud.run('queryItems', {\n            type: `post`,\n            query: {\n                equalTo: ['tag.slug', props.id]\n            }\n        })\n        setPosts(result || [])\n    }\n\n    const handleComment = async (richtext) => {\n        await Parse.Cloud.run('post', {\n            title: post?.data?.title,\n            data: {\n                comment: richtext\n            }\n        })\n        refreshData()\n    }\n\n    const handleThread = async (richtext) => {\n        await Parse.Cloud.run('post', {\n            title: post?.data?.title,\n            data: {\n                thread: richtext\n            }\n        })\n        refreshData()\n    }\n\n    const deleteDataParts = async (title, key, data) => {\n\n        await Parse.Cloud.run('deletePostData', {\n            title: title,\n            key: key,\n            id: data._id\n        })\n        refreshData()\n    }\n\n    const handleDeleteComment = async (richtext) => {\n        await Parse.Cloud.run('post', {\n            title: post?.data?.title,\n            data: {\n                comment: richtext\n            }\n        })\n        refreshData()\n    }\n\n    const handlePostParse = (posts) => {\n        return posts?.map(e => ({ title: e.content, ...e })) || []\n    }\n\n    const handleThreadParser = (thread) => {\n        return thread?.map(e => ({ title: \"AI TCM\", ...e })) || []\n    }\n\n    useEffect(async () => {\n        refreshData()\n    }, [])\n    return <>\n\n        <PostListContainer cardProps={{ noAvatar: true }} data={[{ title: post?.data?.title }]}></PostListContainer>\n        {\n            !post?.data?.threads?.length && <PostListContainer data={[{\n                rawContent: <Box display={\"flex\"} justifyContent={\"center\"} alignItems={\"center\"} flexDirection={\"column\"}>\n                    <h3>Hold on a sec, Our AI will be replying soon.</h3>\n                    <PrecisionManufacturing sx={{ fontSize: 128 }} />\n                </Box>\n            }\n            ]}></PostListContainer>\n        }\n        {\n            <PostListContainer\n                cardProps={{ handleDelete: (data) => deleteDataParts(post?.data?.title, 'threads', data), isAuth: isAuth()?.role === 'admin' }}\n                data={handleThreadParser(post?.data?.threads)}></PostListContainer>\n        }\n        {\n            isAuth()?.role === 'admin' && <RTE onPost={handleThread} />\n        }\n        <h2>Comments</h2>\n        <PostListContainer\n\n            cardProps={{ handleDelete: (data) => deleteDataParts(post?.data?.title, 'comments', data), isAuth: isAuth()?.role === 'admin' }}\n            data={handlePostParse(post?.data?.comments)}>\n\n        </PostListContainer>\n        <RTE onPost={handleComment} />\n    </>\n}\n\n\nconst IndexPage = ({ data, location }) => {\n\n    return (\n        <>\n            <Router>\n                <SomeSubPage path=\"/post/:id\" />\n            </Router>\n        </>)\n}\n\nexport default IndexPage\n"],"names":["createSvgIcon","d","useEffect","React","SomeSubPage","createTheme","props","posts","thread","useAuth","isAuth","useState","post","setPosts","refreshData","Parse","type","query","equalTo","result","handleComment","title","data","comment","richtext","handleThread","deleteDataParts","key","id","_id","cardProps","noAvatar","rawContent","display","justifyContent","alignItems","flexDirection","sx","fontSize","handleDelete","e","onPost","content","location","path"],"sourceRoot":""}