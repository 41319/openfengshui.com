{"version":3,"file":"component---src-pages-plotter-v-2-js-49dce53aef176bf37472.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/components/SDMap.js","webpack://gatsby-starter-default/./src/pages/plotter-v2.js"],"sourcesContent":["/* global SD, GeoPoint, SDGeocode, map */\nimport * as React from \"react\";\nimport Box from '@mui/material/Box';\n\nconst { useEffect, useRef } = React;\n\nconst LENGTH = 1200\n\nconst IndexPage = ({ onMapChange, mapRef }) => {\n    const divRef = useRef(null)\n    const loadMap = () => {\n\n        window.set_data = (json) => {\n            if (json[0]) {\n                onMapChange && onMapChange({\n                    lat: json[0].x,\n                    lng: json[0].y,\n                })\n            }\n        }\n\n        var latlng = new GeoPoint(103.80733282853, 1.289478890541);\n        const myOptions = {\n            zoom: 13,\n            center: latlng,\n            showCopyright: false\n        };\n\n        const map = new SD.genmap.Map(\n            divRef.current,\n            myOptions\n        );\n        map.setCenter(latlng, map.zoom)\n        mapRef(map)\n    }\n\n    useEffect(() => {\n        loadMap()\n\n    }, [])\n\n\n    return (\n        <Box style={{ position: 'relative', width: `${LENGTH}px`, height: `${LENGTH}px`, }}>\n            <div ref={divRef} style={{ width: `100%`, height: `100%` }}></div>\n        </Box>)\n}\n\nexport default IndexPage\n","/* global SD, GeoPoint, SDGeocode, map */\nimport * as React from \"react\";\nimport { useState, useRef, useEffect } from 'react'\n\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport { styled } from '@mui/material/styles';\n\nimport Layout from \"../components/layout\";\nimport Editor from \"../components/Editor\"\nimport Map from \"../components/SDMap\";\nimport Ad from '../components/Ad'\n\nconst Container = styled(Box)(({ theme }) => ({\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    display: 'flex',\n    flexDirection: 'column',\n    [theme.breakpoints.up(\"lg\")]: {\n        flexDirection: 'column',\n    }\n}));\n\nconst NotSupported = styled(Box)(({ theme }) => ({\n    '@media (min-width: 0px)': {\n        display: 'block'\n    },\n    '@media (min-width: 1200px)': {\n        display: 'none'\n    }\n}));\n\n\n\n\nfunction parseQuery(queryString) {\n    var query = {};\n    var pairs = (queryString[0] === '?' ? queryString.substr(1) : queryString).split('&');\n    for (var i = 0; i < pairs.length; i++) {\n        var pair = pairs[i].split('=');\n        query[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1] || '');\n    }\n    return query;\n}\n\nconst MoreButton = ({ onUp, onDown }) => {\n    return <><Button\n        size=\"small\"\n        variant=\"contained\"\n        onClick={() => onUp(1)}\n    >Zoom+</Button>\n        <Button\n            size=\"small\"\n            variant=\"contained\"\n            onClick={() => onDown(-1)}\n        >Zoom-</Button>\n    </>\n}\n\n\n\nconst IndexPage = ({ data, location }) => {\n    const params = parseQuery(location.search)\n    const hideLogo = params.hideLogo;\n    const divRef = useRef(null)\n    const [query, setQuery] = useState(\"\")\n    const [geocode, setGeocode] = useState({\n        lat: 103.80733282853,\n        lng: 1.289478890541\n    })\n    const [map, setMap] = useState(null)\n    useEffect(() => {\n        window.set_data = (json) => {\n            if (json[0]) {\n                setGeocode({\n                    lat: json[0].x,\n                    lng: json[0].y,\n                })\n            }\n        }\n    }, [])\n\n    const findGeo = (q) => {\n\n        var geocode = new SDGeocode(map);\n        var searchOption = { \"q\": q };\n        var gc = SDGeocode.SG;\n        geocode.requestData(gc, searchOption)\n    }\n\n    return (\n        <Layout fullWidth={true}>\n            <Container>\n                <Ad />\n            </Container>\n            <Box display=\"flex\" alignItems={\"center\"} justifyContent={\"center\"} flexDirection={\"column\"}>\n                <Box alignSelf={\"center\"} justifyContent={\"center\"}>\n                    <Box display=\"flex\" flexDirection=\"row\" mb=\"16px\">\n                        <TextField id=\"outlined-basic\" label=\"Postal Code\" variant=\"outlined\"\n                            onChange={e => setQuery(e.target.value)}\n                            value={query}\n                        />\n                        <Button\n                            size=\"small\"\n                            onClick={() => findGeo(query)}\n                        >Find</Button>\n\n                    </Box>\n                </Box>\n                <Box maxWidth={\"1200px\"} width=\"100%\">\n                <Map\n                            mapRef={map => {\n                                map.refresh()\n                                var latlng = new GeoPoint(103.80733282853, 1.289478890541);\n                                map.setCenter(latlng, map.zoom)\n                                setMap(map)\n                            }}\n                            centerGeocode={geocode}\n                        />\n\n                    <Editor\n\n                        moreAction={<MoreButton \n                            onUp={v => map.setZoom(map.zoom + v)}\n                            onDown={v => map.setZoom(map.zoom + v)}\n                        />}\n                    >\n                        <Map\n                            mapRef={map => {\n                                var latlng = new GeoPoint(geocode.lat, geocode.lng);\n                                map.setCenter(latlng, map.zoom)\n                                setMap(map)\n                            }}\n                            centerGeocode={geocode}\n                        />\n\n                    </Editor>\n                </Box >\n            </Box>\n        </Layout>)\n}\n\nexport default IndexPage\n"],"names":["useEffect","useRef","React","_ref","onMapChange","mapRef","divRef","loadMap","window","set_data","json","lat","x","lng","y","latlng","GeoPoint","myOptions","zoom","center","showCopyright","map","SD","genmap","Map","current","setCenter","Box","style","position","width","height","ref","Container","styled","theme","alignItems","justifyContent","display","flexDirection","breakpoints","up","_ref2","MoreButton","_ref3","onUp","onDown","Button","size","variant","onClick","_ref4","data","location","params","queryString","query","pairs","substr","split","i","length","pair","decodeURIComponent","parseQuery","search","setQuery","hideLogo","useState","geocode","setGeocode","setMap","Layout","fullWidth","Ad","alignSelf","mb","TextField","id","label","onChange","e","target","value","q","SDGeocode","searchOption","gc","SG","requestData","findGeo","maxWidth","refresh","centerGeocode","Editor","moreAction","v","setZoom"],"sourceRoot":""}