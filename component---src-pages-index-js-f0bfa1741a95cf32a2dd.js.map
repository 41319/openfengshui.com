{"version":3,"file":"component---src-pages-index-js-f0bfa1741a95cf32a2dd.js","mappings":"ygCAyCA,IAAQA,EAAcC,EAAAA,WAGNC,EAAAA,EAAAA,GAAhB,IAgEA,UA7DkB,SAAC,GAAa,QAAXC,EAAW,EAAXA,KACjB,GAAwBC,EAAAA,EAAAA,KAAhBC,EAAR,SAAgBC,EAAhB,MACA,GAAyBC,EAAAA,EAAAA,UAAzB,eAAaC,GAAb,WACA,GAA8BD,EAAAA,EAAAA,UAA9B,eACA,GADA,WAC4BA,EAAAA,EAAAA,UAA5B,gBACA,GADA,WACuBA,EAAAA,EAAAA,UAAvB,gBACA,GADA,WAC0BA,EAAAA,EAAAA,UAA1B,gBACA,GADA,WACwBA,EAAAA,EAAAA,UAAxB,gBACA,GADA,WACgCA,EAAAA,EAAAA,UAAhC,kBACA,GADA,WACkCA,EAAAA,EAAAA,UAAlC,gBACME,GADN,WACcC,EAAAA,EAAAA,MACd,GAAoCH,EAAAA,EAAAA,YAApC,WAEA,GAFA,WACgBI,EAAAA,EAAAA,GAAcF,EAAAA,YAAAA,GAA9B,QACwBF,EAAAA,EAAAA,aAAxB,WAEMK,GAFN,UAEiB,+BAAG,oGACK,wBAA2B,CAC5CC,SAAU,UAAF,YAFI,OACVC,EADU,OAIhBN,GAASM,MAAAA,OAAA,EAAAA,EAAA,KAAY,mBAAOC,EAAP,cAArBP,IAJgB,2CAAH,sDAOjBR,EAAS,cAAC,8EACNY,IADM,2CAAVZ,IAMaC,EAAAA,OAAb,UAGMe,EAAY,+BAAG,+FACX,4BAA+B,CACjCC,IAAK,CAACC,EAAD,YAFQ,OAIjBN,IAJiB,2CAAH,sDAOZO,EAAU,+BAAG,+FACT,wBACFC,MAAOF,EADL,MAEFG,QAASH,EAFP,QAGFL,SAAU,UAAF,WAJG,WAOfD,IAPe,2CAAH,sDAUhB,OACI,+BACI,eAAUN,IAAV,aACI,cAAKc,MAAM,UACX,4DACA,cAAKE,QAAL,OAAoBC,eAApB,SAA4CC,cAA5C,SAAmEC,IAAnE,iBAEI,cAAUC,MAAMvB,MAAAA,GAAA,UAAAA,EAAA,mEAA0B,SAAAY,GAAC,YAAUA,EAAV,WAA3C,GAAuEY,SAAUtB,IAAUW,aAA3F,EAAuHY,OAAQT","sources":["webpack://gatsby-redux-material-ui-boilerplate/./src/pages/index.js"],"sourcesContent":["import * as React from \"react\";\nimport { Link } from \"gatsby-theme-material-ui\";\nimport { StaticImage } from \"gatsby-plugin-image\";\nimport Box from '@mui/material/Box';\nimport Layout from \"../components/layout\";\nimport Seo from \"../components/seo\";\nimport { DesktopDatePicker } from '@mui/x-date-pickers/DesktopDatePicker';\nimport { MobileDatePicker } from '@mui/x-date-pickers/MobileDatePicker';\nimport dayjs, { Dayjs } from 'dayjs';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport ChartLayout from \"../components/ChartStructure\"\nimport LifeNumber from \"../components/LifeNumber\"\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport TextField from '@mui/material/TextField';\nimport { useTheme, createTheme } from '@mui/material/styles';\nimport { useState } from 'react'\nimport DatePicker from '../components/DatePicker'\nimport Typography from '@mui/material/Typography';\nimport Stack from '@mui/material/Stack';\nimport { NumberChip as Chip } from '../components/Chip';\nimport MobileNumber from \"../components/MobileNumber\"\nimport { East } from '@mui/icons-material/';\nimport NumberChart from \"../components/NumberChart\"\nimport Tooltip from '@mui/material/Tooltip';\nimport Button from '@mui/material/Button';\nimport { ThemeProvider } from '@mui/styles'\nimport CardHeader from '@mui/material/CardHeader';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport ReactHtmlParser, { processNodes, convertNodeToElement, htmlparser2 } from 'react-html-parser';\nimport Parse from '../vendor/Parse'\nimport PostList from '../components/PostList'\nimport Grid from '@mui/material/Grid';\nimport Divider from '@mui/material/Divider';\nimport Menu from '../components/Menu'\nimport ThreeCol from '../components/ThreeColLayout'\nimport useAuth from \"../hooks/userAuth\";\nimport { graphql } from 'gatsby'\nconst { useEffect } = React;\n\n\nconst myTheme = createTheme({\n\n})\nconst IndexPage = ({ data }) => {\n    const { isAuth, env } = useAuth()\n    const [post, setPosts] = useState([])\n    const [preview, setPreview] = useState('')\n    const [number, setNumber] = useState('')\n    const [day, setDate] = useState('')\n    const [month, setMonth] = useState('')\n    const [year, setYear] = useState('')\n    const [elements, setElements] = useState(null)\n    const [accordion, setAccordion] = useState([])\n    const theme = useTheme();\n    const [numberInfo, setNumberInfo] = useState()\n    const matches = useMediaQuery(theme.breakpoints.up('sm'));\n    const [list, setList] = useState()\n\n    const refreshData = async () => {\n        const result = await Parse.Cloud.run('getPost', {\n            category: `public-${env}`,\n        })\n        setPosts(result?.map((e) => e.toJSON()) || [])\n    }\n\n    useEffect(async () => {\n        refreshData()\n    }, [])\n\n\n\n    var refdiv = React.useRef(null);\n    var rte;\n\n    const handleDelete = async (post) => {\n        await Parse.Cloud.run('deleteItems', {\n            ids: [post.objectId]\n        })\n        refreshData()\n    }\n\n    const handlePost = async (post) => {\n        await Parse.Cloud.run('post', {\n            title: post.title,\n            content: post.content,\n            category: `public-${env}`,\n            ...post,\n        })\n        refreshData()\n    }\n\n    return (\n        <>\n            <ThreeCol env={env}>\n                <Seo title=\"Home\" />\n                <h3>OpenFengShui - Numbers And TCM</h3>\n                <Box display=\"flex\" justifyContent=\"center\" flexDirection=\"column\" gap=\"16px\">\n\n                    <PostList list={data?.allPost?.edges?.map(e => ({ ...e.node })) || []} editMode={isAuth()} handleDelete={handleDelete} onPost={handlePost} />\n                </Box>\n            </ThreeCol>\n        </>)\n}\n\nexport default IndexPage\n\nexport const query = graphql`\nquery MyQuery {\n  allPost {\n    edges {\n      node {\n      id\n      data {\n        content      \n        title\n        video\n      }\n        createdAt\n      }\n    }\n  }\n}\n\n`"],"names":["useEffect","React","createTheme","data","useAuth","isAuth","env","useState","setPosts","theme","useTheme","useMediaQuery","refreshData","category","result","e","handleDelete","ids","post","handlePost","title","content","display","justifyContent","flexDirection","gap","list","editMode","onPost"],"sourceRoot":""}