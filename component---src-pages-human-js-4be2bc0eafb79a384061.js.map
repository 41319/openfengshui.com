{"version":3,"file":"component---src-pages-human-js-4be2bc0eafb79a384061.js","mappings":"oKAGA,MAAMA,EAAa,CACjB,CAAEC,KAAM,EAAGC,YAAa,QAASC,KAAM,MACvC,CAAEF,KAAM,EAAGC,YAAa,eAAgBC,KAAM,MAC9C,CAAEF,KAAM,GAAIC,YAAa,uBAAwBC,KAAM,SACvD,CAAEF,KAAM,GAAIC,YAAa,mBAAoBC,KAAM,MACnD,CAAEF,KAAM,GAAIC,YAAa,eAAgBC,KAAM,SAC/C,CAAEF,KAAM,GAAIC,YAAa,WAAYC,KAAM,MAC3C,CAAEF,KAAM,GAAIC,YAAa,aAAcC,KAAM,MAC7C,CAAEF,KAAM,IAAKC,YAAa,iBAAkBC,KAAM,OA8CpD,UA3CuBC,KACrB,MAAMC,EAAS,CACbC,MAAO,CACLC,KAAM,qCAERC,QAAS,CACPC,QAAS,OACTC,UAAW,SAAUC,GACnB,MAAMV,EAAOU,EAAO,GAAGC,UACjBC,EAAQb,EAAWc,MAAKC,GAAQA,EAAKd,OAASe,SAASf,KAC7D,OAAOY,EAAQ,GAAGZ,MAASY,EAAMX,cAAgB,GAAGD,mBACtD,GAEFgB,MAAO,CACLC,KAAM,WACNC,KAAMC,MAAMC,KAAK,CAAEC,OAAQ,MAAO,CAACC,EAAGC,IAAMA,KAE9CC,MAAO,CACLP,KAAM,QACNQ,IAAK,EACLC,IAAK,KAEPC,OAAQ,CACN,CACEC,KAAM,aACNX,KAAM,OACNC,KAAMnB,EAAW8B,KAAIf,GAAQ,CAACA,EAAKd,KAAMc,EAAKd,UAGlD8B,QAAS/B,EAAW8B,KAAIE,IAAK,CAC3Bd,KAAM,OACNe,KAAM,GAAGD,EAAM/B,QACfiC,IAAK,MACLC,MAAO,CACL5B,KAAMyB,EAAM7B,KACZiC,SAAU,SAKhB,OAAOC,EAAAA,cAACC,EAAAA,EAAY,CAACjC,OAAQA,GAAU,C","sources":["webpack://gatsby-starter-default/./src/pages/human.js"],"sourcesContent":["import React from 'react';\nimport ReactEcharts from 'echarts-for-react';\n\nconst lifeStages = [\n  { year: 0, description: 'Birth', icon: '👶' },\n  { year: 5, description: 'Start School', icon: '🧒' },\n  { year: 18, description: 'Graduate High School', icon: '👨‍🎓' },\n  { year: 22, description: 'Graduate College', icon: '🎓' },\n  { year: 23, description: 'Start Career', icon: '👨‍💼' },\n  { year: 30, description: 'Marriage', icon: '💍' },\n  { year: 65, description: 'Retirement', icon: '🧓' },\n  { year: 100, description: '100th Birthday', icon: '🎉' }\n];\n\nconst HumanLifeChart = () => {\n  const option = {\n    title: {\n      text: 'Human Life Journey Over 100 Years'\n    },\n    tooltip: {\n      trigger: 'axis',\n      formatter: function (params) {\n        const year = params[0].axisValue;\n        const event = lifeStages.find(item => item.year === parseInt(year));\n        return event ? `${year}: ${event.description}` : `${year}: No major event`;\n      }\n    },\n    xAxis: {\n      type: 'category',\n      data: Array.from({ length: 101 }, (_, i) => i) // Years from 0 to 100\n    },\n    yAxis: {\n      type: 'value',\n      min: 0,\n      max: 100\n    },\n    series: [\n      {\n        name: 'Milestones',\n        type: 'line',\n        data: lifeStages.map(item => [item.year, item.year]) // The value is the same as the year for simplicity\n      }\n    ],\n    graphic: lifeStages.map(stage => ({\n      type: 'text',\n      left: `${stage.year}%`,\n      top: '10%',\n      style: {\n        text: stage.icon,\n        fontSize: 16,\n      }\n    }))\n  };\n\n  return <ReactEcharts option={option} />;\n};\n\nexport default HumanLifeChart;\n"],"names":["lifeStages","year","description","icon","HumanLifeChart","option","title","text","tooltip","trigger","formatter","params","axisValue","event","find","item","parseInt","xAxis","type","data","Array","from","length","_","i","yAxis","min","max","series","name","map","graphic","stage","left","top","style","fontSize","React","ReactEcharts"],"sourceRoot":""}