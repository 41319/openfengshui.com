{"version":3,"file":"eee599c1712f6386f2599000624a7e4b0329f5db-11532e54f55723086081.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/components/post-author/style.jsx","webpack://gatsby-starter-default/./src/components/post-author/index.jsx","webpack://gatsby-starter-default/./src/components/stay-in-touch/style.jsx","webpack://gatsby-starter-default/./src/container/home-one/add-banner/style.jsx","webpack://gatsby-starter-default/./src/components/featured-video/style.jsx","webpack://gatsby-starter-default/./src/components/featured-video/index.jsx","webpack://gatsby-starter-default/./src/components/featured-small-video/style.jsx","webpack://gatsby-starter-default/./src/components/featured-small-video/index.jsx","webpack://gatsby-starter-default/./src/container/home-one/featured-video/style.jsx","webpack://gatsby-starter-default/./src/components/single-following-post/style.jsx","webpack://gatsby-starter-default/./src/components/single-following-post/index.jsx","webpack://gatsby-starter-default/./src/container/home-one/from-following/style.jsx","webpack://gatsby-starter-default/./src/components/hero-category/style.jsx","webpack://gatsby-starter-default/./src/components/hero-category/index.jsx","webpack://gatsby-starter-default/./src/components/hero-blog-post/style.jsx","webpack://gatsby-starter-default/./src/components/hero-blog-post/index.jsx","webpack://gatsby-starter-default/./src/container/home-one/hero/style.jsx","webpack://gatsby-starter-default/./src/components/trending-article-item/style.jsx","webpack://gatsby-starter-default/./src/components/trending-article-item/index.jsx","webpack://gatsby-starter-default/./src/components/trending-article-large-item/style.jsx","webpack://gatsby-starter-default/./src/components/trending-article-large-item/index.jsx","webpack://gatsby-starter-default/./src/container/home-one/trending-article/style.jsx","webpack://gatsby-starter-default/./src/container/home-one/trending-article/index.jsx","webpack://gatsby-starter-default/./src/components/trending-topics/style.jsx","webpack://gatsby-starter-default/./src/components/trending-topics/index.jsx","webpack://gatsby-starter-default/./src/container/home-one/trending-topic/style.jsx","webpack://gatsby-starter-default/./src/components/side-latest-post/style.jsx","webpack://gatsby-starter-default/./src/components/side-latest-post/index.jsx","webpack://gatsby-starter-default/./src/container/latest-post/style.jsx","webpack://gatsby-starter-default/./src/container/latest-post/index.jsx","webpack://gatsby-starter-default/./src/utils/functions.js"],"sourcesContent":["import styled, { device } from \"@theme/utils\";\n\nexport const FollowingAuthorArea = styled.div`\n    border: 1px solid #f3f3f3;\n    border-radius: 10px;\n    text-align: center;\n    padding: 30px 15px;\n`;\nexport const AuthorImage = styled.div`\n    border: 1px solid #f3f3f3;\n    display: inline-block;\n    border-radius: 50000px;\n    padding: 11px;\n    margin-bottom: 25px;\n    img {\n        border-radius: 100%;\n    }\n`;\nexport const AuthorTitle = styled.div`\n    margin-bottom: 10px;\n`;\nexport const AuthorName = styled.h4`\n    margin-bottom: 0;\n`;\nexport const AuthorDegination = styled.p`\n    font-size: 14px;\n`;\nexport const AuthorDetails = styled.div``;\nexport const AuthorDetailsText = styled.p`\n    margin-bottom: 20px;\n    font-size: 15px;\n    line-height: 1.6;\n`;\nexport const AuthorPostShare = styled.div`\n    margin-bottom: 30px;\n`;\nexport const SocialShareArea = styled.ul`\n    li {\n        display: inline-block;\n        margin-right: 15px;\n        a {\n            height: 45px;\n            width: 45px;\n            line-height: 45px;\n            text-align: center;\n            background-color: #ddd;\n            border-radius: 5px;\n            display: block;\n        }\n    }\n`;\nexport const ButtonBox = styled.div`\n    a {\n        font-weight: 400;\n        line-height: 1.5;\n        color: #212529;\n        text-align: center;\n        text-decoration: none;\n        vertical-align: middle;\n        cursor: pointer;\n        -webkit-user-select: none;\n        -moz-user-select: none;\n        user-select: none;\n        background-color: transparent;\n        border: 1px solid transparent;\n        padding: 0.375rem 0.75rem;\n        font-size: 1rem;\n        border-radius: 0.25rem;\n        transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out,\n            border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n\n        height: 50px;\n        line-height: 48px;\n        padding: 0 30px;\n        background-color: #f4f4f4;\n        font-weight: 500;\n        border-radius: 15px;\n        display: inline-block;\n    }\n`;\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\";\nimport { Link } from \"gatsby\";\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\nimport Button from \"../../components/shared/button\";\nimport Social, { SocialLink } from \"../../components/social\";\nimport {\n    FollowingAuthorArea,\n    AuthorImage,\n    AuthorTitle,\n    AuthorName,\n    AuthorDegination,\n    AuthorDetails,\n    AuthorDetailsText,\n    AuthorPostShare,\n    ButtonBox,\n} from \"./style\";\n\nconst PostAuthorBox = ({\n    postAuthorName,\n    postAuthordescription,\n    postAuthorImage,\n    postAuthorBio,\n    authorSlug,\n}) => {\n    const image = getImage(postAuthorImage);\n    return (\n        <FollowingAuthorArea>\n            <AuthorImage>\n                <GatsbyImage image={image} alt=\"\" />\n            </AuthorImage>\n            <AuthorTitle>\n                <AuthorName>\n                    <Link to={`/profile/${authorSlug}`}>{postAuthorName}</Link>\n                </AuthorName>\n                <AuthorDegination>{postAuthordescription}</AuthorDegination>\n            </AuthorTitle>\n            <AuthorDetails>\n                <AuthorDetailsText>{postAuthorBio}</AuthorDetailsText>\n\n                <AuthorPostShare>\n                    <Social sx={{ mt: \"20px\" }} shape=\"rounded-5\" space={15}>\n                        <SocialLink href=\"https://www.facebook.com/\">\n                            <i className=\"icofont-facebook\"></i>\n                        </SocialLink>\n                        <SocialLink href=\"https://www.skype.com/\">\n                            <i className=\"icofont-skype\"></i>\n                        </SocialLink>\n                        <SocialLink href=\"https://twitter.com/home/\">\n                            <i className=\"icofont-twitter\"></i>\n                        </SocialLink>\n                        <SocialLink href=\"https://www.linkedin.com/\">\n                            <i className=\"icofont-linkedin\"></i>\n                        </SocialLink>\n                    </Social>\n                </AuthorPostShare>\n\n                <ButtonBox>\n                    <Button\n                        path={`/profile/${authorSlug}`}\n                        size=\"large\"\n                        sx={{ fontSize: \"14px !important\" }}\n                    >\n                        View Profile\n                        <i className=\"icofont-long-arrow-right\"></i>\n                    </Button>\n                </ButtonBox>\n            </AuthorDetails>\n        </FollowingAuthorArea>\n    );\n};\n\nexport default PostAuthorBox;\n","import styled, { themeGet, device } from \"@theme/utils\";\n\nexport const StayInTouchArea = styled.div`\n    margin-top: 30px;\n    padding: 30px 24px;\n    background: #fafafa;\n    border-radius: 10px;\n    text-align: center;\n`;\nexport const StayInTouchBox = styled.div`\n    margin-top: 30px;\n    display: flex;\n    flex-wrap: wrap;\n    margin-left: -5px;\n    margin-right: -5px;\n`;\nexport const SingleTouchCol = styled.div`\n    width: 33.333%;\n    flex: 0 0 auto;\n    padding-left: 5px;\n    padding-right: 5px;\n\n    .facebook {\n        .socail-icon {\n            background-color: #4867aa;\n        }\n    }\n    .twitter {\n        .socail-icon {\n            background-color: #1da1f2;\n        }\n    }\n    .behance {\n        .socail-icon {\n            background-color: #1869ff;\n        }\n    }\n    .youtube-play {\n        .socail-icon {\n            background-color: #fe0000;\n        }\n    }\n    .dribbble {\n        .socail-icon {\n            background-color: #ea4c8a;\n        }\n    }\n    .linkedin {\n        .socail-icon {\n            background-color: #007bb6;\n        }\n    }\n`;\nexport const SingleTouch = styled.a`\n    background-color: #ebebeb;\n    width: 100%;\n    margin-bottom: 10px;\n    text-align: center;\n    border-radius: 10px;\n    padding: 14px 10px;\n    display: inline-block;\n    &:hover {\n        background-color: #ddd;\n    }\n`;\nexport const TouchSocailIcon = styled.div`\n    height: 40px;\n    width: 40px;\n    text-align: center;\n    line-height: 40px;\n    margin: auto;\n    margin-bottom: 5px;\n    border-radius: 100%;\n    color: #ffffff;\n`;\nexport const TouchTitle = styled.p`\n    color: #000000;\n    font-size: 12px;\n`;\n","import styled, { device } from \"@theme/utils\";\n\nexport const BottomAddBannerArea = styled.div`\n    padding-bottom: 60px;\n    ${device.small} {\n        padding-bottom: 80px;\n    }\n`;\nexport const BottomAddBannerBox = styled.a`\n    position: relative;\n    display: block;\n    .gatsby-image-wrapper-constrained {\n        display: block !important;\n        vertical-align: middle !important;\n        padding: 25px 0px;\n        border-radius: 10px;\n        img {\n            width: 100%;\n        }\n    }\n`;\nexport const BottomAddText = styled.h6`\n    font-size: 25px;\n    position: absolute;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 50px;\n    display: inline-block;\n    span {\n        display: block;\n        font-size: 32px;\n        text-align: left;\n        margin-top: 3px;\n    }\n`;\n","import styled, { themeGet, device } from \"@theme/utils\";\n\nexport const SingleFeaturedVideoItem = styled.div`\n    margin-bottom: 40px;\n`;\nexport const SinglePopupWrap = styled.div`\n    position: relative;\n    .gatsby-image-wrapper-constrained {\n        display: block !important;\n        img {\n            width: 100%;\n            border-radius: 10px;\n        }\n    }\n    .video-link {\n        transition: all 0.3s cubic-bezier(0.645, 0.045, 0.355, 1);\n        display: block;\n        &:hover {\n            & .video-play,\n            & .video-play-sm {\n                transform: scale3d(1.15, 1.15, 1.15);\n            }\n        }\n    }\n`;\nexport const HtPopupVideo = styled.div`\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    margin: auto;\n`;\nexport const VideoButtonTwo = styled.div`\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    -webkit-transform: translate(-50%, -50%);\n    -ms-transform: translate(-50%, -50%);\n    transform: translate(-50%, -50%);\n    & .video-play {\n        position: relative;\n        width: 78px;\n        height: 78px;\n        background: ${themeGet(\"colors.primary\")};\n        border: 3px solid #fff;\n        box-shadow: 0 2px 41px 0 rgba(91, 99, 254, 0.36);\n        border-radius: 50%;\n        transition: all 1s cubic-bezier(0, 0, 0.2, 1) !important;\n        box-shadow: 0 20px 30px rgba(0, 0, 0, 0.07);\n    }\n`;\n\nexport const VideoPlayIcon = styled.span`\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    line-height: 1;\n    margin-left: 1px;\n    &::before {\n        content: \"\";\n        position: absolute;\n        top: 0;\n        left: 0;\n        width: 0;\n        height: 0;\n        transform: translate(-50%, -50%);\n        border-top: 11px solid transparent;\n        border-bottom: 11px solid transparent;\n        border-left: 17px solid #fff;\n        border-top-width: 12px;\n        border-bottom-width: 12px;\n        border-left-width: 19px;\n        border-left-color: #fff;\n    }\n`;\n\nexport const FeaturedVdeoContent = styled.div``;\nexport const FeaturedBlogPostTop = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    margin-bottom: 15px;\n    margin-top: 25px;\n`;\nexport const FrendingBlogPostCategory = styled.div`\n    margin-right: 20px;\n    a {\n        min-width: 90px;\n    }\n`;\nexport const PostMetaLeftSide = styled.div``;\nexport const PostDate = styled.span`\n    position: relative;\n    padding-right: 10px;\n    margin-right: 10px;\n    font-size: 12px;\n    i {\n        margin-right: 5px;\n    }\n    ${device.small} {\n        font-size: 13px;\n    }\n`;\nexport const ReadTime = styled.span``;\nexport const PostMetaRightSide = styled.div`\n    margin-left: 30px;\n    a {\n        margin-left: 10px;\n    }\n`;\nexport const Title = styled.h3``;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { slugify } from \"@utils/functions\";\nimport Video from \"@components/shared/video\";\nimport { Link } from \"gatsby\";\nimport { StaticImage, GatsbyImage, getImage } from \"gatsby-plugin-image\";\nimport {\n    SingleFeaturedVideoItem,\n    SinglePopupWrap,\n    HtPopupVideo,\n    VideoButtonTwo,\n    VideoPlayIcon,\n    FeaturedVdeoContent,\n    FeaturedBlogPostTop,\n    FrendingBlogPostCategory,\n    PostMetaLeftSide,\n    PostDate,\n    ReadTime,\n    PostMetaRightSide,\n    Title,\n} from \"./style\";\n\nconst FeaturedVideoItems = ({\n    title,\n    thume_image,\n    video_link,\n    date,\n    slug,\n    dateSlug,\n    categories,\n}) => {\n    const image = getImage(thume_image);\n\n    // Video Modal Popup\n\n    let video_arr, video_id, video_channel;\n    if (video_link) {\n        video_arr = video_link.split(\"=\", -1);\n        video_id = video_arr[1];\n        video_channel = video_link.split(\".\")[1];\n    }\n    const [isOpen, setOpen] = useState(false);\n\n    return (\n        <SingleFeaturedVideoItem>\n            <div className=\"video-link mt-30\">\n                <SinglePopupWrap>\n                    <GatsbyImage image={image} alt=\"\" />\n                    <HtPopupVideo>\n                        <VideoButtonTwo>\n                            <div\n                                className=\"video-play\"\n                                onClick={() => setOpen(true)}\n                                role=\"button\"\n                                tabIndex=\"0\"\n                                onKeyPress={() => {}}\n                            >\n                                <VideoPlayIcon></VideoPlayIcon>\n                            </div>\n                        </VideoButtonTwo>\n                    </HtPopupVideo>\n                </SinglePopupWrap>\n            </div>\n            <Video\n                channel={video_channel}\n                videoId={video_id}\n                isOpen={isOpen}\n                setOpen={setOpen}\n            />\n            <FeaturedVdeoContent>\n                <FeaturedBlogPostTop>\n                    <FrendingBlogPostCategory>\n                        {categories &&\n                            categories.map((cat, i) => (\n                                <Link\n                                    key={i}\n                                    to={`/category/${slugify(cat.name)}`}\n                                    className={`cat-btn ${cat.color}`}\n                                >\n                                    {cat.name}\n                                </Link>\n                            ))}\n                    </FrendingBlogPostCategory>\n                    <PostMetaLeftSide>\n                        <PostDate>\n                            <i className=\"icofont-ui-calendar\"></i>\n                            <Link to={`/date/${dateSlug}`}>{date}</Link>\n                        </PostDate>\n                    </PostMetaLeftSide>\n                    <PostMetaRightSide>\n                        <a href=\"/\">\n                            <StaticImage\n                                src=\"../../data/images/icons/small-bookmark.png\"\n                                alt=\"\"\n                            />\n                        </a>\n                        <a href=\"/\">\n                            <StaticImage\n                                src=\"../../data/images/icons/heart.png\"\n                                alt=\"\"\n                            />\n                        </a>\n                    </PostMetaRightSide>\n                </FeaturedBlogPostTop>\n                <Title>\n                    <Link to={`/${slug}`}>{title}</Link>\n                </Title>\n            </FeaturedVdeoContent>\n        </SingleFeaturedVideoItem>\n    );\n};\nFeaturedVideoItems.propTypes = {\n    title: PropTypes.string,\n    thume_image: PropTypes.object,\n    video_link: PropTypes.string,\n    date: PropTypes.string,\n    slug: PropTypes.string,\n    dateSlug: PropTypes.string,\n    categories: PropTypes.array,\n};\nexport default FeaturedVideoItems;\n","import styled, { themeGet, device } from \"@theme/utils\";\n\nexport const SingleFeaturedVideoItem = styled.div`\n    margin-bottom: 40px;\n`;\nexport const SinglePopupWrap = styled.div`\n    position: relative;\n\n    .gatsby-image-wrapper-constrained {\n        display: block !important;\n        img {\n            width: 100%;\n            border-radius: 10px;\n        }\n    }\n    .video-link {\n        transition: all 0.3s cubic-bezier(0.645, 0.045, 0.355, 1);\n        display: block;\n        &:hover {\n            & .video-play,\n            & .video-play-sm {\n                transform: scale3d(1.15, 1.15, 1.15);\n            }\n        }\n    }\n`;\nexport const HtPopupVideo = styled.div`\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    margin: auto;\n`;\nexport const VideoButtonTwo = styled.div`\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    -webkit-transform: translate(-50%, -50%);\n    -ms-transform: translate(-50%, -50%);\n    transform: translate(-50%, -50%);\n    & .video-play-sm {\n        width: 58px;\n        height: 58px;\n        background: ${themeGet(\"colors.primary\")};\n        border: 3px solid #fff;\n        box-shadow: 0 2px 41px 0 rgba(91, 99, 254, 0.36);\n        border-radius: 50%;\n        transition: all 1s cubic-bezier(0, 0, 0.2, 1) !important;\n        box-shadow: 0 20px 30px rgba(0, 0, 0, 0.07);\n        & .video-play-icon {\n            position: absolute;\n            top: 50%;\n            left: 50%;\n            transform: translate(-50%, -50%);\n            line-height: 1;\n            margin-left: 1px;\n            &::before {\n                content: \"\";\n                position: absolute;\n                top: 0;\n                left: 0;\n                width: 0;\n                height: 0;\n                transform: translate(-50%, -50%);\n                border-top: 9px solid transparent;\n                border-bottom: 9px solid transparent;\n                border-left: 12px solid #fff;\n                border-top-width: 8px;\n                border-bottom-width: 9px;\n                border-left-width: 15px;\n                border-left-color: $white;\n            }\n        }\n    }\n`;\n\nexport const VideoPlayIcon = styled.span`\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    line-height: 1;\n    margin-left: 1px;\n    &::before {\n        content: \"\";\n        position: absolute;\n        top: 0;\n        left: 0;\n        width: 0;\n        height: 0;\n        transform: translate(-50%, -50%);\n        border-top: 11px solid transparent;\n        border-bottom: 11px solid transparent;\n        border-left: 17px solid #fff;\n        border-top-width: 12px;\n        border-bottom-width: 12px;\n        border-left-width: 19px;\n        border-left-color: $white;\n    }\n`;\n\nexport const FeaturedVdeoContent = styled.div``;\nexport const FeaturedBlogPostTop = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    margin-bottom: 15px;\n    margin-top: 25px;\n`;\nexport const FrendingBlogPostCategory = styled.div`\n    margin-right: 20px;\n    a {\n        min-width: 70px;\n    }\n`;\nexport const PostMetaLeftSide = styled.div``;\nexport const PostDate = styled.span`\n    position: relative;\n    padding-right: 10px;\n    margin-right: 10px;\n    font-size: 12px;\n    i {\n        margin-right: 5px;\n    }\n    ${device.small} {\n        font-size: 13px;\n    }\n`;\nexport const ReadTime = styled.span``;\nexport const PostMetaRightSide = styled.div`\n    margin-left: 30px;\n    a {\n        margin-left: 10px;\n    }\n`;\nexport const Title = styled.h4``;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { slugify } from \"@utils/functions\";\nimport Video from \"@components/shared/video\";\nimport { Link } from \"gatsby\";\nimport { StaticImage, GatsbyImage, getImage } from \"gatsby-plugin-image\";\nimport {\n    SingleFeaturedVideoItem,\n    SinglePopupWrap,\n    HtPopupVideo,\n    VideoButtonTwo,\n    VideoPlayIcon,\n    FeaturedVdeoContent,\n    FeaturedBlogPostTop,\n    FrendingBlogPostCategory,\n    PostMetaLeftSide,\n    PostDate,\n    ReadTime,\n    PostMetaRightSide,\n    Title,\n} from \"./style\";\n\nconst FeaturedSmallVideoItems = ({\n    title,\n    thume_image,\n    video_link,\n    date,\n    slug,\n    dateSlug,\n    categories,\n}) => {\n    const image = getImage(thume_image);\n\n    // Video Modal Popup\n\n    let video_arr, video_id, video_channel;\n    if (video_link) {\n        video_arr = video_link.split(\"=\", -1);\n        video_id = video_arr[1];\n        video_channel = video_link.split(\".\")[1];\n    }\n    const [isOpen, setOpen] = useState(false);\n\n    return (\n        <SingleFeaturedVideoItem>\n            <div className=\"video-link mt-30\">\n                <SinglePopupWrap>\n                    <GatsbyImage image={image} alt=\"\" />\n                    <HtPopupVideo>\n                        <VideoButtonTwo>\n                            <div\n                                className=\"video-play-sm\"\n                                onClick={() => setOpen(true)}\n                                role=\"button\"\n                                tabIndex=\"0\"\n                                onKeyPress={() => {}}\n                            >\n                                <VideoPlayIcon></VideoPlayIcon>\n                            </div>\n                        </VideoButtonTwo>\n                    </HtPopupVideo>\n                </SinglePopupWrap>\n            </div>\n            <Video\n                channel={video_channel}\n                videoId={video_id}\n                isOpen={isOpen}\n                setOpen={setOpen}\n            />\n            <FeaturedVdeoContent>\n                <FeaturedBlogPostTop>\n                    <FrendingBlogPostCategory>\n                        {categories &&\n                            categories.map((cat, i) => (\n                                <Link\n                                    key={i}\n                                    to={`/category/${slugify(cat.name)}`}\n                                    className={`cat-btn ${cat.color}`}\n                                >\n                                    {cat.name}\n                                </Link>\n                            ))}\n                    </FrendingBlogPostCategory>\n                    <PostMetaLeftSide>\n                        <PostDate>\n                            <i className=\"icofont-ui-calendar\"></i>\n                            <Link to={`/date/${dateSlug}`}>{date}</Link>\n                        </PostDate>\n                    </PostMetaLeftSide>\n                    <PostMetaRightSide>\n                        <a href=\"/\">\n                            <StaticImage\n                                src=\"../../data/images/icons/small-bookmark.png\"\n                                alt=\"\"\n                            />\n                        </a>\n                        <a href=\"/\">\n                            <StaticImage\n                                src=\"../../data/images/icons/heart.png\"\n                                alt=\"\"\n                            />\n                        </a>\n                    </PostMetaRightSide>\n                </FeaturedBlogPostTop>\n                <Title>\n                    <Link to={`/${slug}`}>{title}</Link>\n                </Title>\n            </FeaturedVdeoContent>\n        </SingleFeaturedVideoItem>\n    );\n};\nFeaturedSmallVideoItems.propTypes = {\n    title: PropTypes.string,\n    thume_image: PropTypes.object,\n    video_link: PropTypes.string,\n    date: PropTypes.string,\n    slug: PropTypes.string,\n    dateSlug: PropTypes.string,\n    categories: PropTypes.array,\n};\nexport default FeaturedSmallVideoItems;\n","import styled, { device } from \"@theme/utils\";\n\nexport const FeaturedVideoWrap = styled.div`\n   \n    padding-bottom: 60px;\n    ${device.small} {\n        \n        padding-bottom: 80px;\n    }\n`;\nexport const FeaturedVideoCol8 = styled.div`\n    max-width: 100%;\n    -webkit-box-flex: 0;\n    -webkit-flex: 0 0 auto;\n    -ms-flex: 0 0 auto;\n    flex: 0 0 auto;\n    ${device.xlarge} {\n        max-width: 850px;\n    }\n`;\nexport const FeaturedVideoBox = styled.div``;\nexport const LatestPostCol4 = styled.div`\n    max-width: 100%;\n    -webkit-box-flex: 0;\n    -webkit-flex: 0 0 auto;\n    -ms-flex: 0 0 auto;\n    flex: 0 0 auto;\n    ${device.xlarge} {\n        max-width: 363px;\n    }\n`;\n","import styled, { device } from \"@theme/utils\";\n\nexport const SingleFollowingPost = styled.div`\n    margin-bottom: 40px;\n`;\nexport const FollowingPostThum = styled.div`\n    display: block;\n    img {\n        border-radius: 15px;\n    }\n`;\nexport const FollowingPostContent = styled.div``;\nexport const FollowingBlogPostTop = styled.div`\n    display: -webkit-box;\n    display: -webkit-flex;\n    display: -ms-flexbox;\n    display: flex;\n    -webkit-box-align: center;\n    -webkit-align-items: center;\n    -ms-flex-align: center;\n    align-items: center;\n    margin-bottom: 15px;\n    margin-top: 25px;\n`;\nexport const FollowingBlogPostCategory = styled.div`\n    margin-right: 25px;\n`;\nexport const FollowingBlogPostAuthor = styled.div`\n    color: #9b9ea1;\n    a {\n        color: #000000;\n    }\n`;\nexport const FollowingBlogPostTitle = styled.h5`\n    margin-bottom: 15px;\n`;\nexport const FollowingBlogPostMeta = styled.div`\n    display: -webkit-box;\n    display: -webkit-flex;\n    display: -ms-flexbox;\n    display: flex;\n    -webkit-box-pack: justify;\n    -webkit-justify-content: space-between;\n    -ms-flex-pack: justify;\n    justify-content: space-between;\n    -webkit-box-align: center;\n    -webkit-align-items: center;\n    -ms-flex-align: center;\n    align-items: center;\n`;\nexport const PostMetaLeftSide = styled.div``;\nexport const PostMetaRightSide = styled.div`\n    a {\n        margin-left: 10px;\n    }\n`;\nexport const PostDate = styled.span`\n    position: relative;\n    padding-right: 14px;\n    margin-right: 10px;\n    font-size: 13px;\n    &:after {\n        position: absolute;\n        content: \"\";\n        right: -0px;\n        top: 50%;\n        height: 4px;\n        width: 4px;\n        background: #000000;\n        border-radius: 50000px;\n        -webkit-transform: translateY(-50%);\n        -ms-transform: translateY(-50%);\n        transform: translateY(-50%);\n    }\n    i {\n        margin-right: 4px;\n    }\n`;\nexport const PostReadTime = styled.span`\n    font-size: 13px;\n`;\n","import React from \"react\";\nimport { slugify } from \"@utils/functions\";\nimport { StaticImage, GatsbyImage, getImage } from \"gatsby-plugin-image\";\nimport { Link } from \"gatsby\";\nimport {\n    SingleFollowingPost,\n    FollowingPostThum,\n    FollowingPostContent,\n    FollowingBlogPostTop,\n    FollowingBlogPostCategory,\n    FollowingBlogPostAuthor,\n    FollowingBlogPostTitle,\n    FollowingBlogPostMeta,\n    PostMetaLeftSide,\n    PostMetaRightSide,\n    PostDate,\n    PostReadTime,\n} from \"./style\";\n\nconst SingleFollowingPosts = ({\n    title,\n    thume_image,\n    date,\n    slug,\n    dateSlug,\n    categories,\n    authorSlug,\n    authorId,\n}) => {\n    const image = getImage(thume_image);\n    return (\n        <SingleFollowingPost>\n            <FollowingPostThum>\n                <Link to={`/${slug}`}>\n                    <GatsbyImage image={image} alt=\"\" />\n                </Link>\n            </FollowingPostThum>\n            <FollowingPostContent>\n                <FollowingBlogPostTop>\n                    <FollowingBlogPostCategory>\n                        {categories &&\n                            categories.map((cat, i) => (\n                                <Link\n                                    key={i}\n                                    to={`/category/${slugify(cat.name)}`}\n                                    className={`cat-btn ${cat.color}`}\n                                >\n                                    {cat.name}\n                                </Link>\n                            ))}\n                    </FollowingBlogPostCategory>\n                    <FollowingBlogPostAuthor>\n                        By <Link to={`/profile/${authorSlug}`}>{authorId}</Link>\n                    </FollowingBlogPostAuthor>\n                </FollowingBlogPostTop>\n                <FollowingBlogPostTitle>\n                    <Link to={`/${slug}`}>{title}</Link>\n                </FollowingBlogPostTitle>\n                <FollowingBlogPostMeta>\n                    <PostMetaLeftSide>\n                        <PostDate>\n                            <i className=\"icofont-ui-calendar\"></i>\n                            <Link to={`/date/${dateSlug}`}>{date}</Link>\n                        </PostDate>\n                        <PostReadTime>10 min read</PostReadTime>\n                    </PostMetaLeftSide>\n                    <PostMetaRightSide>\n                        <a href=\"/\">\n                            <StaticImage\n                                src=\"../../data/images/icons/small-bookmark.png\"\n                                alt=\"\"\n                            />\n                        </a>\n                        <a href=\"/\">\n                            <StaticImage\n                                src=\"../../data/images/icons/heart.png\"\n                                alt=\"\"\n                            />\n                        </a>\n                    </PostMetaRightSide>\n                </FollowingBlogPostMeta>\n            </FollowingPostContent>\n        </SingleFollowingPost>\n    );\n};\n\nexport default SingleFollowingPosts;\n","import styled, { device } from \"@theme/utils\";\n\nexport const FromFollowingWrap = styled.div`\n    padding-top: 60px;\n    padding-bottom: 60px;\n    ${device.small} {\n        padding-top: 80px;\n        padding-bottom: 80px;\n    }\n`;\n\nexport const FromFollowingHaderArea = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 20px 0;\n    border-top: 1px solid #f3f3f3;\n    border-bottom: 1px solid #f3f3f3;\n    margin-bottom: 40px;\n`;\nexport const FollowingSliderNavigation = styled.div`\n    display: flex;\n    justify-content: space-between;\n    .navigation-button {\n        height: 40px;\n        width: 40px;\n        text-align: center;\n        line-height: 38px;\n        background-color: #f4f4f4;\n        font-size: 24px;\n        border-radius: 50000px;\n        display: inline-block;\n        transition: all 0.3s ease-in-out;\n        &.following-slider-button-prev {\n            margin-left: 10px;\n        }\n    }\n`;\nexport const FromFollowingLeftSide = styled.div`\n    min-width: 100%;\n    max-width: 100%;\n    flex-grow: 1;\n\n    ${device.medium} {\n        min-width: 650px;\n    }\n    ${device.large} {\n        min-width: 850px;\n    }\n`;\n\nexport const FromFollowingRightSide = styled.div`\n    min-width: 100%;\n    flex-grow: 1;\n    ${device.small} {\n        min-width: 335px;\n    }\n    ${device.medium} {\n        min-width: 235px;\n    }\n    ${device.large} {\n        min-width: 235px;\n    }\n    ${device.xlarge} {\n        min-width: 335px;\n    }\n`;\n\nexport const FollowingAddBanner = styled.div`\n    margin-top: 40px;\n`;\n","import styled, { device, themeGet } from \"@theme/utils\";\n\nexport const SingleHeroCategoryItem = styled.div`\n    a {\n        display: block;\n        margin-bottom: 0;\n        margin-top: 35px;\n        position: relative;\n        ${device.small} {\n            margin-top: 0px;\n            margin-bottom: 28px;\n        }\n        ${device.medium} {\n            margin-top: 0px;\n            margin-bottom: 25px;\n        }\n        ${device.large} {\n            margin-bottom: 20px;\n        }\n        ${device.xlarge} {\n            margin-bottom: 30px;\n        }\n\n        .gatsby-image-wrapper-constrained {\n            display: block !important;\n            img {\n                border-radius: 15px;\n                width: 100%;\n            }\n        }\n        &::after {\n            position: absolute;\n            height: 100%;\n            width: 100%;\n            content: \"\";\n            left: 0;\n            top: 0;\n            background-color: rgba(0, 0, 0, 0.7);\n            border-radius: 15px;\n            opacity: 0;\n            visibility: hidden;\n            -webkit-transition: all 0.3s ease-in-out;\n            -o-transition: all 0.3s ease-in-out;\n            transition: all 0.3s ease-in-out;\n        }\n    }\n    .single-hero-hover {\n        opacity: 0;\n        visibility: hidden;\n    }\n    &:hover {\n        a {\n            &::after {\n                opacity: 1;\n                visibility: visible;\n            }\n        }\n        .single-hero-hover {\n            opacity: 1;\n            visibility: visible;\n        }\n    }\n`;\n\nexport const HeroCategoryInnerBox = styled.div`\n    position: absolute;\n    opacity: 0;\n    visibility: hidden;\n    left: 0;\n    top: 50%;\n    transform: translateY(-50%);\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    width: 100%;\n    padding: 10px 20px;\n    color: #fff;\n    z-index: 1;\n    transition: all 0.3s ease-in-out;\n    .icon {\n        font-size: 28px;\n        height: 40px;\n        width: 40px;\n        background-color: ${themeGet(\"colors.primary\")};\n        line-height: 40px;\n        text-align: center;\n        border-radius: 50000px;\n    }\n    ${device.large} {\n        padding: 10px 20px;\n    }\n    ${device.xlarge} {\n        padding: 10px 30px;\n    }\n`;\nexport const Title = styled.h3`\n    color: #ffffff;\n\n    ${device.medium} {\n        font-size: 18px;\n    }\n    ${device.xlarge} {\n        font-size: 20px;\n    }\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"gatsby\";\nimport { slugify } from \"@utils/functions\";\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\nimport { SingleHeroCategoryItem, HeroCategoryInnerBox, Title } from \"./style\";\n\nconst HeroCategory = ({ image, name }) => {\n    const images = getImage(image);\n    return (\n        <SingleHeroCategoryItem>\n            <Link to={`/category/${slugify(name)}`}>\n                <GatsbyImage image={images} alt={name} />\n                <HeroCategoryInnerBox className=\"single-hero-hover\">\n                    <Title>{name}</Title>\n                    <i className=\"icon icofont-long-arrow-right\"></i>\n                </HeroCategoryInnerBox>\n            </Link>\n        </SingleHeroCategoryItem>\n    );\n};\nHeroCategory.propTypes = {\n    image: PropTypes.object,\n    name: PropTypes.string,\n};\nexport default HeroCategory;\n","import styled, { device } from \"@theme/utils\";\n\nexport const SingleHeroBlogPost = styled.div`\n    margin-top: 35px;\n    ${device.large} {\n        margin-top: 25px;\n    }\n    ${device.xlarge} {\n        margin-top: 35px;\n    }\n    &:first-of-type {\n        margin-top: 35px;\n        ${device.large} {\n            margin-top: 0;\n        }\n    }\n`;\nexport const HeroBlogPostArea = styled.div`\n    max-width: 375px;\n    padding-left: 15px;\n    padding-right: 15px;\n`;\nexport const HeroBlogPostTop = styled.div`\n    display: flex;\n    align-items: center;\n    margin-bottom: 20px;\n    ${device.large} {\n        margin-bottom: 10px;\n    }\n`;\nexport const HeroBlogPostCategory = styled.div`\n    margin-right: 25px;\n    a {\n        min-width: 100px;\n        background: #ffebdf;\n        text-align: center;\n        padding: 6px 5px;\n        border-radius: 10px;\n        display: inline-block;\n    }\n`;\nexport const HeroBlogPostAuthor = styled.div`\n    color: #9b9ea1;\n    .hero-blog-post-author a {\n        color: #000000;\n    }\n`;\nexport const HeroBlogPostTitle = styled.h3`\n    margin-bottom: 20px;\n    font-size: 18px;\n    ${device.medium} {\n        margin-bottom: 5px;\n        font-size: 18px;\n    }\n    ${device.xlarge} {\n        margin-top: 20px;\n        font-size: 24px;\n    }\n`;\nexport const PostShortDetails = styled.p``;\nexport const HeroBlogPostMeta = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n`;\nexport const PostMetaLeftSide = styled.div``;\nexport const PostDate = styled.span`\n    position: relative;\n    padding-right: 15px;\n    margin-right: 10px;\n    font-size: 13px;\n    &::after {\n        position: absolute;\n        content: \"\";\n        right: -0px;\n        top: 50%;\n        height: 4px;\n        width: 4px;\n        background: #000000;\n        border-radius: 50000px;\n        -webkit-transform: translateY(-50%);\n        -ms-transform: translateY(-50%);\n        transform: translateY(-50%);\n    }\n    i {\n        margin-right: 3px;\n    }\n`;\nexport const PostReadTime = styled.span`\n    font-size: 13px;\n`;\nexport const PostMetaRightSide = styled.div`\n    a {\n        margin-top: 10px;\n        margin-left: 10px;\n    }\n`;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { slugify } from \"@utils/functions\";\nimport { StaticImage } from \"gatsby-plugin-image\";\nimport { Link } from \"gatsby\";\nimport {\n    SingleHeroBlogPost,\n    HeroBlogPostTop,\n    HeroBlogPostCategory,\n    HeroBlogPostAuthor,\n    HeroBlogPostTitle,\n    PostShortDetails,\n    HeroBlogPostMeta,\n    PostMetaLeftSide,\n    PostDate,\n    PostReadTime,\n    PostMetaRightSide,\n} from \"./style\";\n\nconst HeroBlogPost = ({\n    title,\n    body,\n    date,\n    slug,\n    dateSlug,\n    categories,\n    authorSlug,\n}) => {\n    return (\n        <Fragment>\n            <SingleHeroBlogPost>\n                <HeroBlogPostTop>\n                    <HeroBlogPostCategory>\n                        {categories &&\n                            categories.map((cat, i) => (\n                                <Link\n                                    key={i}\n                                    to={`category/${slugify(cat.name)}`}\n                                    className={`cat-btn ${cat.color}`}\n                                >\n                                    {cat.name}\n                                </Link>\n                            ))}\n                    </HeroBlogPostCategory>\n                    <HeroBlogPostAuthor>\n                        By{\" \"}\n                        <Link to={`/profile/${authorSlug}`}>{authorSlug}</Link>\n                    </HeroBlogPostAuthor>\n                </HeroBlogPostTop>\n                <HeroBlogPostTitle>\n                    <Link to={`/${slug}`}>{title}</Link>\n                </HeroBlogPostTitle>\n                <PostShortDetails>{body}</PostShortDetails>\n                <HeroBlogPostMeta>\n                    <PostMetaLeftSide>\n                        <PostDate>\n                            <i className=\"icofont-ui-calendar\"></i>\n                            <Link to={`/date/${dateSlug}`}>{date}</Link>\n                        </PostDate>\n                        <PostReadTime>14 min read</PostReadTime>\n                    </PostMetaLeftSide>\n                    <PostMetaRightSide>\n                        <Link to=\"/\">\n                            <StaticImage\n                                src=\"../../data/images/icons/small-bookmark.png\"\n                                alt=\"\"\n                            />\n                        </Link>\n                        <Link to=\"/\">\n                            <StaticImage\n                                src=\"../../data/images/icons/heart.png\"\n                                alt=\"\"\n                            />\n                        </Link>\n                    </PostMetaRightSide>\n                </HeroBlogPostMeta>\n            </SingleHeroBlogPost>\n        </Fragment>\n    );\n};\nHeroBlogPost.propTypes = {\n    title: PropTypes.string,\n    thume_image: PropTypes.object,\n    video_link: PropTypes.object,\n    date: PropTypes.string,\n    slug: PropTypes.string,\n    dateSlug: PropTypes.string,\n    categories: PropTypes.array,\n    body: PropTypes.string,\n    authorSlug: PropTypes.string,\n};\nexport default HeroBlogPost;\n","import styled, { device } from \"@theme/utils\";\n\nexport const HeroOneArea = styled.div`\n    background-color: #f7f7f7;\n    padding: 60px 0;\n    ${device.small} {\n        padding: 80px 0;\n    }\n`;\n\nexport const HeroInnerArea = styled.div`\n    display: -ms-flexbox;\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-between;\n    margin-right: -15px;\n    margin-left: -15px;\n    ${device.large} {\n        flex-wrap: nowrap;\n    }\n`;\nexport const HeroCategoryArea = styled.div`\n    width: 100%;\n    max-width: 100%;\n    padding-left: 15px;\n    padding-right: 15px;\n    order: 3;\n    ${device.small} {\n        max-width: 36%;\n        order: 2;\n    }\n    ${device.medium} {\n        max-width: 270px;\n        order: 1;\n    }\n    ${device.large} {\n        max-width: 220px;\n    }\n    ${device.xlarge} {\n        max-width: 290px;\n    }\n`;\nexport const HeroBannerArea = styled.div`\n    padding-left: 15px;\n    padding-right: 15px;\n    order: 1;\n    ${device.small} {\n        max-width: 64%;\n        order: 1;\n    }\n    ${device.medium} {\n        max-width: 63%;\n        order: 2;\n    }\n    ${device.large} {\n        max-width: auto;\n    }\n    a {\n        display: block;\n        padding: 10px;\n        background-color: #fff;\n        border-radius: 15px;\n        img {\n            border-radius: 15px;\n        }\n    }\n`;\nexport const HeroBlogPostArea = styled.div`\n    width: 100%;\n    max-width: 100%;\n    padding-left: 15px;\n    padding-right: 15px;\n    order: 2;\n    ${device.small} {\n        order: 3;\n    }\n    ${device.medium} {\n        order: 3;\n    }\n    ${device.large} {\n        max-width: 375px;\n    }\n`;\n","import styled, { device } from \"@theme/utils\";\n\n// item style\nexport const TrendingSingleItem = styled.article`\n    display: flex;\n    margin-top: 35px;\n`;\n\nexport const TrendingPostThum = styled.div`\n    max-width: 100px;\n    flex: 0 0 auto;\n    ${device.medium} {\n        max-width: 160px;\n    }\n    a {\n        display: block;\n        height: 100%;\n        .gatsby-image-wrapper-constrained {\n            height: 100%;\n        }\n    }\n    img {\n        height: 100%;\n        vertical-align: middle;\n        -o-object-fit: cover;\n        object-fit: cover;\n        border-radius: 10px;\n    }\n`;\nexport const TrendingPostContent = styled.div`\n    margin-left: 15px;\n    ${device.medium} {\n        margin-left: 30px;\n    }\n`;\nexport const TrendingBlogPostTop = styled.div`\n    display: -webkit-box;\n    display: -webkit-flex;\n    display: -ms-flexbox;\n    display: flex;\n    -webkit-box-align: center;\n    -webkit-align-items: center;\n    -ms-flex-align: center;\n    align-items: center;\n    margin-bottom: 15px;\n`;\n\nexport const TrendingBlogPostCategory = styled.div`\n    margin-right: 10px;\n    ${device.medium} {\n        margin-right: 25px;\n    }\n    a {\n        min-width: 50px;\n        text-align: center;\n        padding: 4px 5px;\n        border-radius: 10px;\n        color: #222;\n\n        display: inline-block;\n        font-size: 12px;\n        ${device.medium} {\n            min-width: 100px;\n            font-size: 15px;\n        }\n    }\n`;\n\nexport const TrendingBlogPostAuthor = styled.div`\n    color: #9b9ea1;\n    font-size: 13px;\n    a {\n        color: #000000;\n    }\n    ${device.medium} {\n        font-size: 15px;\n    }\n`;\n\nexport const HrendingBlogPostTitle = styled.h5`\n    margin-bottom: 15px;\n`;\nexport const TrendingBlogPostMeta = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n`;\nexport const PostMetaLeftSide = styled.div``;\n\nexport const PostDate = styled.span`\n    position: relative;\n    padding-right: 10px;\n    margin-right: 10px;\n    font-size: 13px;\n    i {\n        margin-right: 3px;\n    }\n    &::after {\n        position: absolute;\n        content: \"\";\n        right: -0px;\n        top: 50%;\n        height: 4px;\n        width: 4px;\n        background: #000000;\n        border-radius: 50000px;\n        transform: translateY(-50%);\n    }\n`;\nexport const ReadTime = styled.span`\n    font-size: 13px;\n`;\nexport const PostMetaRightSide = styled.span`\n    display: inline-block;\n    ${device.small} {\n        display: inline-block;\n    }\n    a {\n        margin-left: 10px;\n        margin-top: 5px;\n    }\n`;\n","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport { slugify } from \"@utils/functions\";\nimport {\n    StaticImage,\n    GatsbyImage,\n    getImage,\n    withArtDirection,\n} from \"gatsby-plugin-image\";\nimport {\n    TrendingSingleItem,\n    TrendingBlogPostTop,\n    TrendingBlogPostCategory,\n    TrendingBlogPostAuthor,\n    TrendingPostContent,\n    TrendingPostThum,\n    HrendingBlogPostTitle,\n    TrendingBlogPostMeta,\n    PostMetaLeftSide,\n    PostDate,\n    ReadTime,\n    PostMetaRightSide,\n} from \"./style\";\n\nconst TrendingSingleItems = ({\n    title,\n    thume_image,\n    small_image,\n    dateSlug,\n    authorId,\n    authorSlug,\n    categories,\n    date,\n    slug,\n}) => {\n    const images = withArtDirection(getImage(thume_image), [\n        {\n            media: \"(max-width: 1024px)\",\n            image: getImage(thume_image),\n        },\n        {\n            media: \"(max-width: 575px)\",\n            image: getImage(small_image),\n        },\n    ]);\n    return (\n        <TrendingSingleItem>\n            <TrendingPostThum>\n                <Link to={`/${slug}`}>\n                    <GatsbyImage image={images} alt=\"\" />\n                </Link>\n            </TrendingPostThum>\n            <TrendingPostContent>\n                <TrendingBlogPostTop>\n                    <TrendingBlogPostCategory>\n                        {categories &&\n                            categories.map((cat, i) => (\n                                <Link\n                                    key={i}\n                                    to={`/category/${slugify(cat?.name || 'www')}`}\n                                    className={`cat-btn ${cat?.color}`}\n                                >\n                                    {cat?.name}\n                                </Link>\n                            ))}\n                    </TrendingBlogPostCategory>\n                    <TrendingBlogPostAuthor>\n                        By <Link to={`/profile/${authorSlug}`}>{authorId}</Link>\n                    </TrendingBlogPostAuthor>\n                </TrendingBlogPostTop>\n                <HrendingBlogPostTitle>\n                    <Link to={`/${slug}`}>{title}</Link>\n                </HrendingBlogPostTitle>\n                <TrendingBlogPostMeta>\n                    <PostMetaLeftSide>\n                        <PostDate>\n                            <i className=\"icofont-ui-calendar\"></i>\n                            <Link to={`/date/${dateSlug}`}>{date}</Link>\n                        </PostDate>\n                        <ReadTime>10 min read</ReadTime>\n                    </PostMetaLeftSide>\n                    <PostMetaRightSide>\n                        <Link to=\"/\">\n                            <StaticImage\n                                src=\"../../data/images/icons/small-bookmark.png\"\n                                alt=\"\"\n                            />\n                        </Link>\n                        <Link to=\"/\">\n                            <StaticImage\n                                src=\"../../data/images/icons/heart.png\"\n                                alt=\"\"\n                            />\n                        </Link>\n                    </PostMetaRightSide>\n                </TrendingBlogPostMeta>\n            </TrendingPostContent>\n        </TrendingSingleItem>\n    );\n};\n\nexport default TrendingSingleItems;\n","import styled, { device } from \"@theme/utils\";\n\n// item style\nexport const TrendingSingleItem = styled.article`\n    display: flex;\n    margin-top: 35px;\n`;\n\nexport const TrendingPostThum = styled.div`\n    max-width: 100px;\n    flex: 0 0 auto;\n    ${device.large} {\n        max-width: 160px;\n    }\n    a {\n        display: block;\n        height: 100%;\n    }\n    img {\n        height: 100%;\n        vertical-align: middle;\n        -o-object-fit: cover;\n        object-fit: cover;\n        border-radius: 10px;\n    }\n`;\nexport const TrendingPostContent = styled.div`\n    margin-left: 15px;\n    ${device.medium} {\n        margin-left: 30px;\n    }\n`;\nexport const TrendingBlogPostTop = styled.div`\n    display: flex;\n    align-items: center;\n    margin-bottom: 15px;\n`;\n\nexport const TrendingBlogPostCategory = styled.div`\n    margin-right: 10px;\n    ${device.medium} {\n        margin-right: 25px;\n    }\n    a {\n        min-width: 50px;\n        text-align: center;\n        padding: 4px 5px;\n        border-radius: 10px;\n        color: #222;\n        background-color: #ffebdf;\n        display: inline-block;\n        font-size: 12px;\n        ${device.medium} {\n            min-width: 100px;\n            font-size: 15px;\n        }\n    }\n`;\n\nexport const TrendingBlogPostAuthor = styled.div`\n    color: #9b9ea1;\n    font-size: 13px;\n    a {\n        color: #000000;\n    }\n    ${device.medium} {\n        font-size: 15px;\n    }\n`;\n\nexport const HrendingBlogPostTitle = styled.h5`\n    margin-bottom: 15px;\n`;\nexport const TrendingBlogPostMeta = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n`;\nexport const PostMetaLeftSide = styled.div``;\nexport const PostDate = styled.span`\n    position: relative;\n    padding-right: 10px;\n    margin-right: 10px;\n    font-size: 13px;\n    i {\n        margin-right: 3px;\n    }\n    &::after {\n        position: absolute;\n        content: \"\";\n        right: -0px;\n        top: 50%;\n        height: 4px;\n        width: 4px;\n        background: #000000;\n        border-radius: 50000px;\n        transform: translateY(-50%);\n    }\n`;\nexport const ReadTime = styled.span`\n    font-size: 13px;\n`;\nexport const PostMetaRightSide = styled.span`\n    display: inline-block;\n    a {\n        margin-left: 10px;\n        margin-top: 5px;\n    }\n`;\n\nexport const TrendingLargePostThum = styled.div`\n    max-width: 100px;\n    flex: 0 0 auto;\n    ${device.medium} {\n        max-width: 160px;\n    }\n    ${device.xlarge} {\n        max-width: 315px;\n    }\n    a {\n        display: block;\n        height: 100%;\n        .gatsby-image-wrapper-constrained {\n            height: 100%;\n        }\n    }\n    img {\n        height: 100%;\n        vertical-align: middle;\n        -o-object-fit: cover;\n        object-fit: cover;\n        border-radius: 10px;\n    }\n`;\n","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport { slugify } from \"@utils/functions\";\nimport {\n    StaticImage,\n    GatsbyImage,\n    getImage,\n    withArtDirection,\n} from \"gatsby-plugin-image\";\nimport {\n    TrendingSingleItem,\n    TrendingBlogPostTop,\n    TrendingBlogPostCategory,\n    TrendingBlogPostAuthor,\n    TrendingPostContent,\n    HrendingBlogPostTitle,\n    TrendingBlogPostMeta,\n    PostMetaLeftSide,\n    PostDate,\n    ReadTime,\n    PostMetaRightSide,\n    TrendingLargePostThum,\n} from \"./style\";\n\nconst TrendingSingleLargeItems = ({\n    title,\n    thume_image,\n    small_image,\n    date,\n    dateSlug,\n    categories,\n    authorId,\n    authorSlug,\n    slug,\n}) => {\n    const images = withArtDirection(getImage(thume_image), [\n        {\n            media: \"(max-width: 1024px)\",\n            image: getImage(thume_image),\n        },\n        {\n            media: \"(max-width: 575px)\",\n            image: getImage(small_image),\n        },\n    ]);\n    return (\n        <TrendingSingleItem>\n            <TrendingLargePostThum>\n                <Link to={`/${slug}`}>\n                    <GatsbyImage image={images} alt=\"\" />\n                </Link>\n            </TrendingLargePostThum>\n            <TrendingPostContent>\n                <TrendingBlogPostTop>\n                    <TrendingBlogPostCategory>\n                        {categories &&\n                            categories.map((cat, i) => (\n                                <Link\n                                    key={i}\n                                    to={`/category/${slugify(cat?.name || 'ww2')}`}\n                                    className={`cat-btn ${cat?.color}`}\n                                >\n                                    {cat?.name}\n                                </Link>\n                            ))}\n                    </TrendingBlogPostCategory>\n                    <TrendingBlogPostAuthor>\n                        By <Link to={`/profile/${authorSlug}`}>{authorId}</Link>\n                    </TrendingBlogPostAuthor>\n                </TrendingBlogPostTop>\n                <HrendingBlogPostTitle>\n                    <Link to={`/${slug}`}>{title}</Link>\n                </HrendingBlogPostTitle>\n                <TrendingBlogPostMeta>\n                    <PostMetaLeftSide>\n                        <PostDate>\n                            <i className=\"icofont-ui-calendar\"></i>\n                            <Link to={`/date/${dateSlug}`}>{date}</Link>\n                        </PostDate>\n                        <ReadTime>10 min read</ReadTime>\n                    </PostMetaLeftSide>\n                    <PostMetaRightSide>\n                        <Link to=\"/\">\n                            <StaticImage\n                                src=\"../../data/images/icons/small-bookmark.png\"\n                                alt=\"\"\n                            />\n                        </Link>\n                        <Link to=\"/\">\n                            <StaticImage\n                                src=\"../../data/images/icons/heart.png\"\n                                alt=\"\"\n                            />\n                        </Link>\n                    </PostMetaRightSide>\n                </TrendingBlogPostMeta>\n            </TrendingPostContent>\n        </TrendingSingleItem>\n    );\n};\n\nexport default TrendingSingleLargeItems;\n","import styled, { device } from \"@theme/utils\";\n\nexport const TrendingArticleArea = styled.div`\n    margin-bottom: 40px;\n    padding-top: 60px;\n    ${device.small} {\n        padding-top: 80px;\n    }\n`;\nexport const TrendingArticleRow = styled.div`\n    display: flex;\n    justify-content: space-between;\n    margin-right: -15px;\n    margin-left: -15px;\n    flex-wrap: wrap;\n    ${device.large} {\n        flex-wrap: nowrap;\n    }\n`;\nexport const TrendingArticleLeftSide = styled.div`\n    max-width: 100%;\n    padding-left: 15px;\n    padding-right: 15px;\n    ${device.large} {\n        max-width: 50%;\n    }\n    ${device.xlarge} {\n        max-width: 515px;\n    }\n`;\nexport const TrendingArticleRightSide = styled.div`\n    max-width: 100%;\n    padding-left: 15px;\n    padding-right: 15px;\n    ${device.large} {\n        max-width: 50%;\n    }\n    ${device.xlarge} {\n        max-width: 675px;\n    }\n`;\n\nexport const TrendingArticleRighSide = styled.div``;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { graphql, useStaticQuery } from \"gatsby\";\nimport TrendingSingleItems from \"../../../components/trending-article-item\";\nimport TrendingSingleLargeItems from \"../../../components/trending-article-large-item\";\nimport {\n    TrendingArticleArea,\n    TrendingArticleRow,\n    TrendingArticleLeftSide,\n    TrendingArticleRightSide,\n} from \"./style\";\n\nconst TredingArticle = (props) => {\n    const tredingArticleQuery = useStaticQuery(graphql`\n        query TredingArticleQueryQuery {\n            smallTredingArticle: allMarkdownRemark(\n                sort: { frontmatter: { date: DESC } }\n                filter: { frontmatter: { is_trending_article: { eq: true } } }\n                limit: 3\n            ) {\n                edges {\n                    node {\n                        id\n                        frontmatter {\n                            title\n                            video_link\n                            categories {\n                                name\n                                color\n                            }\n                            date(formatString: \"DD-MM-YYYY\")\n                            smallImage: thume_image {\n                                childImageSharp {\n                                    gatsbyImageData(\n                                        width: 100\n                                        height: 169\n                                        layout: CONSTRAINED\n                                        quality: 100\n                                    )\n                                }\n                            }\n                            thume_image {\n                                childImageSharp {\n                                    gatsbyImageData(\n                                        width: 160\n                                        height: 160\n                                        layout: CONSTRAINED\n                                        quality: 100\n                                    )\n                                }\n                            }\n                        }\n                        fields {\n                            slug\n                            authorId\n                            dateSlug\n                        }\n                        excerpt(pruneLength: 225)\n                    }\n                }\n            }\n            largeTredingArticle: allMarkdownRemark(\n                sort: { frontmatter: { date: DESC } }\n                filter: { frontmatter: { is_trending_article: { eq: true } } }\n                limit: 3\n                skip: 3\n            ) {\n                edges {\n                    node {\n                        id\n                        frontmatter {\n                            title\n                            date(formatString: \"DD-MM-YYYY\")\n                            video_link\n                            categories {\n                                name\n                                color\n                            }\n                            smallImage: thume_image {\n                                childImageSharp {\n                                    gatsbyImageData(\n                                        width: 100\n                                        height: 169\n                                        layout: CONSTRAINED\n                                        quality: 100\n                                    )\n                                }\n                            }\n                            thume_image {\n                                childImageSharp {\n                                    gatsbyImageData(\n                                        width: 315\n                                        height: 160\n                                        layout: CONSTRAINED\n                                        quality: 100\n                                    )\n                                }\n                            }\n                        }\n                        fields {\n                            slug\n                            authorId\n                            dateSlug\n                        }\n                        excerpt(pruneLength: 225)\n                    }\n                }\n            }\n        }\n    `);\n\n    const smalltredingArticleData =\n        tredingArticleQuery.smallTredingArticle.edges;\n    const largetredingArticleData =\n        tredingArticleQuery.largeTredingArticle.edges;\n\n    return (\n        <TrendingArticleArea>\n            <Container>\n                <Row>\n                    <Col lg={8} xs={7}>\n                        <div className=\"section-title mb-40\">\n                            <h3>Trending Article</h3>\n                        </div>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col lg={12}>\n                        <TrendingArticleRow>\n                            <TrendingArticleLeftSide>\n                                {smalltredingArticleData &&\n                                    smalltredingArticleData.map(\n                                        (item, index) => {\n                                            return (\n                                                <TrendingSingleItems\n                                                    key={`trending-${index}`}\n                                                    title={\n                                                        item.node.frontmatter\n                                                            .title\n                                                    }\n                                                    thume_image={\n                                                        item.node.frontmatter\n                                                            .thume_image\n                                                    }\n                                                    small_image={\n                                                        item.node.frontmatter\n                                                            .smallImage\n                                                    }\n                                                    categories={\n                                                        item.node.frontmatter\n                                                            .categories\n                                                    }\n                                                    slug={item.node.fields.slug}\n                                                    authorSlug={\n                                                        item.node.fields\n                                                            .authorId\n                                                    }\n                                                    authorId={\n                                                        item.node.fields\n                                                            .authorId\n                                                    }\n                                                    postAuthor={\n                                                        item.node.frontmatter\n                                                            .author\n                                                    }\n                                                    body={item.node.excerpt}\n                                                    date={\n                                                        item.node.frontmatter\n                                                            .date\n                                                    }\n                                                    dateSlug={\n                                                        item.node.fields\n                                                            .dateSlug\n                                                    }\n                                                />\n                                            );\n                                        }\n                                    )}\n                            </TrendingArticleLeftSide>\n\n                            <TrendingArticleRightSide>\n                                {largetredingArticleData &&\n                                    largetredingArticleData.map(\n                                        (followingBlog, i) => {\n                                            return (\n                                                <TrendingSingleLargeItems\n                                                    key={`largetrending-${i}`}\n                                                    title={\n                                                        followingBlog.node\n                                                            .frontmatter.title\n                                                    }\n                                                    thume_image={\n                                                        followingBlog.node\n                                                            .frontmatter\n                                                            .thume_image\n                                                    }\n                                                    small_image={\n                                                        followingBlog.node\n                                                            .frontmatter\n                                                            .smallImage\n                                                    }\n                                                    categories={\n                                                        followingBlog.node\n                                                            .frontmatter\n                                                            .categories\n                                                    }\n                                                    slug={\n                                                        followingBlog.node\n                                                            .fields.slug\n                                                    }\n                                                    authorSlug={\n                                                        followingBlog.node\n                                                            .fields.authorId\n                                                    }\n                                                    authorId={\n                                                        followingBlog.node\n                                                            .fields.authorId\n                                                    }\n                                                    postAuthor={\n                                                        followingBlog.node\n                                                            .frontmatter.author\n                                                    }\n                                                    body={\n                                                        followingBlog.node\n                                                            .excerpt\n                                                    }\n                                                    date={\n                                                        followingBlog.node\n                                                            .frontmatter.date\n                                                    }\n                                                    dateSlug={\n                                                        followingBlog.node\n                                                            .fields.dateSlug\n                                                    }\n                                                />\n                                            );\n                                        }\n                                    )}\n                            </TrendingArticleRightSide>\n                        </TrendingArticleRow>\n                    </Col>\n                </Row>\n            </Container>\n        </TrendingArticleArea>\n    );\n};\n\nTredingArticle.propTypes = {};\n\nexport default TredingArticle;\n","import styled, { device } from \"@theme/utils\";\n\nexport const SingleTrendingTopicItem = styled.div`\n    text-align: center;\n    position: relative;\n    a {\n        display: block;\n        min-width: 120px;\n        max-width: 100%;\n        position: relative;\n        border-radius: 15px;\n        img {\n            border-radius: 15px;\n            width: 100%;\n        }\n        &::after {\n            position: absolute;\n            bottom: 0;\n            left: 0;\n            width: 100%;\n            height: 50%;\n            display: block;\n            z-index: 1;\n            content: \"\";\n            background: linear-gradient(to bottom, rgba(0, 0, 0, 0), #333 100%);\n            transition: opacity 0.65s cubic-bezier(0.05, 0.2, 0.1, 1);\n            cursor: pointer;\n            border-radius: 15px;\n        }\n    }\n`;\nexport const Title = styled.h4`\n    position: absolute;\n    bottom: 20px;\n    text-align: center;\n    width: 100%;\n    color: #fff;\n    z-index: 2;\n`;\n","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport { slugify } from \"@utils/functions\";\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\nimport { SingleTrendingTopicItem, Title } from \"./style\";\n\nconst TrendingTopicItems = ({ name, color, image }) => {\n    const images = getImage(image);\n    return (\n        <SingleTrendingTopicItem>\n            <Link to={`/category/${slugify(name)}`}>\n                <GatsbyImage image={images} alt=\"\" />\n                <Title>{name}</Title>\n            </Link>\n        </SingleTrendingTopicItem>\n    );\n};\n\nexport default TrendingTopicItems;\n","import styled, { device, themeGet } from \"@theme/utils\";\nexport const BgGray1Area = styled.div`\n    background-color: #fafafa;\n`;\nexport const TrendingTopicArea = styled.div`\n    padding-top: 60px;\n    padding-bottom: 60px;\n    ${device.small} {\n        padding-top: 80px;\n        padding-bottom: 80px;\n    }\n`;\n\nexport const TrendingTopicSectionTitle = styled.div`\n    max-width: 232px;\n    padding: 0 15px;\n    margin-bottom: 40px;\n`;\n\nexport const TrendingTopicNavigation = styled.div``;\n\nexport const NavigationButton = styled.div`\n    height: 40px;\n    width: 40px;\n    text-align: center;\n    line-height: 38px;\n    background-color: #222;\n    font-size: 24px;\n    border-radius: 50000px;\n    color: #fff;\n    display: inline-block;\n    transition: all 0.3s ease-in-out;\n    &:last-child {\n        margin-left: 10px;\n    }\n    &:hover {\n        background-color: ${themeGet(\"colors.primary\")};\n        color: #fff;\n    }\n    margin-top: 30px;\n`;\nexport const TrendingTopicItemWrap = styled.div`\n    max-width: 968px;\n`;\nexport const SingleTrendingTopicItem = styled.div``;\n","import styled, { device } from \"@theme/utils\";\n\nexport const SingleLatestPost = styled.div`\n    display: -webkit-box;\n    display: -webkit-flex;\n    display: -ms-flexbox;\n    display: flex;\n    -webkit-box-align: center;\n    -webkit-align-items: center;\n    -ms-flex-align: center;\n    align-items: center;\n    margin-top: 20px;\n`;\nexport const LatestPostThum = styled.div`\n    -webkit-flex-basis: 0 0 auto;\n    -ms-flex-preferred-size: 0 0 auto;\n    flex-basis: 0 0 auto;\n    min-width: 84px;\n    img {\n        border-radius: 10px;\n    }\n`;\nexport const LatestPostContent = styled.div`\n    margin-left: 20px;\n`;\nexport const Title = styled.h6`\n    margin-top: 0px;\n    font-size: 15px;\n`;\nexport const LatestPostMeta = styled.div`\n    font-size: 12px;\n    margin-top: 10px;\n`;\nexport const PostDate = styled.span`\n    position: relative;\n    padding-right: 10px;\n    margin-right: 6px;\n    i {\n        margin-right: 5px;\n    }\n`;\nexport const PostTime = styled.span``;\n","import { Link } from \"gatsby\";\nimport React from \"react\";\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\nimport {\n    SingleLatestPost,\n    LatestPostThum,\n    LatestPostContent,\n    Title,\n    LatestPostMeta,\n    PostDate,\n} from \"./style\";\n\nconst SideLatestPosts = ({ title, date, thume_image, slug, dateSlug }) => {\n    const image = getImage(thume_image);\n    return (\n        <SingleLatestPost>\n            <LatestPostThum>\n                <Link to={`/${slug}`}>\n                    <GatsbyImage image={image} alt=\"\" />\n                </Link>\n            </LatestPostThum>\n            <LatestPostContent>\n                <Title>\n                    <Link to={`/${slug}`}>{title}</Link>\n                </Title>\n                <LatestPostMeta>\n                    <PostDate>\n                        <i className=\"icofont-ui-calendar\"></i>\n                        <Link to={`/date/${dateSlug}`}>{date}</Link>\n                    </PostDate>\n                </LatestPostMeta>\n            </LatestPostContent>\n        </SingleLatestPost>\n    );\n};\n\nexport default SideLatestPosts;\n","import styled, { device } from \"@theme/utils\";\n\nexport const LatestPostInnerWrap = styled.div`\n\n    padding: 30px 24px;\n    background: #fafafa;\n    border-radius: 10px;\n`;\nexport const LatestPostHeader = styled.div``;\nexport const LatestPostBox = styled.div``;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { graphql, useStaticQuery } from \"gatsby\";\nimport SideLatestPosts from \"../../components/side-latest-post\";\nimport { LatestPostInnerWrap, LatestPostHeader, LatestPostBox } from \"./style\";\nconst LatestPostArea = (props) => {\n    const sideLatestPostsQuery = useStaticQuery(graphql`\n        query SideLatestPostsQuery {\n            latestPost: allMarkdownRemark(\n                sort: { frontmatter: { date: DESC } }\n                limit: 5\n            ) {\n                edges {\n                    node {\n                        id\n                        frontmatter {\n                            title\n                            date(formatString: \"DD MMMM YYYY\")\n                            format\n                            is_featured\n                            thume_image {\n                                childImageSharp {\n                                    gatsbyImageData(\n                                        width: 84\n                                        height: 84\n                                        quality: 100\n                                    )\n                                }\n                            }\n                        }\n                        fields {\n                            slug\n                            dateSlug\n                        }\n                    }\n                }\n            }\n        }\n    `);\n    const sideLatestPostsData = sideLatestPostsQuery.latestPost.edges;\n\n    return (\n        <LatestPostInnerWrap>\n            <LatestPostHeader>\n                <div className=\"section-title\">\n                    <h3>Latest Post</h3>\n                </div>\n            </LatestPostHeader>\n            <LatestPostBox>\n                {sideLatestPostsData &&\n                    sideLatestPostsData.map((latestPosts, i) => {\n                        return (\n                            <SideLatestPosts\n                                key={i}\n                                title={latestPosts.node.frontmatter.title}\n                                thume_image={\n                                    latestPosts.node.frontmatter.thume_image\n                                }\n                                date={latestPosts.node.frontmatter.date}\n                                dateSlug={latestPosts.node.fields.dateSlug}\n                                slug={latestPosts.node.fields.slug}\n                            />\n                        );\n                    })}\n            </LatestPostBox>\n        </LatestPostInnerWrap>\n    );\n};\n\nLatestPostArea.propTypes = {};\n\nexport default LatestPostArea;\n","/* eslint-disable prettier/prettier */\n\nconst getSiblings = function (elem) {\n    var siblings = [];\n    var sibling = elem.parentNode.firstChild;\n    while (sibling) {\n        if (sibling.nodeType === 1 && sibling !== elem) {\n            siblings.push(sibling);\n        }\n        sibling = sibling.nextSibling;\n    }\n    return siblings;\n};\n\nconst getClosest = function (elem, selector) {\n    for (; elem && elem !== document; elem = elem.parentNode) {\n        if (elem.matches(selector)) return elem;\n    }\n    return null;\n};\n\nconst slugify = function (text) {\n    return text\n        .toString()\n        .toLowerCase()\n        .replace(/\\s+/g, \"-\") // Replace spaces with -\n        .replace(/[^\\w-]+/g, \"\") // Remove all non-word chars\n        .replace(/--+/g, \"-\") // Replace multiple - with single -\n        .replace(/^-+/, \"\") // Trim - from start of text\n        .replace(/-+$/, \"\"); // Trim - from end of text\n};\n\nconst createList = ({ list, separator = \",\" }) => {\n    if (!list) return;\n    return list.map((text, index) => {\n        let sep;\n        if (list.length !== index + 1) {\n            sep = separator;\n        }\n        return { text, sep };\n    });\n};\n\nconst flatDeep = (arr, d = 1) => {\n    return d > 0\n        ? arr.reduce(\n              (acc, val) =>\n                  acc.concat(Array.isArray(val) ? flatDeep(val, d - 1) : val),\n              []\n          )\n        : arr.slice();\n};\n\nfunction truncateString(str, num, dots = true) {\n    let endDots = dots ? \"...\" : \"\";\n    if (str.length <= num) {\n        return str;\n    }\n    return str.slice(0, num) + endDots;\n}\n\nfunction slideUp(element, duration = 500) {\n    return new Promise(function (resolve, reject) {\n        element.style.height = element.offsetHeight + \"px\";\n        element.style.transitionProperty = `height, margin, padding`;\n        element.style.transitionDuration = duration + \"ms\";\n        element.offsetHeight;\n        element.style.overflow = \"hidden\";\n        element.style.height = 0;\n        element.style.paddingTop = 0;\n        element.style.paddingBottom = 0;\n        element.style.marginTop = 0;\n        element.style.marginBottom = 0;\n        window.setTimeout(function () {\n            element.style.display = \"none\";\n            element.style.removeProperty(\"height\");\n            element.style.removeProperty(\"padding-top\");\n            element.style.removeProperty(\"padding-bottom\");\n            element.style.removeProperty(\"margin-top\");\n            element.style.removeProperty(\"margin-bottom\");\n            element.style.removeProperty(\"overflow\");\n            element.style.removeProperty(\"transition-duration\");\n            element.style.removeProperty(\"transition-property\");\n            resolve(false);\n        }, duration);\n    });\n}\n\nfunction slideDown(element, duration = 500) {\n    return new Promise(function (resolve, reject) {\n        element.style.removeProperty(\"display\");\n        let display = window.getComputedStyle(element).display;\n\n        if (display === \"none\") display = \"block\";\n\n        element.style.display = display;\n        let height = element.offsetHeight;\n        element.style.overflow = \"hidden\";\n        element.style.height = 0;\n        element.style.paddingTop = 0;\n        element.style.paddingBottom = 0;\n        element.style.marginTop = 0;\n        element.style.marginBottom = 0;\n        element.offsetHeight;\n        element.style.transitionProperty = `height, margin, padding`;\n        element.style.transitionDuration = duration + \"ms\";\n        element.style.height = height + \"px\";\n        element.style.removeProperty(\"padding-top\");\n        element.style.removeProperty(\"padding-bottom\");\n        element.style.removeProperty(\"margin-top\");\n        element.style.removeProperty(\"margin-bottom\");\n        window.setTimeout(function () {\n            element.style.removeProperty(\"height\");\n            element.style.removeProperty(\"overflow\");\n            element.style.removeProperty(\"transition-duration\");\n            element.style.removeProperty(\"transition-property\");\n        }, duration);\n    });\n}\n\nfunction slideToggle(element, duration = 500) {\n    if (window.getComputedStyle(element).display === \"none\") {\n        return slideDown(element, duration);\n    } else {\n        return slideUp(element, duration);\n    }\n}\n\nmodule.exports = {\n    slugify,\n    getSiblings,\n    getClosest,\n    createList,\n    flatDeep,\n    truncateString,\n    slideUp,\n    slideDown,\n    slideToggle,\n};\n"],"names":["FollowingAuthorArea","styled","div","_templateObject","_taggedTemplateLiteralLoose","AuthorImage","_templateObject2","AuthorTitle","_templateObject3","AuthorName","h4","_templateObject4","AuthorDegination","p","_templateObject5","AuthorDetails","_templateObject6","AuthorDetailsText","_templateObject7","AuthorPostShare","_templateObject8","ButtonBox","ul","_templateObject9","_templateObject10","_ref","postAuthorName","postAuthordescription","postAuthorImage","postAuthorBio","authorSlug","image","getImage","jsx","GatsbyImage","alt","Link","to","Social","sx","mt","shape","space","SocialLink","href","className","Button","path","size","fontSize","a","device","small","h6","themeGet","span","_templateObject11","_templateObject12","h3","_templateObject13","xlarge","h5","medium","large","TrendingSingleItem","article","TrendingPostThum","TrendingPostContent","TrendingBlogPostTop","TrendingBlogPostCategory","TrendingBlogPostAuthor","HrendingBlogPostTitle","TrendingBlogPostMeta","PostMetaLeftSide","PostDate","ReadTime","PostMetaRightSide","title","thume_image","small_image","dateSlug","authorId","categories","date","slug","images","withArtDirection","media","___EmotionJSX","map","cat","i","key","slugify","name","color","StaticImage","src","__imageData","require","TrendingLargePostThum","TrendingArticleArea","TrendingArticleRow","TrendingArticleLeftSide","TrendingArticleRightSide","props","tredingArticleQuery","useStaticQuery","smalltredingArticleData","smallTredingArticle","edges","largetredingArticleData","largeTredingArticle","Container","Row","Col","lg","xs","item","index","TrendingSingleItems","node","frontmatter","smallImage","fields","postAuthor","author","body","excerpt","followingBlog","TrendingSingleLargeItems","SingleLatestPost","LatestPostThum","LatestPostContent","Title","LatestPostMeta","LatestPostInnerWrap","LatestPostHeader","LatestPostBox","sideLatestPostsData","latestPost","latestPosts","SideLatestPosts","flatDeep","arr","d","reduce","acc","val","concat","Array","isArray","slice","slideUp","element","duration","Promise","resolve","reject","style","height","offsetHeight","transitionProperty","transitionDuration","overflow","paddingTop","paddingBottom","marginTop","marginBottom","window","setTimeout","display","removeProperty","slideDown","getComputedStyle","module","exports","text","toString","toLowerCase","replace","getSiblings","elem","siblings","sibling","parentNode","firstChild","nodeType","push","nextSibling","getClosest","selector","document","matches","createList","list","separator","sep","length","truncateString","str","num","dots","endDots","slideToggle"],"sourceRoot":""}