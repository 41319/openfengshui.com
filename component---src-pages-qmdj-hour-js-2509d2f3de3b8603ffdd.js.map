{"version":3,"sources":["webpack:///./src/components/Square/Styles.js","webpack:///./src/components/Square/index.js","webpack:///./src/pages/qmdj/hour.js","webpack:///./src/components/Square/QiMen.js","webpack:///./src/components/QiMen/index.js","webpack:///./src/containers/QiMen.js","webpack:///./src/pages/qmdj/common.js","webpack:///./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js"],"names":["Symbol","styled","div","props","includes","index","width","Square","inline","background","data","Template","direction","onSquarePressed","colorLookup","defaultColorLookup","base","global","colors","onClick","queryString","require","isBrowser","window","Home","qs","parse","location","search","useState","description","setDescription","ju","setJu","profile","setProfile","mode","setMode","dt","isNaN","parseISO","getTime","Date","useEffect","foundChart","getHourChart","map","e","title","label","chartType","date","format","assign","chart","initialDate","heading","categories","executionlist","filter","heaven","earth","i","rating","dateObject","color","align","fill","pad","more","QiMen","isYinChart","t","useTranslation","size","React","useContext","ResponsiveContext","textColor","Text","weight","getColor","star","god","0","1","2","3","4","5","6","7","8","find","void","bazi","GanZhiHour","ganzhi","substr","GanZhiDay","GanZhiMonth","GanZhiYear","structure","replace","door","BoxWrapper","Box","alignSelf","justify","wrap","top","bottom","left","right","withDirection","border","isoString","emptiness","onDateChanged","handleSearch","selectedDate","qimenChart","setQimenChart","isYangChart","margin","client","slot","getChart","_objectWithoutPropertiesLoose","source","excluded","key","target","sourceKeys","Object","keys","length","indexOf"],"mappings":"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","file":"component---src-pages-qmdj-hour-js-2509d2f3de3b8603ffdd.js","sourcesContent":["import styled from 'styled-components'\n\nexport const Symbol = styled.div`\n    position absolute;\n    ${props => [0, 3, 6].includes(props.index) ? 'left: 10px;' : '' }\n    ${props => [0, 3, 6].includes(props.index) ? 'left: 10px;' : '' }\n    ${props => [2, 5, 8].includes(props.index) ? 'right: 10px;' : '' }\n    ${props => [6, 7, 8].includes(props.index) ? 'bottom: 10px;' : '' }\n    ${props => [1, 4, 7].includes(props.index) ? 'left: 50%;' : '' }\n    ${props => [1, 4, 7].includes(props.index) ? 'margin-left: -10px;' : '' }\n    ${props => [3].includes(props.index) ? 'top: 50%; margin-top: -20px;' : '' }\n    width: ${props => props.width ? props.width : '20px'};\n    ${props => props.width ? 'left: 0;': ''};\n    text-align: center;\n`","import React from 'react';\nimport styled from 'styled-components'\nimport { base } from 'grommet'\nconst Square = styled.div`\n  width: 100%;\n  ${props => props.inline ? '' : 'padding-bottom: 100%;' }\n  \n  position: relative;\n  display: flex;\n  ${props => props.background ? `background-color: ${props.background}` : ''}\n`\n\nconst index = ({ index, inline, data, Template, direction, onSquarePressed, colorLookup}) => {\n    const defaultColorLookup = {\t\n        \"SE\": base.global.colors['status-ok'], \t\n        \"S\": base.global.colors['status-error'], \t\n        \"SW\": base.global.colors['neutral-4'], \t\n        \"E\": base.global.colors['status-ok'],  \t\n        \"\": base.global.colors['neutral-4'],  \t\n        \"W\": base.global.colors['dark-3'],  \t\n        \"NE\": base.global.colors['neutral-4'],  \t\n        \"N\": base.global.colors['neutral-3'],  \t\n        \"NW\": base.global.colors['dark-3'], \t\n    }\n    return (\n        <Square \n            inline={inline}\n            onClick={() => onSquarePressed && onSquarePressed(data)} \n            background={(colorLookup && colorLookup[direction]) || defaultColorLookup[direction]}\n        >\n            <Template direction={direction} {...data} />\n        </Square>\n    );\n}\n\nexport default index;","import React, { useState, useEffect } from \"react\"\nimport Layout from '../../containers/layout'\nimport { Accordion, Box, Text, AccordionPanel } from 'grommet';\nimport { getZhiRunHourChart as getHourChart } from '../../cm-lib/QiMen'\nimport { format, parseISO } from 'date-fns';\nimport Common from './common'\nimport data from '../../data/execution.json'\nimport DateTimePicker from '../../components/DateTimePicker'\nimport { assign } from '../../helpers'\nconst queryString = require('query-string');\n\n\nconst isBrowser = typeof window !== `undefined`\n\nconst Home = () => {\n\n  const qs = isBrowser && queryString.parse(window && window.location.search)\n  const [description, setDescription] = useState(null)\n  const [ju, setJu] = useState(null)\n  const [profile, setProfile] = useState(null)\n  const [mode, setMode] = useState(qs.mode || 'Profile')\n  const dt = isNaN(parseISO(qs.dt).getTime()) ? new Date() : parseISO(qs.dt)\n\n  useEffect(() => {\n    const foundChart = getHourChart(dt)\n    setJu(foundChart.ju)\n    setProfile(foundChart.profile && foundChart.profile.map(e => ({\n      title: `${e.title}: ${e.label}`,\n      description: e.description\n    })))\n\n  }, [])\n  useEffect(() => {\n    if(mode === 'Profile') {\n      profile && setDescription(profile)\n    } else {\n      setDescription([])\n    }\n    \n  }, [mode, profile])\n\n  return <Layout>\n    <Common\n    chartType=\"Hour Chart\"\n    onClick={date => {\n      const dt = format(date, 'yyyy-MM-dd HH:mm')\n      isBrowser && window.location.assign(`?dt=${dt}&mode=${mode}`)\n    }}\n    mode={mode}\n    chart={ju}\n    initialDate={dt}\n    heading=\"Qi Men Dun Jia Hour Chart\"\n\n    onSquarePressed={(e) => {\n      const categories = [\n        'Business',\n        'Relationship',\n        'Education',\n        'Health',\n        'Lesuire'\n      ]\n      const executionlist = data.filter(search => e.heaven === search.heaven && e.earth === search.earth)\n      .map((e, i) => ({\n        title: `${e.heaven}-${e.earth} ${categories[i]}: ${e.rating}`,\n        description: e.description\n      }))\n      mode === 'Execution' && setDescription(executionlist)\n    }}\n  />\n      <DateTimePicker     \n    onClick={date => {\n      const dt = format(date, 'yyyy-MM-dd HH:mm')\n      assign(`?dt=${dt}`)\n    }} \n    dateObject={dt}\n    />\n  <br />\n    <Box direction=\"row-responsive\">\n      {\n        [{ color: 'status-warning', mode: 'Profile' }, \n        { color: 'status-ok', mode: 'Execution' }].map(e => <Box \n          onClick={() => setMode(e.mode)}\n          align=\"center\" color=\"white\"  background={e.mode === mode ? 'brand' : 'black'} fill=\"horizontal\" pad=\"small\">\n          <Text color=\"white\"> { e.mode }</Text>\n        </Box>)\n      }\n    </Box>\n\n  <Accordion>\n    {\n      description && description.map((e, i) => <AccordionPanel \n      label={e.title}>\n      {\n        <Box pad=\"medium\" background=\"light-2\">\n        <Text> { ((mode !== 'Execution') || (mode === 'Execution' && qs.more)) && e.description } </Text>\n          </Box>\n      }\n    </AccordionPanel>)\n    }\n  </Accordion>\n  </Layout>\n}\n\nexport default Home\n","import React from 'react';\nimport { Text, ResponsiveContext } from 'grommet'\nimport { useTranslation } from 'react-i18next';\nimport { Symbol } from './Styles';\nimport { format, parseISO } from 'date-fns';\nimport { getColor } from '../../cm-lib/QiMen'\n\nconst QiMen = ({ chartType, index, isYinChart, ...props }) => {\n    const cardinal = [\"SE\", \"S\", \"SW\", \"E\", \"\", \"W\", \"NE\", \"N\", \"NW\"]\n    \n    const branchToGrid = {\n        0: ['辰', '巳'],\n        1: ['午'],\n        2: ['未', '申'],\n        3: ['卯'],\n        4: [],\n        5: ['酉'],\n        6: ['丑', '寅'],\n        7: ['子'],\n        8: ['亥', '戌'],\n    }\n    \n    const { t } = useTranslation()\n    const size = React.useContext(ResponsiveContext);\n    const textColor = isYinChart && [0, 3, 6, 7].includes(index) || !isYinChart && [1, 2, 5, 8].includes(index) ? 'black' : 'black';\n    return <>\n        <Symbol index={0}>\n\n            <Text weight=\"bold\" color={getColor(props.heaven)} size={size}>{ props.heaven }</Text>\n            <Text weight=\"bold\" color={textColor} size=\"10px\"></Text>\n        </Symbol>\n        <Symbol index={1}>\n            <Text weight=\"bold\" color={getColor(props.star)} size={size}>{ props.star }</Text>\n            <Text weight=\"bold\" color={getColor(props.star)} size=\"10px\">{ t(props.star) }</Text>\n        </Symbol>\n        <Symbol index={2}>\n            <Text color={'black'} size={size}>{ props.god }</Text>\n            <Text color={'black'} size=\"10px\">{ t(props.god) }</Text>\n        </Symbol>\n\n        <Symbol index={3}  width=\"100%\">\n            <Text color={textColor}  size=\"10px\">{ branchToGrid[index].find(e => props.void.includes(e)) && 'void' }</Text>\n            {\n                index === 4 && \n                <>\n                <Text size=\"14px\" color={textColor}>\n                    { chartType }\n                </Text>\n                <br />\n                <Text size=\"14px\" color={textColor}>\n                    { props.date && format(parseISO(props.date), 'd MMM yyyy HH:mm') }\n                </Text>\n                <br />\n                {\n                    props.bazi && <Text color=\"black\" size=\"14px\">\n                        {\n                            props.bazi.GanZhiHour.ganzhi.substr(0, 1)\n                        }\n                        {\n                            props.bazi.GanZhiDay.ganzhi.substr(0, 1)\n                        }\n                        {\n                            props.bazi.GanZhiMonth.ganzhi.substr(0, 1)\n                        }\n                        {\n                            props.bazi.GanZhiYear.ganzhi.substr(0, 1)\n                        }\n                    </Text>\n                }\n                <br />\n                {\n                    props.bazi && <Text color=\"black\" size=\"14px\">\n                    {\n                        props.bazi.GanZhiHour.ganzhi.substr(1, 1)\n                    }\n                    {\n                        props.bazi.GanZhiDay.ganzhi.substr(1, 1)\n                    }\n                    {\n                        props.bazi.GanZhiMonth.ganzhi.substr(1, 1)\n                    }\n                    {\n                        props.bazi.GanZhiYear.ganzhi.substr(1, 1)\n                    }\n                    </Text>\n                }\n\n                </>\n                \n            }\n\n            \n        </Symbol>\n        {\n            index === 4 && <Symbol index={4}>\n            <Text  color=\"black\" size={size}>\n                { props.structure.replace('F', 'Yin').replace('M', 'Yang') }\n            </Text>\n            \n            </Symbol>\n        }\n\n        <Symbol index={6}>\n            {\n                index !== 4 && <Text color={getColor(props.earth)} size={size}>{ props.earth }</Text>\n            }\n            <Text color={textColor} size=\"10px\"></Text>\n        </Symbol>\n        <Symbol index={7}>\n            <Text weight=\"bold\" color={getColor(props.door)} size={size}>{ props.door }</Text>\n            <Text weight=\"bold\" color={getColor(props.door)} size=\"10px\">{ t(props.door) }</Text>\n        </Symbol>\n        <Symbol index={8}>\n            <Text color={textColor} size={size}>{ cardinal[index] }</Text>\n        </Symbol>\n        </>\n    ;\n}\n\nexport default QiMen;","import React from \"react\"\nimport { Box, base } from 'grommet';\nimport styled from 'styled-components'\nimport Square from '../Square'\nimport QiMen from '../Square/QiMen'\nimport { withDirection } from '../../helpers'\n\nconst BoxWrapper = styled(Box)`\n  width: 32%;\n\n`\n\nconst Home = ({ chartType, chart, onClick, onSquarePressed }) => {\n\n  const isYinChart = chart && chart.chart && chart.structure.search('Yin') > -1;\n  const highlight = '#CCCCCC'\n  const lighter = '#F2F2F2';\n  const colorLookup = {\n    \"SE\": isYinChart ? highlight : lighter, \n    \"S\": !isYinChart ? highlight : lighter, \n    \"SW\": !isYinChart ? highlight : lighter, \n    \"E\": isYinChart ? highlight : lighter, \n    \"\": lighter, \n    \"W\": !isYinChart ? highlight : lighter, \n    \"NE\": isYinChart ? highlight : lighter, \n    \"N\": isYinChart ? highlight : lighter, \n    \"NW\": !isYinChart ? highlight : lighter, \n  }\n\n  return <>\n  <Box \n    alignSelf=\"center\"\n    justify=\"center\"\n    direction=\"row\"\n    wrap={true}\n    fill=\"horizontal\"\n    pad={{\n      top: '2%',\n      bottom: '2%',\n      left: '0%',\n      right: '0%'\n    }}\n    background=\"brand\"\n  >\n\n  {\n    chart && chart.chart && withDirection(chart.chart).map((e, i) => <BoxWrapper\n      border={true}\n    >\n    <Square \n        direction={e.direction}\n        onSquarePressed={onSquarePressed}\n        data={{\n          date: chart.isoString,\n          bazi: chart.bazi,\n          chartType: chartType,\n          void: chart.emptiness,\n          structure: chart.structure,\n          ...e,\n          index: i,\n          isYinChart,\n        }} \n        colorLookup={colorLookup}\n        Template={QiMen} />\n        \n    </BoxWrapper>)\n  }\n  </Box>\n  </>\n}\n\nexport default Home\n","import React, { useState, useEffect } from \"react\"\nimport { Box, Text } from 'grommet';\nimport QiMenChart from '../components/QiMen'\nimport { Adsense } from '@ctrl/react-adsense';\n\nconst Home = ({ chartType, onClick, chart, initialDate, onDateChanged, date, handleSearch, onSquarePressed }) => {\n  const [selectedDate] = useState(date || new Date())\n  const [qimenChart, setQimenChart] = useState({})\n  const isYangChart = chart && chart.chart && chart.structure.search('Yang') > -1 || chart && chart.chart && chart.structure.search('M') > -1\n  useEffect(() => {\n    onDateChanged && onDateChanged(selectedDate, setQimenChart)\n  }, [selectedDate])\n\n  return <>\n    \n    <Box\n        direction=\"row\"\n    >\n        <Box alignSelf=\"start\"> <Text background='brand'> openfengshui.com</Text> </Box>\n        <Box margin={{ left: 'auto' }}> <Text background='brand'>{ isYangChart ? 'External' : 'Internal' }</Text> </Box>\n    </Box>\n    <QiMenChart chartType={chartType} chart={chart || qimenChart} onSquarePressed={onSquarePressed} />\n    <Box> <Text background='brand'>{ isYangChart ? 'Internal' : 'External' }</Text> </Box>\n    <Adsense\n        client=\"ca-pub-6343289823091285\"\n        slot=\"5114483936\"\n    />\n  </>\n}\n\nexport default Home\n","import React from \"react\"\nimport Container from '../../containers/QiMen'\nconst Home = ({ chartType, chart, onClick, initialDate, heading, handleSearch, onDateChanged, getChart, onSquarePressed }) => {\n  return <>\n    <Container chartType={chartType} chart={chart} onClick={onClick} initialDate={initialDate} onSquarePressed={onSquarePressed} handleSearch={handleSearch} onDateChanged={onDateChanged} />\n  </>\n}\n\nexport default Home\n","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}"],"sourceRoot":""}