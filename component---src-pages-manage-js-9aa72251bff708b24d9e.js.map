{"version":3,"file":"component---src-pages-manage-js-9aa72251bff708b24d9e.js","mappings":"4iCA6CA,IAAQA,EAAcC,EAAAA,WAGNC,EAAAA,EAAAA,GAAhB,IA8GA,UAvEkB,WACd,OAAwBC,EAAAA,EAAAA,KAAhBC,EAAR,SAAgBC,EAAhB,MACA,GAAyBC,EAAAA,EAAAA,UAAzB,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA8BF,EAAAA,EAAAA,UAA9B,eACA,GADA,WAC4BA,EAAAA,EAAAA,UAA5B,gBACA,GADA,WACuBA,EAAAA,EAAAA,UAAvB,gBACA,GADA,WAC0BA,EAAAA,EAAAA,UAA1B,gBACA,GADA,WACwBA,EAAAA,EAAAA,UAAxB,gBACA,GADA,WACgCA,EAAAA,EAAAA,UAAhC,kBACA,GADA,WACkCA,EAAAA,EAAAA,UAAlC,gBACMG,GADN,WACcC,EAAAA,EAAAA,MACd,GAAoCJ,EAAAA,EAAAA,YAApC,WAEA,GAFA,WACaK,EAAAA,EAAAA,GAAcF,EAAAA,YAAAA,GAA3B,QACwBH,EAAAA,EAAAA,aAAxB,WACA,GADA,WACsCA,EAAAA,EAAAA,UAAtC,gBAAOM,EAAP,KAEMC,GAFN,KAEiB,+BAAG,yGAAOC,EAAP,2CACK,2BAA8B,CAC/CA,KAAM,eAAF,OAD2C,GAE/CC,MAAO,CACHC,QAAS,CAAC,OAAQF,MAJV,OACVG,EADU,OAOhBT,GAASS,MAAAA,OAAA,EAAAA,EAAA,KAAY,mBAAOC,EAAP,cAArBV,IAPgB,2CAAH,sDAUjBR,EAAS,cAAC,8EACNa,EAAAA,GADM,2CAEP,CAFHb,IAIA,IAAMmB,EAAY,+BAAG,+FACX,4BAA+B,CACjCC,IAAK,CAACb,EAAD,aAFQ,OAIjBM,EAAAA,GAJiB,2CAAH,sDAOZQ,EAAU,+BAAG,mFACZd,EADY,0CAEL,2BAA8B,CAChCO,KAAM,eAAF,OAD4B,GAEhCQ,SAAUf,EAFsB,UAGhCgB,KAAM,EAAF,GAH4B,GAMhCC,KAAMZ,IARC,6CAWL,2BAA8B,CAChCE,KAAM,eAAF,OAD4B,GAEhCS,KAAM,EAAF,GAF4B,GAKhCC,KAAMZ,IAhBC,OAoBfC,EAAAA,GApBe,2CAAH,sDAuBhB,OACI,iCAEQ,cAAKY,MAAM,UACX,cAAKC,QAAL,OAAoBC,eAApB,SAA4CC,cAA5C,SAAmEC,IAAnE,iBACI,cAAUC,KAAV,EAAsB1B,OAAQA,IAAUe,aAAxC,EAAoEY,OAAQV","sources":["webpack://gatsby-redux-material-ui-boilerplate/./src/pages/manage.js"],"sourcesContent":["import * as React from \"react\";\nimport { Link } from \"gatsby-theme-material-ui\";\nimport { StaticImage } from \"gatsby-plugin-image\";\nimport Box from '@mui/material/Box';\nimport Layout from \"../components/layout\";\nimport Seo from \"../components/seo\";\nimport { DesktopDatePicker } from '@mui/x-date-pickers/DesktopDatePicker';\nimport { MobileDatePicker } from '@mui/x-date-pickers/MobileDatePicker';\nimport dayjs, { Dayjs } from 'dayjs';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport ChartLayout from \"../components/ChartStructure\"\nimport LifeNumber from \"../components/LifeNumber\"\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport TextField from '@mui/material/TextField';\nimport { useTheme, createTheme } from '@mui/material/styles';\nimport { useState } from 'react'\nimport DatePicker from '../components/DatePicker'\nimport Typography from '@mui/material/Typography';\nimport Stack from '@mui/material/Stack';\nimport { NumberChip as Chip } from '../components/Chip';\nimport MobileNumber from \"../components/MobileNumber\"\nimport { East } from '@mui/icons-material/';\nimport NumberChart from \"../components/NumberChart\"\nimport Tooltip from '@mui/material/Tooltip';\nimport Button from '@mui/material/Button';\nimport { ThemeProvider } from '@mui/styles'\nimport CardHeader from '@mui/material/CardHeader';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport ReactHtmlParser, { processNodes, convertNodeToElement, htmlparser2 } from 'react-html-parser';\nimport Parse from '../vendor/Parse'\nimport PostList from '../components/PostList'\nimport Grid from '@mui/material/Grid';\nimport Divider from '@mui/material/Divider';\nimport Menu from '../components/Menu'\nimport ThreeCol from '../components/ThreeColLayout'\nimport useAuth from \"../hooks/userAuth\";\nimport { graphql } from 'gatsby'\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select, { SelectChangeEvent } from '@mui/material/Select';\nconst { useEffect } = React;\n\n\nconst myTheme = createTheme({\n\n})\n\nconst RightCol = ({ post, isSM, onChange }) => {\n    const [value, setValue] = useState(\"accupunture\")\n    useEffect(() => {\n        onChange && onChange(value)\n    }, [value])\n\n    return <Box display={\"flex\"} flexDirection={\"column\"} alignItems={\"end\"} padding={isSM ? \"0 32px 0 32px\" : \"0\"}>\n        <h3>Manage Item</h3>\n        <FormControl fullWidth>\n            <InputLabel id=\"demo-simple-select-label\">Age</InputLabel>\n            <Select\n                labelId=\"demo-simple-select-label\"\n                id=\"demo-simple-select\"\n                value={value}\n                label=\"Age\"\n                onChange={(e) => setValue(e.target.value)}\n            >\n                <MenuItem value={\"\"}>All</MenuItem>\n                <MenuItem value={\"accupunture\"}>Accupunture</MenuItem>\n                <MenuItem value={\"numberFormula\"}>NumberFormula</MenuItem>\n                <MenuItem value={\"herbalFormula\"}>HerbalFormula</MenuItem>\n            </Select>\n        </FormControl>\n        <Divider />\n    {\n        post.map(e => <a href=\"\">\n            {\n                e?.data?.title\n            }\n        </a>)\n    }\n    </Box >\n}\n\n\nconst IndexPage = () => {\n    const { isAuth, env } = useAuth()\n    const [post, setPosts] = useState([])\n    const [preview, setPreview] = useState('')\n    const [number, setNumber] = useState('')\n    const [day, setDate] = useState('')\n    const [month, setMonth] = useState('')\n    const [year, setYear] = useState('')\n    const [elements, setElements] = useState(null)\n    const [accordion, setAccordion] = useState([])\n    const theme = useTheme();\n    const [numberInfo, setNumberInfo] = useState()\n    const isSM = useMediaQuery(theme.breakpoints.up('sm'));\n    const [list, setList] = useState();\n    const [currentName, setCurrentName] = useState(\"\")\n\n    const refreshData = async (type = ``) => {\n        const result = await Parse.Cloud.run('queryItems', {\n            type: `post_public-${env}`,\n            query: {\n                equalTo: ['name', type],\n            },\n        })\n        setPosts(result?.map((e) => e.toJSON()) || [])\n    }\n\n    useEffect(async () => {\n        refreshData(currentName)\n    }, [currentName])\n\n    const handleDelete = async (post) => {\n        await Parse.Cloud.run('deleteItems', {\n            ids: [post._objectId]\n        })\n        refreshData(currentName)\n    }\n\n    const handlePost = async (post) => {\n        if(post._objectId) {\n            await Parse.Cloud.run('updateItem', {\n                type: `post_public-${env}`,\n                objectId: post._objectId,\n                data: {\n                    ...post,\n                },\n                name: currentName\n            })\n        } else {\n            await Parse.Cloud.run('createItem', {\n                type: `post_public-${env}`,\n                data: {\n                    ...post,\n                },\n                name: currentName\n            })\n        }\n\n        refreshData(currentName)\n    }\n\n    return (\n        <>\n      \n                <Seo title=\"Home\" />\n                <Box display=\"flex\" justifyContent=\"center\" flexDirection=\"column\" gap=\"16px\">\n                    <PostList list={post} isAuth={isAuth()} handleDelete={handleDelete} onPost={handlePost} />\n                </Box>\n     \n        </>)\n}\n\nexport default IndexPage\n\n"],"names":["useEffect","React","createTheme","useAuth","isAuth","env","useState","post","setPosts","theme","useTheme","useMediaQuery","currentName","refreshData","type","query","equalTo","result","e","handleDelete","ids","handlePost","objectId","data","name","title","display","justifyContent","flexDirection","gap","list","onPost"],"sourceRoot":""}