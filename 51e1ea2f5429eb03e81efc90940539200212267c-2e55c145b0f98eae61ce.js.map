{"version":3,"sources":["webpack:///./src/constants/index.js","webpack:///./src/cm-lib/QiMen/index.js","webpack:///./node_modules/date-fns/esm/addHours/index.js","webpack:///./node_modules/date-fns/esm/addMilliseconds/index.js","webpack:///./node_modules/date-fns/esm/isValid/index.js","webpack:///./node_modules/date-fns/esm/locale/en-US/_lib/formatDistance/index.js","webpack:///./node_modules/date-fns/esm/locale/_lib/buildFormatLongFn/index.js","webpack:///./node_modules/date-fns/esm/locale/en-US/_lib/formatLong/index.js","webpack:///./node_modules/date-fns/esm/locale/en-US/_lib/formatRelative/index.js","webpack:///./node_modules/date-fns/esm/locale/_lib/buildLocalizeFn/index.js","webpack:///./node_modules/date-fns/esm/locale/_lib/buildMatchFn/index.js","webpack:///./node_modules/date-fns/esm/locale/en-US/_lib/match/index.js","webpack:///./node_modules/date-fns/esm/locale/_lib/buildMatchPatternFn/index.js","webpack:///./node_modules/date-fns/esm/locale/en-US/index.js","webpack:///./node_modules/date-fns/esm/locale/en-US/_lib/localize/index.js","webpack:///./node_modules/date-fns/esm/subMilliseconds/index.js","webpack:///./node_modules/date-fns/esm/_lib/addLeadingZeros/index.js","webpack:///./node_modules/date-fns/esm/_lib/format/lightFormatters/index.js","webpack:///./node_modules/date-fns/esm/_lib/startOfUTCISOWeek/index.js","webpack:///./node_modules/date-fns/esm/_lib/getUTCISOWeekYear/index.js","webpack:///./node_modules/date-fns/esm/_lib/startOfUTCISOWeekYear/index.js","webpack:///./node_modules/date-fns/esm/_lib/startOfUTCWeek/index.js","webpack:///./node_modules/date-fns/esm/_lib/getUTCWeekYear/index.js","webpack:///./node_modules/date-fns/esm/_lib/startOfUTCWeekYear/index.js","webpack:///./node_modules/date-fns/esm/_lib/format/formatters/index.js","webpack:///./node_modules/date-fns/esm/_lib/getUTCWeek/index.js","webpack:///./node_modules/date-fns/esm/_lib/getUTCISOWeek/index.js","webpack:///./node_modules/date-fns/esm/_lib/getUTCDayOfYear/index.js","webpack:///./node_modules/date-fns/esm/_lib/format/longFormatters/index.js","webpack:///./node_modules/date-fns/esm/_lib/protectedTokens/index.js","webpack:///./node_modules/date-fns/esm/format/index.js"],"names":["DATETIME_FORMAT","DATE_FORMAT","CalenderData","require","get3VWithinRange","dob","dateString","range","method","natalChart","getZhiRunHourChart","parseISO","date","Array","keys","map","e","setDate","monthChartObj","getMonthChartByDate","monthChart","lookupChart","structure","pillar","dayChartObject","getDayChartByDate","dayChart","isDivineLightDate","isDivineLightDay","p","divineLight","chart","isDivineLight3Overlap","findChiefPalace","ju","palace","format","isDivineBlessDate","isDivineBlessingDay","isDivineForceDate","isDivineForceDay","sector","sectorIndex","DIRECTION","findIndex","door","god","searchHourChart","startDate","endDate","searchFormation","result","found","Ju","filter","v","find","g","f","indexOf","hour","push","dirtyDate","dirtyAmount","requiredArgs","arguments","amount","toInteger","addMilliseconds","addHours","dt","bazi","dateObjectToBazi","yearMonthKey","dayOfMonth","GanZhiHour","ganzhi","chiefPalace","originalStarPalace","STAR","profile","dayStem","GanZhiDay","substring","hourStem","divineBless","findDivineBlessing","findDivineLight","divineForce","findDivineForce","isoString","toISOString","title","label","description","element","red","getColor","word","Object","colorCode","includes","getDayChart","getFullYear","getMonth","getDate","year","month","day","n","lookup","9","1","3","7","6","4","gregorianToBazi","start","startJu","solarTerm","chartType","index","SIXTY_PILLAR","Number","findSymbol","star","key","symbol","getMonthChart","slice","GanZhiYear","i","GanZhiMonth","timestamp","getTime","Date","isValid","toDate","isNaN","formatDistanceLocale","lessThanXSeconds","one","other","xSeconds","halfAMinute","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXWeeks","xWeeks","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","buildFormatLongFn","args","dirtyOptions","options","width","String","defaultWidth","formats","formatLong","full","long","medium","short","time","dateTime","formatRelativeLocale","lastWeek","yesterday","today","tomorrow","nextWeek","buildLocalizeFn","dirtyIndex","valuesArray","context","formattingValues","defaultFormattingWidth","_defaultWidth","_width","values","argumentCallback","buildMatchFn","dirtyString","string","matchPattern","matchPatterns","defaultMatchWidth","matchResult","match","value","matchedString","parsePatterns","defaultParseWidth","prototype","toString","call","array","predicate","length","pattern","test","object","hasOwnProperty","findKey","valueCallback","rest","code","formatDistance","token","count","replace","addSuffix","comparison","formatRelative","_date","_baseDate","_options","localize","ordinalNumber","dirtyNumber","_dirtyOptions","number","rem100","era","narrow","abbreviated","wide","quarter","dayPeriod","am","pm","midnight","noon","morning","afternoon","evening","night","parsePattern","parseInt","parseResult","any","weekStartsOn","firstWeekContainsDate","subMilliseconds","addLeadingZeros","targetLength","sign","output","Math","abs","y","signedYear","getUTCFullYear","M","getUTCMonth","d","getUTCDate","a","dayPeriodEnumValue","getUTCHours","toUpperCase","h","H","m","getUTCMinutes","s","getUTCSeconds","S","numberOfDigits","milliseconds","getUTCMilliseconds","floor","pow","startOfUTCISOWeek","getUTCDay","diff","setUTCDate","setUTCHours","getUTCISOWeekYear","fourthOfJanuaryOfNextYear","setUTCFullYear","startOfNextYear","fourthOfJanuaryOfThisYear","startOfThisYear","startOfUTCISOWeekYear","fourthOfJanuary","startOfUTCWeek","locale","localeWeekStartsOn","defaultWeekStartsOn","RangeError","getUTCWeekYear","localeFirstWeekContainsDate","defaultFirstWeekContainsDate","firstWeekOfNextYear","firstWeekOfThisYear","startOfUTCWeekYear","firstWeek","dayPeriodEnum","formatTimezoneShort","offset","dirtyDelimiter","absOffset","hours","minutes","delimiter","formatTimezoneWithOptionalMinutes","formatTimezone","G","unit","lightFormatters","Y","signedWeekYear","weekYear","R","u","Q","ceil","q","L","w","week","round","getUTCWeek","I","isoWeek","getUTCISOWeek","D","dayOfYear","setUTCMonth","startOfYearTimestamp","difference","getUTCDayOfYear","E","dayOfWeek","localDayOfWeek","c","isoDayOfWeek","b","B","K","k","X","_localize","timezoneOffset","_originalDate","getTimezoneOffset","x","O","z","t","originalDate","T","dateLongFormatter","timeLongFormatter","P","dateTimeFormat","datePattern","timePattern","protectedDayOfYearTokens","protectedWeekYearTokens","isProtectedDayOfYearToken","isProtectedWeekYearToken","throwProtectedError","input","concat","formattingTokensRegExp","longFormattingTokensRegExp","escapedStringRegExp","doubleQuoteRegExp","unescapedLatinCharacterRegExp","dirtyFormatStr","formatStr","getTimezoneOffsetInMilliseconds","utcDate","formatterOptions","firstCharacter","longFormatter","join","cleanEscapedString","formatter","useAdditionalWeekYearTokens","useAdditionalDayOfYearTokens"],"mappings":"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","file":"51e1ea2f5429eb03e81efc90940539200212267c-2e55c145b0f98eae61ce.js","sourcesContent":["export const DATETIME_FORMAT = 'yyyy-MM-dd HH:mm';\nexport const DATE_FORMAT = 'yyyy-MM-dd';","import { format } from 'date-fns';\nimport { gregorianToBazi, dateObjectToBazi } from '../FourPillar'\nimport { SIXTY_PILLAR, DIRECTION, QM_SAN_YUAN, SIXTY_FOUR, TRIGRAM_BINARY, STAR, DOOR } from '../constants'\nimport Ju from '../reference/Ju.json'\nimport { addHours, parseISO } from 'date-fns';\nimport { DATE_FORMAT } from '../../constants'\nconst CalenderData = require('./Calendar.json');\n\nexport const get3VWithinRange = (dob, dateString, range, method) => {\n    \n    const natalChart = getZhiRunHourChart(parseISO(dob))\n    const date = parseISO(dateString)\n    return [...Array(range).keys()].map(e => {\n        date.setDate(e + 1);\n        const monthChartObj = getMonthChartByDate(date)\n        const monthChart = lookupChart(monthChartObj.structure, monthChartObj.pillar)\n        const dayChartObject = getDayChartByDate(date)\n        const dayChart = lookupChart(dayChartObject.structure, dayChartObject.pillar)\n        const isDivineLightDate = isDivineLightDay(natalChart.p.divineLight, monthChart.chart, dayChart.chart) \n        const isDivineLight3Overlap = isDivineLightDay(findChiefPalace(natalChart.ju.chart).palace, monthChart.chart, dayChart.chart)\n        \n        return {\n            date: format(date, DATE_FORMAT),\n            isDivineLight3Overlap,\n            isDivineLightDate,\n            isDivineBlessDate: isDivineBlessingDay(natalChart.p.divineLight, monthChart.chart, dayChart.chart),\n            isDivineForceDate: isDivineForceDay(natalChart.p.divineLight, monthChart.chart, dayChart.chart),\n        }\n\n    })\n    //.filter(e => e.isDivineLightDate || e.isDivineBlessDate || e.isDivineForceDate)\n}\n\n\nexport const isDivineLightDay = (sector, monthChart, dayChart) => {\n    const sectorIndex = DIRECTION.findIndex(e => e === sector)\n    return (monthChart[sectorIndex].door === '生' && dayChart[sectorIndex].god === '天') ||\n    (monthChart[sectorIndex].god === '天' && dayChart[sectorIndex].door === '生')\n}\n\nexport const isDivineBlessingDay = (sector, monthChart, dayChart) => {\n    const sectorIndex = DIRECTION.findIndex(e => e === sector)\n    return (monthChart[sectorIndex].door === '生' && dayChart[sectorIndex].god === '符') ||\n    (monthChart[sectorIndex].god === '符' && dayChart[sectorIndex].door === '生')\n}\n\nexport const isDivineForceDay = (sector, monthChart, dayChart) => {\n    const sectorIndex = DIRECTION.findIndex(e => e === sector)\n    return (monthChart[sectorIndex].god === '天' && dayChart[sectorIndex].god === '符') ||\n    (monthChart[sectorIndex].god === '符' && dayChart[sectorIndex].god === '天')\n}\n\n\nexport const searchHourChart = (startDate, endDate, searchFormation) => {\n\n    const result = []\n    const found = Ju.filter(v => v.chart.find(g => searchFormation && g.f && g.f.indexOf(searchFormation) > -1 ))\n    .map(e => ({ structure: e.structure, hour: e.hour }))\n\n    while(startDate < endDate) {\n        const ju = getZhiRunHourChart(startDate);\n\n        if(found.find(e => ju.ju.structure === e.structure && ju.ju.hour === e.hour)) {\n\n            result.push(startDate)\n        }\n        startDate = addHours(startDate, 2)\n    }\n    return result;\n}\n\nexport const getZhiRunHourChart = dt => {\n    const bazi = dateObjectToBazi(dt);\n    const yearMonthKey = format(dt, 'yyyyMM')\n    const dayOfMonth = format(dt, 'd')\n    const structure = CalenderData[yearMonthKey][dayOfMonth - 1];\n    const ju = Ju.find(e => e.structure === structure && e.hour === bazi.GanZhiHour.ganzhi);\n    \n    const chiefPalace = ju.chart.findIndex(e => e.god === '符');\n    const originalStarPalace = STAR[chiefPalace > 4 ? chiefPalace - 1 : chiefPalace]\n    const profile = {\n        dayStem: bazi.GanZhiDay.ganzhi.substring(0, 1),\n        hourStem: bazi.GanZhiHour.ganzhi.substring(0, 1),\n        divineBless: findDivineBlessing(ju.chart).palace,\n        divineLight: findDivineLight(ju.chart, originalStarPalace).palace,\n        divineForce: findDivineForce(ju.chart).palace\n    }\n    return {\n        ju: {\n            ...ju,\n            isoString: dt.toISOString(),\n            bazi\n        },\n        p: profile,\n        profile: [\n            {\n                title: 'Day Stem',\n                \n                label: profile.dayStem\n            },\n            {\n                title: 'Hour Stem',\n                label: profile.hourStem\n            },\n            {\n                title: 'Divine Blessing',\n                label: profile.divineBless,\n                description: 'Initate Project',\n            },\n            {\n                title: 'Divine Light',\n                description: 'Self Improvement',\n                label: profile.divineLight\n            },\n            {\n                title: 'Divine Force',\n                description: 'Negotiation',\n                label: profile.divineForce\n            },\n        ]\n    }\n}\n\nexport const getChaiBuHour = (bazi) => {\n    const chart = getQMCBChart(bazi);\n    const type = Object.keys(QM_SAN_YUAN).findIndex(e => e === bazi.solarTerm) < 12 ? 'M' : 'F';\n    return {\n        pillar: bazi.GanZhiHour.ganzhi,\n        structure: `${type}${chart.substr(1, 1)}`\n    }\n}\n\nexport const getQMCBChart = (bazi) => {\n    const branchYuan = [\n        ['子', '卯', '午', '酉'],\n        ['寅', '巳', '申', '亥'],\n        ['丑', '辰', '未', '戌']\n    ]\n\n    const reverseSixty = [...SIXTY_PILLAR.slice().reverse(), ...SIXTY_PILLAR.slice().reverse()];\n    const rest = reverseSixty.slice(reverseSixty.findIndex(e => e === bazi.GanZhiDay.ganzhi));\n\n    const fuTouBranch = rest.find(e => ['己', '甲'].includes(e.substr(0, 1))).substr(1, 1)\n    const yuan = branchYuan.findIndex(e => e.includes(fuTouBranch));\n    const type = Object.keys(QM_SAN_YUAN).findIndex(e => e === bazi.solarTerm) < 12 ? 'M' : 'F';\n    \n    return `${type}${QM_SAN_YUAN[bazi.solarTerm][yuan]}`;\n}\n\nconst getQMChart = (y, m, d, h) => {\n    const calDate = new Date(y, m - 1, d);\n    const yearMonthKey = format(calDate, 'yyyyMM');\n    const dayIndex = Number(format(calDate, 'd')) - 1;\n    return {\n        pillar: h,\n        structure: CalenderData[yearMonthKey] && CalenderData[yearMonthKey][dayIndex]\n    }\n}\n\nexport const getZRQMHourChart = (y, m, d, h) => {\n    return getHourChart(gregorianToBazi(y, m, d, h))\n}\n\nexport const getHourChart = (bazi) => {\n    return getQMChart(bazi.westernYear, bazi.westernMonth, bazi.westernDay, bazi.GanZhiHour.ganzhi);\n}\n\nexport const searchChart = (filterObject, haystack) => {\n    return haystack.filter(v => {\n        const kk =  v.chart.map((obj, i) => {\n            const compare = filterObject[i];\n            const l = Object.keys(compare).map(k => {\n                const o = compare[k];\n                return o === '' ? true : o.indexOf(obj[k]) > -1 ? true : false; \n            })\n            return l.every(e => e);\n        })\n        return kk.every(e => e);\n    }).map(e => ({ structure: e.structure, hour: e.hour }))\n}\n\n\nconst element = {\n    red: ['丁', '丙', '景', '英', '巳', '午', '離'],\n    '#00739D': ['壬', '癸', '休', '蓬', '子', '亥', '坎'],\n    '#145A32': ['乙', '杜', '傷', '辅', '沖', '輔', '寅', '卯', '震', '巽', '甲'],\n    \"#A2423D\": ['死', '生', '芮', '任', '戊', '己', '丑', '辰', '未', '戌', '艮', '坤'],\n    '#777777': ['庚', '辛', '开', '柱', '心', '驚', '開', '申', '酉', '乾', '兌'],\n}\n\nexport const getColor = word => {\n    const color = Object.keys(element);\n    return color.find(colorCode => element[colorCode].includes(word));\n}\n\nexport const getDayChartByDate = date => {\n    return getDayChart(date.getFullYear(), date.getMonth() + 1, date.getDate())\n}\n\nexport const getDayChart = (year, month, day) => {\n    const lookup = {\n        9: [\"夏至\", \"小暑\", \"大暑\", \"立秋\"],\n        1: [\"冬至\", \"小寒\", \"大寒\", \"立春\"],\n        3: [\"处暑\", \"白露\", \"秋分\", \"寒露\"],\n        7: [\"雨水\", \"惊蛰\", \"春分\", \"清明\"],\n        6: [\"霜降\", \"立冬\", \"小雪\", \"大雪\"],\n        4: [\"谷雨\", \"立夏\", \"小满\", \"芒种\"],\n    }\n    const removeSign = n => n < 0 ? n * -1 : n;\n    const bazi = gregorianToBazi(year, month, day, 12);\n    const start = Object.keys(lookup).find(startJu => lookup[startJu].includes(bazi.solarTerm));\n    const chartType = [\"1\", \"7\", \"4\"].includes(start) ? 'M' : 'F';\n    const index = SIXTY_PILLAR.indexOf(bazi.GanZhiDay.ganzhi);\n    const chart =  chartType === 'M' ? ((index - 1) + Number(start)) % 9 : removeSign((start) - Number(index)) % 9\n    const structure = chartType === 'M' ? `${chartType}${chart + 1}` : `${chartType}${9 - chart}`;\n    return  { structure, pillar: bazi.GanZhiDay.ganzhi }\n}\n\nexport const matchCriteria = (chart1, chart2, palaceIndex, contains) => {\n    \n    return contains.filter(e => [\n        chart1[palaceIndex].god,\n        chart1[palaceIndex].door,\n        chart1[palaceIndex].star,\n        chart2[palaceIndex].god,\n        chart2[palaceIndex].door,\n        chart2[palaceIndex].star\n    ].includes(e)).length === contains.length\n    \n\n}\n\nexport const findChiefPalace = (chart) => findSymbol(chart, 'god', '符')\n\nexport const findDivineBlessing = chart => findSymbol(chart, 'god', '天')\n\nexport const findDivineLight = (chart, star) => findSymbol(chart, 'star', star)\n\nexport const findDivineForce = chart => findSymbol(chart, 'door', '生')\n\nexport const findSymbol = (chart, key, word) => {\n    return { palace: DIRECTION[chart.findIndex(e => e[key] === word)], symbol: word }\n}\n\nexport const starDoorToHexagram = (star, door) => {\n    const doorBinaryIndex = DOOR.findIndex(e => e === door);\n    const starBinaryIndex = STAR.findIndex(e => e === star);\n\n    const hexBinary = TRIGRAM_BINARY[doorBinaryIndex] + TRIGRAM_BINARY[starBinaryIndex];\n    return SIXTY_FOUR[hexBinary]\n}\n\nexport const getMonthChartByDate = date => {\n    return getMonthChart(date.getFullYear(), date.getMonth() + 1, date.getDate())\n}\n\nexport const lookupChart = (structure, hour) => {\n    return Ju.find(e => e.structure === structure && e.hour === hour)\n}\n\n\nexport const getMonthChart = (year, month, day) => {\n    const yin = [1, 4, 7];\n    const bazi = gregorianToBazi(year, month, day, 12);\n\n\n    const lookup = [\n        ...SIXTY_PILLAR.slice(0, 5),\n        ...SIXTY_PILLAR.slice(15, 20),\n        ...SIXTY_PILLAR.slice(30, 35),\n        ...SIXTY_PILLAR.slice(45, 50),\n\n        ...SIXTY_PILLAR.slice(5, 10),\n        ...SIXTY_PILLAR.slice(20, 25),\n        ...SIXTY_PILLAR.slice(35, 40),\n        ...SIXTY_PILLAR.slice(50, 55),\n        \n        ...SIXTY_PILLAR.slice(10, 15),\n        ...SIXTY_PILLAR.slice(25, 30),\n        ...SIXTY_PILLAR.slice(40, 45),\n        ...SIXTY_PILLAR.slice(55, 60),\n    ];\n\n    const index = lookup.indexOf(bazi.GanZhiYear.ganzhi);\n    const ju = yin.find((ju, i) => (i * 20 - 1) < index && index < ((i + 1) * 20));\n    const structure = `F${ju}`\n    return { structure, pillar: bazi.GanZhiMonth.ganzhi}\n}\n\nexport const getSanYuanYearChart = date => {\n    const year1928Structure = 9;\n\n    const bazi = gregorianToBazi(date.getFullYear(),date.getMonth() + 1, date.getDate(), date.getHours());\n    const toYear = [\"小寒\", \"大寒\"].includes(bazi.solarTerm) ? date.getFullYear() - 1: date.getFullYear();\n    const newStructure = year1928Structure - ((toYear - 1928) % 9);\n    return {\n        pillar: bazi.GanZhiYear.ganzhi,\n        structure: `F${newStructure}`,\n    };\n}\n\n\n\n\n\n","import toInteger from '../_lib/toInteger/index.js';\nimport addMilliseconds from '../addMilliseconds/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\nvar MILLISECONDS_IN_HOUR = 3600000;\n/**\n * @name addHours\n * @category Hour Helpers\n * @summary Add the specified number of hours to the given date.\n *\n * @description\n * Add the specified number of hours to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of hours to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the hours added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 2 hours to 10 July 2014 23:00:00:\n * var result = addHours(new Date(2014, 6, 10, 23, 0), 2)\n * //=> Fri Jul 11 2014 01:00:00\n */\n\nexport default function addHours(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMilliseconds(dirtyDate, amount * MILLISECONDS_IN_HOUR);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name addMilliseconds\n * @category Millisecond Helpers\n * @summary Add the specified number of milliseconds to the given date.\n *\n * @description\n * Add the specified number of milliseconds to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the milliseconds added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 750 milliseconds to 10 July 2014 12:45:30.000:\n * var result = addMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:30.750\n */\n\nexport default function addMilliseconds(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var timestamp = toDate(dirtyDate).getTime();\n  var amount = toInteger(dirtyAmount);\n  return new Date(timestamp + amount);\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isValid\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Argument is converted to Date using `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - Now `isValid` doesn't throw an exception\n *   if the first argument is not an instance of Date.\n *   Instead, argument is converted beforehand using `toDate`.\n *\n *   Examples:\n *\n *   | `isValid` argument        | Before v2.0.0 | v2.0.0 onward |\n *   |---------------------------|---------------|---------------|\n *   | `new Date()`              | `true`        | `true`        |\n *   | `new Date('2016-01-01')`  | `true`        | `true`        |\n *   | `new Date('')`            | `false`       | `false`       |\n *   | `new Date(1488370835081)` | `true`        | `true`        |\n *   | `new Date(NaN)`           | `false`       | `false`       |\n *   | `'2016-01-01'`            | `TypeError`   | `false`       |\n *   | `''`                      | `TypeError`   | `false`       |\n *   | `1488370835081`           | `TypeError`   | `true`        |\n *   | `NaN`                     | `TypeError`   | `false`       |\n *\n *   We introduce this change to make *date-fns* consistent with ECMAScript behavior\n *   that try to coerce arguments to the expected type\n *   (which is also the case with other *date-fns* functions).\n *\n * @param {*} date - the date to check\n * @returns {Boolean} the date is valid\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // For the valid date:\n * var result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the value, convertable into a date:\n * var result = isValid(1393804800000)\n * //=> true\n *\n * @example\n * // For the invalid date:\n * var result = isValid(new Date(''))\n * //=> false\n */\n\nexport default function isValid(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  return !isNaN(date);\n}","var formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: 'less than a second',\n    other: 'less than {{count}} seconds'\n  },\n  xSeconds: {\n    one: '1 second',\n    other: '{{count}} seconds'\n  },\n  halfAMinute: 'half a minute',\n  lessThanXMinutes: {\n    one: 'less than a minute',\n    other: 'less than {{count}} minutes'\n  },\n  xMinutes: {\n    one: '1 minute',\n    other: '{{count}} minutes'\n  },\n  aboutXHours: {\n    one: 'about 1 hour',\n    other: 'about {{count}} hours'\n  },\n  xHours: {\n    one: '1 hour',\n    other: '{{count}} hours'\n  },\n  xDays: {\n    one: '1 day',\n    other: '{{count}} days'\n  },\n  aboutXWeeks: {\n    one: 'about 1 week',\n    other: 'about {{count}} weeks'\n  },\n  xWeeks: {\n    one: '1 week',\n    other: '{{count}} weeks'\n  },\n  aboutXMonths: {\n    one: 'about 1 month',\n    other: 'about {{count}} months'\n  },\n  xMonths: {\n    one: '1 month',\n    other: '{{count}} months'\n  },\n  aboutXYears: {\n    one: 'about 1 year',\n    other: 'about {{count}} years'\n  },\n  xYears: {\n    one: '1 year',\n    other: '{{count}} years'\n  },\n  overXYears: {\n    one: 'over 1 year',\n    other: 'over {{count}} years'\n  },\n  almostXYears: {\n    one: 'almost 1 year',\n    other: 'almost {{count}} years'\n  }\n};\nexport default function formatDistance(token, count, options) {\n  options = options || {};\n  var result;\n\n  if (typeof formatDistanceLocale[token] === 'string') {\n    result = formatDistanceLocale[token];\n  } else if (count === 1) {\n    result = formatDistanceLocale[token].one;\n  } else {\n    result = formatDistanceLocale[token].other.replace('{{count}}', count);\n  }\n\n  if (options.addSuffix) {\n    if (options.comparison > 0) {\n      return 'in ' + result;\n    } else {\n      return result + ' ago';\n    }\n  }\n\n  return result;\n}","export default function buildFormatLongFn(args) {\n  return function (dirtyOptions) {\n    var options = dirtyOptions || {};\n    var width = options.width ? String(options.width) : args.defaultWidth;\n    var format = args.formats[width] || args.formats[args.defaultWidth];\n    return format;\n  };\n}","import buildFormatLongFn from '../../../_lib/buildFormatLongFn/index.js';\nvar dateFormats = {\n  full: 'EEEE, MMMM do, y',\n  long: 'MMMM do, y',\n  medium: 'MMM d, y',\n  short: 'MM/dd/yyyy'\n};\nvar timeFormats = {\n  full: 'h:mm:ss a zzzz',\n  long: 'h:mm:ss a z',\n  medium: 'h:mm:ss a',\n  short: 'h:mm a'\n};\nvar dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: '{{date}}, {{time}}',\n  short: '{{date}}, {{time}}'\n};\nvar formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: 'full'\n  }),\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: 'full'\n  }),\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: 'full'\n  })\n};\nexport default formatLong;","var formatRelativeLocale = {\n  lastWeek: \"'last' eeee 'at' p\",\n  yesterday: \"'yesterday at' p\",\n  today: \"'today at' p\",\n  tomorrow: \"'tomorrow at' p\",\n  nextWeek: \"eeee 'at' p\",\n  other: 'P'\n};\nexport default function formatRelative(token, _date, _baseDate, _options) {\n  return formatRelativeLocale[token];\n}","export default function buildLocalizeFn(args) {\n  return function (dirtyIndex, dirtyOptions) {\n    var options = dirtyOptions || {};\n    var context = options.context ? String(options.context) : 'standalone';\n    var valuesArray;\n\n    if (context === 'formatting' && args.formattingValues) {\n      var defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      var width = options.width ? String(options.width) : defaultWidth;\n      valuesArray = args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      var _defaultWidth = args.defaultWidth;\n\n      var _width = options.width ? String(options.width) : args.defaultWidth;\n\n      valuesArray = args.values[_width] || args.values[_defaultWidth];\n    }\n\n    var index = args.argumentCallback ? args.argumentCallback(dirtyIndex) : dirtyIndex;\n    return valuesArray[index];\n  };\n}","export default function buildMatchFn(args) {\n  return function (dirtyString, dirtyOptions) {\n    var string = String(dirtyString);\n    var options = dirtyOptions || {};\n    var width = options.width;\n    var matchPattern = width && args.matchPatterns[width] || args.matchPatterns[args.defaultMatchWidth];\n    var matchResult = string.match(matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n\n    var matchedString = matchResult[0];\n    var parsePatterns = width && args.parsePatterns[width] || args.parsePatterns[args.defaultParseWidth];\n    var value;\n\n    if (Object.prototype.toString.call(parsePatterns) === '[object Array]') {\n      value = findIndex(parsePatterns, function (pattern) {\n        return pattern.test(matchedString);\n      });\n    } else {\n      value = findKey(parsePatterns, function (pattern) {\n        return pattern.test(matchedString);\n      });\n    }\n\n    value = args.valueCallback ? args.valueCallback(value) : value;\n    value = options.valueCallback ? options.valueCallback(value) : value;\n    return {\n      value: value,\n      rest: string.slice(matchedString.length)\n    };\n  };\n}\n\nfunction findKey(object, predicate) {\n  for (var key in object) {\n    if (object.hasOwnProperty(key) && predicate(object[key])) {\n      return key;\n    }\n  }\n}\n\nfunction findIndex(array, predicate) {\n  for (var key = 0; key < array.length; key++) {\n    if (predicate(array[key])) {\n      return key;\n    }\n  }\n}","import buildMatchPatternFn from '../../../_lib/buildMatchPatternFn/index.js';\nimport buildMatchFn from '../../../_lib/buildMatchFn/index.js';\nvar matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nvar parseOrdinalNumberPattern = /\\d+/i;\nvar matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i\n};\nvar parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i]\n};\nvar matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i\n};\nvar parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i]\n};\nvar matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i\n};\nvar parseMonthPatterns = {\n  narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],\n  any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^may/i, /^jun/i, /^jul/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i]\n};\nvar matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i\n};\nvar parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i]\n};\nvar matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i\n};\nvar parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i\n  }\n};\nvar match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: function valueCallback(value) {\n      return parseInt(value, 10);\n    }\n  }),\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: 'any'\n  }),\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: 'any',\n    valueCallback: function valueCallback(index) {\n      return index + 1;\n    }\n  }),\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: 'any'\n  }),\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: 'any'\n  }),\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: 'any',\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: 'any'\n  })\n};\nexport default match;","export default function buildMatchPatternFn(args) {\n  return function (dirtyString, dirtyOptions) {\n    var string = String(dirtyString);\n    var options = dirtyOptions || {};\n    var matchResult = string.match(args.matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n\n    var matchedString = matchResult[0];\n    var parseResult = string.match(args.parsePattern);\n\n    if (!parseResult) {\n      return null;\n    }\n\n    var value = args.valueCallback ? args.valueCallback(parseResult[0]) : parseResult[0];\n    value = options.valueCallback ? options.valueCallback(value) : value;\n    return {\n      value: value,\n      rest: string.slice(matchedString.length)\n    };\n  };\n}","import formatDistance from './_lib/formatDistance/index.js';\nimport formatLong from './_lib/formatLong/index.js';\nimport formatRelative from './_lib/formatRelative/index.js';\nimport localize from './_lib/localize/index.js';\nimport match from './_lib/match/index.js';\n/**\n * @type {Locale}\n * @category Locales\n * @summary English locale (United States).\n * @language English\n * @iso-639-2 eng\n * @author Sasha Koss [@kossnocorp]{@link https://github.com/kossnocorp}\n * @author Lesha Koss [@leshakoss]{@link https://github.com/leshakoss}\n */\n\nvar locale = {\n  code: 'en-US',\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0\n    /* Sunday */\n    ,\n    firstWeekContainsDate: 1\n  }\n};\nexport default locale;","import buildLocalizeFn from '../../../_lib/buildLocalizeFn/index.js';\nvar eraValues = {\n  narrow: ['B', 'A'],\n  abbreviated: ['BC', 'AD'],\n  wide: ['Before Christ', 'Anno Domini']\n};\nvar quarterValues = {\n  narrow: ['1', '2', '3', '4'],\n  abbreviated: ['Q1', 'Q2', 'Q3', 'Q4'],\n  wide: ['1st quarter', '2nd quarter', '3rd quarter', '4th quarter'] // Note: in English, the names of days of the week and months are capitalized.\n  // If you are making a new locale based on this one, check if the same is true for the language you're working on.\n  // Generally, formatted dates should look like they are in the middle of a sentence,\n  // e.g. in Spanish language the weekdays and months should be in the lowercase.\n\n};\nvar monthValues = {\n  narrow: ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],\n  abbreviated: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  wide: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n};\nvar dayValues = {\n  narrow: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],\n  short: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],\n  abbreviated: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n  wide: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\n};\nvar dayPeriodValues = {\n  narrow: {\n    am: 'a',\n    pm: 'p',\n    midnight: 'mi',\n    noon: 'n',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  },\n  abbreviated: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  },\n  wide: {\n    am: 'a.m.',\n    pm: 'p.m.',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  }\n};\nvar formattingDayPeriodValues = {\n  narrow: {\n    am: 'a',\n    pm: 'p',\n    midnight: 'mi',\n    noon: 'n',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  },\n  abbreviated: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  },\n  wide: {\n    am: 'a.m.',\n    pm: 'p.m.',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  }\n};\n\nfunction ordinalNumber(dirtyNumber, _dirtyOptions) {\n  var number = Number(dirtyNumber); // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`:\n  //\n  //   var options = dirtyOptions || {}\n  //   var unit = String(options.unit)\n  //\n  // where `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n  // 'day', 'hour', 'minute', 'second'\n\n  var rem100 = number % 100;\n\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + 'st';\n\n      case 2:\n        return number + 'nd';\n\n      case 3:\n        return number + 'rd';\n    }\n  }\n\n  return number + 'th';\n}\n\nvar localize = {\n  ordinalNumber: ordinalNumber,\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: 'wide'\n  }),\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: 'wide',\n    argumentCallback: function argumentCallback(quarter) {\n      return Number(quarter) - 1;\n    }\n  }),\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: 'wide'\n  }),\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: 'wide'\n  }),\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: 'wide',\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: 'wide'\n  })\n};\nexport default localize;","import toInteger from '../_lib/toInteger/index.js';\nimport addMilliseconds from '../addMilliseconds/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name subMilliseconds\n * @category Millisecond Helpers\n * @summary Subtract the specified number of milliseconds from the given date.\n *\n * @description\n * Subtract the specified number of milliseconds from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the milliseconds subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 750 milliseconds from 10 July 2014 12:45:30.000:\n * var result = subMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:29.250\n */\n\nexport default function subMilliseconds(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMilliseconds(dirtyDate, -amount);\n}","export default function addLeadingZeros(number, targetLength) {\n  var sign = number < 0 ? '-' : '';\n  var output = Math.abs(number).toString();\n\n  while (output.length < targetLength) {\n    output = '0' + output;\n  }\n\n  return sign + output;\n}","import addLeadingZeros from '../../addLeadingZeros/index.js';\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* |                                |\n * |  d  | Day of month                   |  D  |                                |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  m  | Minute                         |  M  | Month                          |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  y  | Year (abs)                     |  Y  |                                |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n */\n\nvar formatters = {\n  // Year\n  y: function y(date, token) {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n    var signedYear = date.getUTCFullYear(); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n    var year = signedYear > 0 ? signedYear : 1 - signedYear;\n    return addLeadingZeros(token === 'yy' ? year % 100 : year, token.length);\n  },\n  // Month\n  M: function M(date, token) {\n    var month = date.getUTCMonth();\n    return token === 'M' ? String(month + 1) : addLeadingZeros(month + 1, 2);\n  },\n  // Day of the month\n  d: function d(date, token) {\n    return addLeadingZeros(date.getUTCDate(), token.length);\n  },\n  // AM or PM\n  a: function a(date, token) {\n    var dayPeriodEnumValue = date.getUTCHours() / 12 >= 1 ? 'pm' : 'am';\n\n    switch (token) {\n      case 'a':\n      case 'aa':\n      case 'aaa':\n        return dayPeriodEnumValue.toUpperCase();\n\n      case 'aaaaa':\n        return dayPeriodEnumValue[0];\n\n      case 'aaaa':\n      default:\n        return dayPeriodEnumValue === 'am' ? 'a.m.' : 'p.m.';\n    }\n  },\n  // Hour [1-12]\n  h: function h(date, token) {\n    return addLeadingZeros(date.getUTCHours() % 12 || 12, token.length);\n  },\n  // Hour [0-23]\n  H: function H(date, token) {\n    return addLeadingZeros(date.getUTCHours(), token.length);\n  },\n  // Minute\n  m: function m(date, token) {\n    return addLeadingZeros(date.getUTCMinutes(), token.length);\n  },\n  // Second\n  s: function s(date, token) {\n    return addLeadingZeros(date.getUTCSeconds(), token.length);\n  },\n  // Fraction of second\n  S: function S(date, token) {\n    var numberOfDigits = token.length;\n    var milliseconds = date.getUTCMilliseconds();\n    var fractionalSeconds = Math.floor(milliseconds * Math.pow(10, numberOfDigits - 3));\n    return addLeadingZeros(fractionalSeconds, token.length);\n  }\n};\nexport default formatters;","import toDate from '../../toDate/index.js';\nimport requiredArgs from '../requiredArgs/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  var weekStartsOn = 1;\n  var date = toDate(dirtyDate);\n  var day = date.getUTCDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setUTCDate(date.getUTCDate() - diff);\n  date.setUTCHours(0, 0, 0, 0);\n  return date;\n}","import toDate from '../../toDate/index.js';\nimport startOfUTCISOWeek from '../startOfUTCISOWeek/index.js';\nimport requiredArgs from '../requiredArgs/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getUTCFullYear();\n  var fourthOfJanuaryOfNextYear = new Date(0);\n  fourthOfJanuaryOfNextYear.setUTCFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setUTCHours(0, 0, 0, 0);\n  var startOfNextYear = startOfUTCISOWeek(fourthOfJanuaryOfNextYear);\n  var fourthOfJanuaryOfThisYear = new Date(0);\n  fourthOfJanuaryOfThisYear.setUTCFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setUTCHours(0, 0, 0, 0);\n  var startOfThisYear = startOfUTCISOWeek(fourthOfJanuaryOfThisYear);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","import getUTCISOWeekYear from '../getUTCISOWeekYear/index.js';\nimport startOfUTCISOWeek from '../startOfUTCISOWeek/index.js';\nimport requiredArgs from '../requiredArgs/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var year = getUTCISOWeekYear(dirtyDate);\n  var fourthOfJanuary = new Date(0);\n  fourthOfJanuary.setUTCFullYear(year, 0, 4);\n  fourthOfJanuary.setUTCHours(0, 0, 0, 0);\n  var date = startOfUTCISOWeek(fourthOfJanuary);\n  return date;\n}","import toInteger from '../toInteger/index.js';\nimport toDate from '../../toDate/index.js';\nimport requiredArgs from '../requiredArgs/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCWeek(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = date.getUTCDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setUTCDate(date.getUTCDate() - diff);\n  date.setUTCHours(0, 0, 0, 0);\n  return date;\n}","import toInteger from '../toInteger/index.js';\nimport toDate from '../../toDate/index.js';\nimport startOfUTCWeek from '../startOfUTCWeek/index.js';\nimport requiredArgs from '../requiredArgs/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCWeekYear(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate, dirtyOptions);\n  var year = date.getUTCFullYear();\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var firstWeekOfNextYear = new Date(0);\n  firstWeekOfNextYear.setUTCFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setUTCHours(0, 0, 0, 0);\n  var startOfNextYear = startOfUTCWeek(firstWeekOfNextYear, dirtyOptions);\n  var firstWeekOfThisYear = new Date(0);\n  firstWeekOfThisYear.setUTCFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setUTCHours(0, 0, 0, 0);\n  var startOfThisYear = startOfUTCWeek(firstWeekOfThisYear, dirtyOptions);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","import toInteger from '../toInteger/index.js';\nimport getUTCWeekYear from '../getUTCWeekYear/index.js';\nimport startOfUTCWeek from '../startOfUTCWeek/index.js';\nimport requiredArgs from '../requiredArgs/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCWeekYear(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate);\n  var year = getUTCWeekYear(dirtyDate, dirtyOptions);\n  var firstWeek = new Date(0);\n  firstWeek.setUTCFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setUTCHours(0, 0, 0, 0);\n  var date = startOfUTCWeek(firstWeek, dirtyOptions);\n  return date;\n}","import lightFormatters from '../lightFormatters/index.js';\nimport getUTCDayOfYear from '../../../_lib/getUTCDayOfYear/index.js';\nimport getUTCISOWeek from '../../../_lib/getUTCISOWeek/index.js';\nimport getUTCISOWeekYear from '../../../_lib/getUTCISOWeekYear/index.js';\nimport getUTCWeek from '../../../_lib/getUTCWeek/index.js';\nimport getUTCWeekYear from '../../../_lib/getUTCWeekYear/index.js';\nimport addLeadingZeros from '../../addLeadingZeros/index.js';\nvar dayPeriodEnum = {\n  am: 'am',\n  pm: 'pm',\n  midnight: 'midnight',\n  noon: 'noon',\n  morning: 'morning',\n  afternoon: 'afternoon',\n  evening: 'evening',\n  night: 'night'\n  /*\n   * |     | Unit                           |     | Unit                           |\n   * |-----|--------------------------------|-----|--------------------------------|\n   * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n   * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n   * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n   * |  d  | Day of month                   |  D  | Day of year                    |\n   * |  e  | Local day of week              |  E  | Day of week                    |\n   * |  f  |                                |  F* | Day of week in month           |\n   * |  g* | Modified Julian day            |  G  | Era                            |\n   * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n   * |  i! | ISO day of week                |  I! | ISO week of year               |\n   * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n   * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n   * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n   * |  m  | Minute                         |  M  | Month                          |\n   * |  n  |                                |  N  |                                |\n   * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |\n   * |  p! | Long localized time            |  P! | Long localized date            |\n   * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n   * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n   * |  s  | Second                         |  S  | Fraction of second             |\n   * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n   * |  u  | Extended year                  |  U* | Cyclic year                    |\n   * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n   * |  w  | Local week of year             |  W* | Week of month                  |\n   * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n   * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n   * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n   *\n   * Letters marked by * are not implemented but reserved by Unicode standard.\n   *\n   * Letters marked by ! are non-standard, but implemented by date-fns:\n   * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)\n   * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n   *   i.e. 7 for Sunday, 1 for Monday, etc.\n   * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n   * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n   *   `R` is supposed to be used in conjunction with `I` and `i`\n   *   for universal ISO week-numbering date, whereas\n   *   `Y` is supposed to be used in conjunction with `w` and `e`\n   *   for week-numbering date specific to the locale.\n   * - `P` is long localized date format\n   * - `p` is long localized time format\n   */\n\n};\nvar formatters = {\n  // Era\n  G: function G(date, token, localize) {\n    var era = date.getUTCFullYear() > 0 ? 1 : 0;\n\n    switch (token) {\n      // AD, BC\n      case 'G':\n      case 'GG':\n      case 'GGG':\n        return localize.era(era, {\n          width: 'abbreviated'\n        });\n      // A, B\n\n      case 'GGGGG':\n        return localize.era(era, {\n          width: 'narrow'\n        });\n      // Anno Domini, Before Christ\n\n      case 'GGGG':\n      default:\n        return localize.era(era, {\n          width: 'wide'\n        });\n    }\n  },\n  // Year\n  y: function y(date, token, localize) {\n    // Ordinal number\n    if (token === 'yo') {\n      var signedYear = date.getUTCFullYear(); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n      var year = signedYear > 0 ? signedYear : 1 - signedYear;\n      return localize.ordinalNumber(year, {\n        unit: 'year'\n      });\n    }\n\n    return lightFormatters.y(date, token);\n  },\n  // Local week-numbering year\n  Y: function Y(date, token, localize, options) {\n    var signedWeekYear = getUTCWeekYear(date, options); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n    var weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear; // Two digit year\n\n    if (token === 'YY') {\n      var twoDigitYear = weekYear % 100;\n      return addLeadingZeros(twoDigitYear, 2);\n    } // Ordinal number\n\n\n    if (token === 'Yo') {\n      return localize.ordinalNumber(weekYear, {\n        unit: 'year'\n      });\n    } // Padding\n\n\n    return addLeadingZeros(weekYear, token.length);\n  },\n  // ISO week-numbering year\n  R: function R(date, token) {\n    var isoWeekYear = getUTCISOWeekYear(date); // Padding\n\n    return addLeadingZeros(isoWeekYear, token.length);\n  },\n  // Extended year. This is a single number designating the year of this calendar system.\n  // The main difference between `y` and `u` localizers are B.C. years:\n  // | Year | `y` | `u` |\n  // |------|-----|-----|\n  // | AC 1 |   1 |   1 |\n  // | BC 1 |   1 |   0 |\n  // | BC 2 |   2 |  -1 |\n  // Also `yy` always returns the last two digits of a year,\n  // while `uu` pads single digit years to 2 characters and returns other years unchanged.\n  u: function u(date, token) {\n    var year = date.getUTCFullYear();\n    return addLeadingZeros(year, token.length);\n  },\n  // Quarter\n  Q: function Q(date, token, localize) {\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\n\n    switch (token) {\n      // 1, 2, 3, 4\n      case 'Q':\n        return String(quarter);\n      // 01, 02, 03, 04\n\n      case 'QQ':\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n\n      case 'Qo':\n        return localize.ordinalNumber(quarter, {\n          unit: 'quarter'\n        });\n      // Q1, Q2, Q3, Q4\n\n      case 'QQQ':\n        return localize.quarter(quarter, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n      case 'QQQQQ':\n        return localize.quarter(quarter, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // 1st quarter, 2nd quarter, ...\n\n      case 'QQQQ':\n      default:\n        return localize.quarter(quarter, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone quarter\n  q: function q(date, token, localize) {\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\n\n    switch (token) {\n      // 1, 2, 3, 4\n      case 'q':\n        return String(quarter);\n      // 01, 02, 03, 04\n\n      case 'qq':\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n\n      case 'qo':\n        return localize.ordinalNumber(quarter, {\n          unit: 'quarter'\n        });\n      // Q1, Q2, Q3, Q4\n\n      case 'qqq':\n        return localize.quarter(quarter, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n      case 'qqqqq':\n        return localize.quarter(quarter, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // 1st quarter, 2nd quarter, ...\n\n      case 'qqqq':\n      default:\n        return localize.quarter(quarter, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // Month\n  M: function M(date, token, localize) {\n    var month = date.getUTCMonth();\n\n    switch (token) {\n      case 'M':\n      case 'MM':\n        return lightFormatters.M(date, token);\n      // 1st, 2nd, ..., 12th\n\n      case 'Mo':\n        return localize.ordinalNumber(month + 1, {\n          unit: 'month'\n        });\n      // Jan, Feb, ..., Dec\n\n      case 'MMM':\n        return localize.month(month, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // J, F, ..., D\n\n      case 'MMMMM':\n        return localize.month(month, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // January, February, ..., December\n\n      case 'MMMM':\n      default:\n        return localize.month(month, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone month\n  L: function L(date, token, localize) {\n    var month = date.getUTCMonth();\n\n    switch (token) {\n      // 1, 2, ..., 12\n      case 'L':\n        return String(month + 1);\n      // 01, 02, ..., 12\n\n      case 'LL':\n        return addLeadingZeros(month + 1, 2);\n      // 1st, 2nd, ..., 12th\n\n      case 'Lo':\n        return localize.ordinalNumber(month + 1, {\n          unit: 'month'\n        });\n      // Jan, Feb, ..., Dec\n\n      case 'LLL':\n        return localize.month(month, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // J, F, ..., D\n\n      case 'LLLLL':\n        return localize.month(month, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // January, February, ..., December\n\n      case 'LLLL':\n      default:\n        return localize.month(month, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // Local week of year\n  w: function w(date, token, localize, options) {\n    var week = getUTCWeek(date, options);\n\n    if (token === 'wo') {\n      return localize.ordinalNumber(week, {\n        unit: 'week'\n      });\n    }\n\n    return addLeadingZeros(week, token.length);\n  },\n  // ISO week of year\n  I: function I(date, token, localize) {\n    var isoWeek = getUTCISOWeek(date);\n\n    if (token === 'Io') {\n      return localize.ordinalNumber(isoWeek, {\n        unit: 'week'\n      });\n    }\n\n    return addLeadingZeros(isoWeek, token.length);\n  },\n  // Day of the month\n  d: function d(date, token, localize) {\n    if (token === 'do') {\n      return localize.ordinalNumber(date.getUTCDate(), {\n        unit: 'date'\n      });\n    }\n\n    return lightFormatters.d(date, token);\n  },\n  // Day of year\n  D: function D(date, token, localize) {\n    var dayOfYear = getUTCDayOfYear(date);\n\n    if (token === 'Do') {\n      return localize.ordinalNumber(dayOfYear, {\n        unit: 'dayOfYear'\n      });\n    }\n\n    return addLeadingZeros(dayOfYear, token.length);\n  },\n  // Day of week\n  E: function E(date, token, localize) {\n    var dayOfWeek = date.getUTCDay();\n\n    switch (token) {\n      // Tue\n      case 'E':\n      case 'EE':\n      case 'EEE':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'EEEEE':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'EEEEEE':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'EEEE':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Local day of week\n  e: function e(date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay();\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n\n    switch (token) {\n      // Numerical value (Nth day of week with current locale or weekStartsOn)\n      case 'e':\n        return String(localDayOfWeek);\n      // Padded numerical value\n\n      case 'ee':\n        return addLeadingZeros(localDayOfWeek, 2);\n      // 1st, 2nd, ..., 7th\n\n      case 'eo':\n        return localize.ordinalNumber(localDayOfWeek, {\n          unit: 'day'\n        });\n\n      case 'eee':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'eeeee':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'eeeeee':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'eeee':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone local day of week\n  c: function c(date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay();\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n\n    switch (token) {\n      // Numerical value (same as in `e`)\n      case 'c':\n        return String(localDayOfWeek);\n      // Padded numerical value\n\n      case 'cc':\n        return addLeadingZeros(localDayOfWeek, token.length);\n      // 1st, 2nd, ..., 7th\n\n      case 'co':\n        return localize.ordinalNumber(localDayOfWeek, {\n          unit: 'day'\n        });\n\n      case 'ccc':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // T\n\n      case 'ccccc':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // Tu\n\n      case 'cccccc':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'standalone'\n        });\n      // Tuesday\n\n      case 'cccc':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // ISO day of week\n  i: function i(date, token, localize) {\n    var dayOfWeek = date.getUTCDay();\n    var isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;\n\n    switch (token) {\n      // 2\n      case 'i':\n        return String(isoDayOfWeek);\n      // 02\n\n      case 'ii':\n        return addLeadingZeros(isoDayOfWeek, token.length);\n      // 2nd\n\n      case 'io':\n        return localize.ordinalNumber(isoDayOfWeek, {\n          unit: 'day'\n        });\n      // Tue\n\n      case 'iii':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'iiiii':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'iiiiii':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'iiii':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // AM or PM\n  a: function a(date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';\n\n    switch (token) {\n      case 'a':\n      case 'aa':\n      case 'aaa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'aaaaa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'aaaa':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // AM, PM, midnight, noon\n  b: function b(date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue;\n\n    if (hours === 12) {\n      dayPeriodEnumValue = dayPeriodEnum.noon;\n    } else if (hours === 0) {\n      dayPeriodEnumValue = dayPeriodEnum.midnight;\n    } else {\n      dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';\n    }\n\n    switch (token) {\n      case 'b':\n      case 'bb':\n      case 'bbb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'bbbbb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'bbbb':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // in the morning, in the afternoon, in the evening, at night\n  B: function B(date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue;\n\n    if (hours >= 17) {\n      dayPeriodEnumValue = dayPeriodEnum.evening;\n    } else if (hours >= 12) {\n      dayPeriodEnumValue = dayPeriodEnum.afternoon;\n    } else if (hours >= 4) {\n      dayPeriodEnumValue = dayPeriodEnum.morning;\n    } else {\n      dayPeriodEnumValue = dayPeriodEnum.night;\n    }\n\n    switch (token) {\n      case 'B':\n      case 'BB':\n      case 'BBB':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'BBBBB':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'BBBB':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Hour [1-12]\n  h: function h(date, token, localize) {\n    if (token === 'ho') {\n      var hours = date.getUTCHours() % 12;\n      if (hours === 0) hours = 12;\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return lightFormatters.h(date, token);\n  },\n  // Hour [0-23]\n  H: function H(date, token, localize) {\n    if (token === 'Ho') {\n      return localize.ordinalNumber(date.getUTCHours(), {\n        unit: 'hour'\n      });\n    }\n\n    return lightFormatters.H(date, token);\n  },\n  // Hour [0-11]\n  K: function K(date, token, localize) {\n    var hours = date.getUTCHours() % 12;\n\n    if (token === 'Ko') {\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n  // Hour [1-24]\n  k: function k(date, token, localize) {\n    var hours = date.getUTCHours();\n    if (hours === 0) hours = 24;\n\n    if (token === 'ko') {\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n  // Minute\n  m: function m(date, token, localize) {\n    if (token === 'mo') {\n      return localize.ordinalNumber(date.getUTCMinutes(), {\n        unit: 'minute'\n      });\n    }\n\n    return lightFormatters.m(date, token);\n  },\n  // Second\n  s: function s(date, token, localize) {\n    if (token === 'so') {\n      return localize.ordinalNumber(date.getUTCSeconds(), {\n        unit: 'second'\n      });\n    }\n\n    return lightFormatters.s(date, token);\n  },\n  // Fraction of second\n  S: function S(date, token) {\n    return lightFormatters.S(date, token);\n  },\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n  X: function X(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    if (timezoneOffset === 0) {\n      return 'Z';\n    }\n\n    switch (token) {\n      // Hours and optional minutes\n      case 'X':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n\n      case 'XXXX':\n      case 'XX':\n        // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n\n      case 'XXXXX':\n      case 'XXX': // Hours and minutes with `:` delimiter\n\n      default:\n        return formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n  x: function x(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Hours and optional minutes\n      case 'x':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n\n      case 'xxxx':\n      case 'xx':\n        // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n\n      case 'xxxxx':\n      case 'xxx': // Hours and minutes with `:` delimiter\n\n      default:\n        return formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (GMT)\n  O: function O(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case 'O':\n      case 'OO':\n      case 'OOO':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\n      // Long\n\n      case 'OOOO':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (specific non-location)\n  z: function z(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case 'z':\n      case 'zz':\n      case 'zzz':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\n      // Long\n\n      case 'zzzz':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Seconds timestamp\n  t: function t(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timestamp = Math.floor(originalDate.getTime() / 1000);\n    return addLeadingZeros(timestamp, token.length);\n  },\n  // Milliseconds timestamp\n  T: function T(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timestamp = originalDate.getTime();\n    return addLeadingZeros(timestamp, token.length);\n  }\n};\n\nfunction formatTimezoneShort(offset, dirtyDelimiter) {\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = Math.floor(absOffset / 60);\n  var minutes = absOffset % 60;\n\n  if (minutes === 0) {\n    return sign + String(hours);\n  }\n\n  var delimiter = dirtyDelimiter || '';\n  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);\n}\n\nfunction formatTimezoneWithOptionalMinutes(offset, dirtyDelimiter) {\n  if (offset % 60 === 0) {\n    var sign = offset > 0 ? '-' : '+';\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);\n  }\n\n  return formatTimezone(offset, dirtyDelimiter);\n}\n\nfunction formatTimezone(offset, dirtyDelimiter) {\n  var delimiter = dirtyDelimiter || '';\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = addLeadingZeros(Math.floor(absOffset / 60), 2);\n  var minutes = addLeadingZeros(absOffset % 60, 2);\n  return sign + hours + delimiter + minutes;\n}\n\nexport default formatters;","import toDate from '../../toDate/index.js';\nimport startOfUTCWeek from '../startOfUTCWeek/index.js';\nimport startOfUTCWeekYear from '../startOfUTCWeekYear/index.js';\nimport requiredArgs from '../requiredArgs/index.js';\nvar MILLISECONDS_IN_WEEK = 604800000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCWeek(dirtyDate, options) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var diff = startOfUTCWeek(date, options).getTime() - startOfUTCWeekYear(date, options).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","import toDate from '../../toDate/index.js';\nimport startOfUTCISOWeek from '../startOfUTCISOWeek/index.js';\nimport startOfUTCISOWeekYear from '../startOfUTCISOWeekYear/index.js';\nimport requiredArgs from '../requiredArgs/index.js';\nvar MILLISECONDS_IN_WEEK = 604800000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var diff = startOfUTCISOWeek(date).getTime() - startOfUTCISOWeekYear(date).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","import toDate from '../../toDate/index.js';\nimport requiredArgs from '../requiredArgs/index.js';\nvar MILLISECONDS_IN_DAY = 86400000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCDayOfYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var timestamp = date.getTime();\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n  var startOfYearTimestamp = date.getTime();\n  var difference = timestamp - startOfYearTimestamp;\n  return Math.floor(difference / MILLISECONDS_IN_DAY) + 1;\n}","function dateLongFormatter(pattern, formatLong) {\n  switch (pattern) {\n    case 'P':\n      return formatLong.date({\n        width: 'short'\n      });\n\n    case 'PP':\n      return formatLong.date({\n        width: 'medium'\n      });\n\n    case 'PPP':\n      return formatLong.date({\n        width: 'long'\n      });\n\n    case 'PPPP':\n    default:\n      return formatLong.date({\n        width: 'full'\n      });\n  }\n}\n\nfunction timeLongFormatter(pattern, formatLong) {\n  switch (pattern) {\n    case 'p':\n      return formatLong.time({\n        width: 'short'\n      });\n\n    case 'pp':\n      return formatLong.time({\n        width: 'medium'\n      });\n\n    case 'ppp':\n      return formatLong.time({\n        width: 'long'\n      });\n\n    case 'pppp':\n    default:\n      return formatLong.time({\n        width: 'full'\n      });\n  }\n}\n\nfunction dateTimeLongFormatter(pattern, formatLong) {\n  var matchResult = pattern.match(/(P+)(p+)?/);\n  var datePattern = matchResult[1];\n  var timePattern = matchResult[2];\n\n  if (!timePattern) {\n    return dateLongFormatter(pattern, formatLong);\n  }\n\n  var dateTimeFormat;\n\n  switch (datePattern) {\n    case 'P':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'short'\n      });\n      break;\n\n    case 'PP':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'medium'\n      });\n      break;\n\n    case 'PPP':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'long'\n      });\n      break;\n\n    case 'PPPP':\n    default:\n      dateTimeFormat = formatLong.dateTime({\n        width: 'full'\n      });\n      break;\n  }\n\n  return dateTimeFormat.replace('{{date}}', dateLongFormatter(datePattern, formatLong)).replace('{{time}}', timeLongFormatter(timePattern, formatLong));\n}\n\nvar longFormatters = {\n  p: timeLongFormatter,\n  P: dateTimeLongFormatter\n};\nexport default longFormatters;","var protectedDayOfYearTokens = ['D', 'DD'];\nvar protectedWeekYearTokens = ['YY', 'YYYY'];\nexport function isProtectedDayOfYearToken(token) {\n  return protectedDayOfYearTokens.indexOf(token) !== -1;\n}\nexport function isProtectedWeekYearToken(token) {\n  return protectedWeekYearTokens.indexOf(token) !== -1;\n}\nexport function throwProtectedError(token, format, input) {\n  if (token === 'YYYY') {\n    throw new RangeError(\"Use `yyyy` instead of `YYYY` (in `\".concat(format, \"`) for formatting years to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n  } else if (token === 'YY') {\n    throw new RangeError(\"Use `yy` instead of `YY` (in `\".concat(format, \"`) for formatting years to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n  } else if (token === 'D') {\n    throw new RangeError(\"Use `d` instead of `D` (in `\".concat(format, \"`) for formatting days of the month to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n  } else if (token === 'DD') {\n    throw new RangeError(\"Use `dd` instead of `DD` (in `\".concat(format, \"`) for formatting days of the month to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n  }\n}","import isValid from '../isValid/index.js';\nimport defaultLocale from '../locale/en-US/index.js';\nimport subMilliseconds from '../subMilliseconds/index.js';\nimport toDate from '../toDate/index.js';\nimport formatters from '../_lib/format/formatters/index.js';\nimport longFormatters from '../_lib/format/longFormatters/index.js';\nimport getTimezoneOffsetInMilliseconds from '../_lib/getTimezoneOffsetInMilliseconds/index.js';\nimport { isProtectedDayOfYearToken, isProtectedWeekYearToken, throwProtectedError } from '../_lib/protectedTokens/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js'; // This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\n\nvar formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g; // This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\n\nvar longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\nvar escapedStringRegExp = /^'([^]*?)'?$/;\nvar doubleQuoteRegExp = /''/g;\nvar unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n/**\n * @name format\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format. The result may vary by locale.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://git.io/fxCyr\n *\n * The characters wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n * (see the last example)\n *\n * Format of the string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 7 below the table).\n *\n * Accepted patterns:\n * | Unit                            | Pattern | Result examples                   | Notes |\n * |---------------------------------|---------|-----------------------------------|-------|\n * | Era                             | G..GGG  | AD, BC                            |       |\n * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 | GGGGG   | A, B                              |       |\n * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |\n * |                                 | yy      | 44, 01, 00, 17                    | 5     |\n * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |\n * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |\n * |                                 | yyyyy   | ...                               | 3,5   |\n * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |\n * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |\n * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |\n * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |\n * |                                 | YYYYY   | ...                               | 3,5   |\n * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |\n * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |\n * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |\n * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |\n * |                                 | RRRRR   | ...                               | 3,5,7 |\n * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |\n * |                                 | uu      | -43, 01, 1900, 2017               | 5     |\n * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |\n * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |\n * |                                 | uuuuu   | ...                               | 3,5   |\n * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |\n * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | QQ      | 01, 02, 03, 04                    |       |\n * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |\n * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | qq      | 01, 02, 03, 04                    |       |\n * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |\n * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |\n * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | MM      | 01, 02, ..., 12                   |       |\n * |                                 | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 | MMMM    | January, February, ..., December  | 2     |\n * |                                 | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |\n * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | LL      | 01, 02, ..., 12                   |       |\n * |                                 | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 | LLLL    | January, February, ..., December  | 2     |\n * |                                 | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | w       | 1, 2, ..., 53                     |       |\n * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |\n * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | II      | 01, 02, ..., 53                   | 7     |\n * | Day of month                    | d       | 1, 2, ..., 31                     |       |\n * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |\n * |                                 | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     | D       | 1, 2, ..., 365, 366               | 9     |\n * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |\n * |                                 | DD      | 01, 02, ..., 365, 366             | 9     |\n * |                                 | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 | DDDD    | ...                               | 3     |\n * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |\n * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |\n * |                                 | ii      | 01, 02, ..., 07                   | 7     |\n * |                                 | iii     | Mon, Tue, Wed, ..., Sun           | 7     |\n * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |\n * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |\n * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Su, Sa        | 7     |\n * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | ee      | 02, 03, ..., 01                   |       |\n * |                                 | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | cc      | 02, 03, ..., 01                   |       |\n * |                                 | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | AM, PM                          | a..aaa  | AM, PM                            |       |\n * |                                 | aaaa    | a.m., p.m.                        | 2     |\n * |                                 | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          | b..bbb  | AM, PM, noon, midnight            |       |\n * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |\n * |                                 | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |\n * |                                 | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |\n * |                                 | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |\n * |                                 | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |\n * |                                 | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          | m       | 0, 1, ..., 59                     |       |\n * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | mm      | 00, 01, ..., 59                   |       |\n * | Second                          | s       | 0, 1, ..., 59                     |       |\n * |                                 | so      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | ss      | 00, 01, ..., 59                   |       |\n * | Fraction of second              | S       | 0, 1, ..., 9                      |       |\n * |                                 | SS      | 00, 01, ..., 99                   |       |\n * |                                 | SSS     | 000, 0001, ..., 999               |       |\n * |                                 | SSSS    | ...                               | 3     |\n * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |\n * |                                 | XX      | -0800, +0530, Z                   |       |\n * |                                 | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |\n * |                                 | xx      | -0800, +0530, +0000               |       |\n * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |\n * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |\n * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |\n * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |\n * | Seconds timestamp               | t       | 512969520                         | 7     |\n * |                                 | tt      | ...                               | 3,7   |\n * | Milliseconds timestamp          | T       | 512969520900                      | 7     |\n * |                                 | TT      | ...                               | 3,7   |\n * | Long localized date             | P       | 05/29/1453                        | 7     |\n * |                                 | PP      | May 29, 1453                      | 7     |\n * |                                 | PPP     | May 29th, 1453                    | 7     |\n * |                                 | PPPP    | Sunday, May 29th, 1453            | 2,7   |\n * | Long localized time             | p       | 12:00 AM                          | 7     |\n * |                                 | pp      | 12:00:00 AM                       | 7     |\n * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |\n * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |\n * | Combination of date and time    | Pp      | 05/29/1453, 12:00 AM              | 7     |\n * |                                 | PPpp    | May 29, 1453, 12:00:00 AM         | 7     |\n * |                                 | PPPppp  | May 29th, 1453 at ...             | 7     |\n * |                                 | PPPPpppp| Sunday, May 29th, 1453 at ...     | 2,7   |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)\n *    the output will be the same as default pattern for this unit, usually\n *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units\n *    are marked with \"2\" in the last column of the table.\n *\n *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`\n *\n * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).\n *    The output will be padded with zeros to match the length of the pattern.\n *\n *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`\n *\n * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 5. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` always returns the last two digits of a year,\n *    while `uu` pads single digit years to 2 characters and returns other years unchanged:\n *\n *    | Year | `yy` | `uu` |\n *    |------|------|------|\n *    | 1    |   01 |   01 |\n *    | 14   |   14 |   14 |\n *    | 376  |   76 |  376 |\n *    | 1453 |   53 | 1453 |\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [getISOWeekYear]{@link https://date-fns.org/docs/getISOWeekYear}\n *    and [getWeekYear]{@link https://date-fns.org/docs/getWeekYear}).\n *\n * 6. Specific non-location timezones are currently unavailable in `date-fns`,\n *    so right now these tokens fall back to GMT timezones.\n *\n * 7. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `t`: seconds timestamp\n *    - `T`: milliseconds timestamp\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 8. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://git.io/fxCyr\n *\n * 9. `D` and `DD` tokens represent days of the year but they are ofthen confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://git.io/fxCyr\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The second argument is now required for the sake of explicitness.\n *\n *   ```javascript\n *   // Before v2.0.0\n *   format(new Date(2016, 0, 1))\n *\n *   // v2.0.0 onward\n *   format(new Date(2016, 0, 1), \"yyyy-MM-dd'T'HH:mm:ss.SSSxxx\")\n *   ```\n *\n * - New format string API for `format` function\n *   which is based on [Unicode Technical Standard #35](https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table).\n *   See [this post](https://blog.date-fns.org/post/unicode-tokens-in-date-fns-v2-sreatyki91jg) for more details.\n *\n * - Characters are now escaped using single quote symbols (`'`) instead of square brackets.\n *\n * @param {Date|Number} date - the original date\n * @param {String} format - the string of tokens\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {Number} [options.firstWeekContainsDate=1] - the day of January, which is\n * @param {Boolean} [options.useAdditionalWeekYearTokens=false] - if true, allows usage of the week-numbering year tokens `YY` and `YYYY`;\n *   see: https://git.io/fxCyr\n * @param {Boolean} [options.useAdditionalDayOfYearTokens=false] - if true, allows usage of the day of year tokens `D` and `DD`;\n *   see: https://git.io/fxCyr\n * @returns {String} the formatted date string\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `options.locale` must contain `localize` property\n * @throws {RangeError} `options.locale` must contain `formatLong` property\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n * @throws {RangeError} use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} format string contains an unescaped latin alphabet character\n *\n * @example\n * // Represent 11 February 2014 in middle-endian format:\n * var result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')\n * //=> '02/11/2014'\n *\n * @example\n * // Represent 2 July 2014 in Esperanto:\n * import { eoLocale } from 'date-fns/locale/eo'\n * var result = format(new Date(2014, 6, 2), \"do 'de' MMMM yyyy\", {\n *   locale: eoLocale\n * })\n * //=> '2-a de julio 2014'\n *\n * @example\n * // Escape string by single quote characters:\n * var result = format(new Date(2014, 6, 2, 15), \"h 'o''clock'\")\n * //=> \"3 o'clock\"\n */\n\nexport default function format(dirtyDate, dirtyFormatStr, dirtyOptions) {\n  requiredArgs(2, arguments);\n  var formatStr = String(dirtyFormatStr);\n  var options = dirtyOptions || {};\n  var locale = options.locale || defaultLocale;\n  var localeFirstWeekContainsDate = locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var localeWeekStartsOn = locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  if (!locale.localize) {\n    throw new RangeError('locale must contain localize property');\n  }\n\n  if (!locale.formatLong) {\n    throw new RangeError('locale must contain formatLong property');\n  }\n\n  var originalDate = toDate(dirtyDate);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError('Invalid time value');\n  } // Convert the date in system timezone to the same date in UTC+00:00 timezone.\n  // This ensures that when UTC functions will be implemented, locales will be compatible with them.\n  // See an issue about UTC functions: https://github.com/date-fns/date-fns/issues/376\n\n\n  var timezoneOffset = getTimezoneOffsetInMilliseconds(originalDate);\n  var utcDate = subMilliseconds(originalDate, timezoneOffset);\n  var formatterOptions = {\n    firstWeekContainsDate: firstWeekContainsDate,\n    weekStartsOn: weekStartsOn,\n    locale: locale,\n    _originalDate: originalDate\n  };\n  var result = formatStr.match(longFormattingTokensRegExp).map(function (substring) {\n    var firstCharacter = substring[0];\n\n    if (firstCharacter === 'p' || firstCharacter === 'P') {\n      var longFormatter = longFormatters[firstCharacter];\n      return longFormatter(substring, locale.formatLong, formatterOptions);\n    }\n\n    return substring;\n  }).join('').match(formattingTokensRegExp).map(function (substring) {\n    // Replace two single quote characters with one single quote character\n    if (substring === \"''\") {\n      return \"'\";\n    }\n\n    var firstCharacter = substring[0];\n\n    if (firstCharacter === \"'\") {\n      return cleanEscapedString(substring);\n    }\n\n    var formatter = formatters[firstCharacter];\n\n    if (formatter) {\n      if (!options.useAdditionalWeekYearTokens && isProtectedWeekYearToken(substring)) {\n        throwProtectedError(substring, dirtyFormatStr, dirtyDate);\n      }\n\n      if (!options.useAdditionalDayOfYearTokens && isProtectedDayOfYearToken(substring)) {\n        throwProtectedError(substring, dirtyFormatStr, dirtyDate);\n      }\n\n      return formatter(utcDate, substring, locale.localize, formatterOptions);\n    }\n\n    if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n      throw new RangeError('Format string contains an unescaped latin alphabet character `' + firstCharacter + '`');\n    }\n\n    return substring;\n  }).join('');\n  return result;\n}\n\nfunction cleanEscapedString(input) {\n  return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, \"'\");\n}"],"sourceRoot":""}