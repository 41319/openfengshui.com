{"version":3,"sources":["webpack://gatsby-starter-default/./src/components/side-latest-post/style.jsx","webpack://gatsby-starter-default/./src/components/side-latest-post/index.jsx","webpack://gatsby-starter-default/./src/container/latest-post/style.jsx","webpack://gatsby-starter-default/./src/container/latest-post/index.jsx","webpack://gatsby-starter-default/./src/templates/tag-post/style.js","webpack://gatsby-starter-default/./src/templates/tag-post/index.js"],"names":["SingleLatestPost","styled","LatestPostThum","LatestPostContent","Title","LatestPostMeta","PostDate","title","date","thume_image","slug","dateSlug","getImage","Link","to","src","alt","className","LatestPostInnerWrap","LatestPostHeader","LatestPostBox","props","sideLatestPostsData","useStaticQuery","latestPost","edges","map","latestPosts","i","key","node","frontmatter","fields","BlogDetailsArea","device","TagTitle","BlogDetailsRightSidebar","BlogAddBanner","data","location","pageContext","tag","pathname","crumbLabel","Container","Row","Col","lg","md","allMarkdownRemark","blog","categories","body","excerpt","authorId","authorSlug","href","S"],"mappings":"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","file":"component---src-templates-tag-post-index-js-db960960df9f11214004.js","sourcesContent":["import styled, { device } from \"@theme/utils\";\n\nexport const SingleLatestPost = styled.div`\n    display: -webkit-box;\n    display: -webkit-flex;\n    display: -ms-flexbox;\n    display: flex;\n    -webkit-box-align: center;\n    -webkit-align-items: center;\n    -ms-flex-align: center;\n    align-items: center;\n    margin-top: 20px;\n`\nexport const LatestPostThum = styled.div`\n    -webkit-flex-basis: 0 0 auto;\n    -ms-flex-preferred-size: 0 0 auto;\n    flex-basis: 0 0 auto;\n    min-width: 84px;\n    img {\n        border-radius: 10px;\n    }\n`\nexport const LatestPostContent = styled.div`\n    margin-left: 20px;\n`\nexport const Title = styled.h6`\n    margin-top: 0px;\n    font-size: 15px;\n`\nexport const LatestPostMeta = styled.div`\n    font-size: 12px;\n    margin-top: 10px;\n`\nexport const PostDate = styled.span`\n    position: relative;\n    padding-right: 10px;\n    margin-right: 6px;\n    i {\n        margin-right: 5px;\n    }\n`\nexport const PostTime = styled.span`\n\n`","import { Link } from 'gatsby'\nimport React from 'react'\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\nimport {\n    SingleLatestPost,\n    LatestPostThum,\n    LatestPostContent,\n    Title,\n    LatestPostMeta,\n    PostDate\n} from './style'\n\n\nconst SideLatestPosts = ({title,date,thume_image,slug, dateSlug }) => {\n    const image = getImage(thume_image);\n    return (\n        <SingleLatestPost>\n            <LatestPostThum>\n                <Link to={`/${slug}`}>\n                    <img src={thume_image}  alt=\"\"/>\n                </Link>\n            </LatestPostThum>\n            <LatestPostContent>\n                <Title>\n                    <Link to={`/${slug}`}>{title}</Link>\n                </Title>\n                <LatestPostMeta>\n                    <PostDate>\n                        <i className=\"icofont-ui-calendar\"></i> \n                        <Link to={`/date/${dateSlug}`}>{date}</Link>\n                    </PostDate>\n                </LatestPostMeta>\n            </LatestPostContent>\n        </SingleLatestPost>\n    )\n}\n\nexport default SideLatestPosts\n","import styled, { device } from \"@theme/utils\";\n\nexport const LatestPostInnerWrap = styled.div`\nmargin-top: 40px;\npadding: 30px 24px;\nbackground: #fafafa;\nborder-radius: 10px;\n`\nexport const LatestPostHeader = styled.div`\n   \n`\nexport const LatestPostBox = styled.div`\n   \n`","import React from 'react'\nimport PropTypes from 'prop-types'\nimport {graphql, useStaticQuery } from \"gatsby\";\nimport SideLatestPosts from '../../components/side-latest-post';\nimport {\n    LatestPostInnerWrap,\n    LatestPostHeader,\n    LatestPostBox\n} from \"./style\";\nconst LatestPostArea = props => {\n    const sideLatestPostsQuery = useStaticQuery(graphql`\n        query SideLatestPostsQuery {\n            latestPost: allMarkdownRemark(\n                sort: {fields: [frontmatter___date], order: DESC},\n                limit: 5\n              ) {\n                edges {\n                    node {\n                        id\n                        frontmatter {\n                            title\n                            date(formatString: \"DD MMMM YYYY\")\n                            format\n                            is_featured\n                            thume_image {\n                                childImageSharp {\n                                    gatsbyImageData(width: 84, height: 84, quality: 100)\n                                }\n                            }\n                        }\n                        fields {\n                            slug\n                            dateSlug\n                        }\n                    }\n                }\n            }\n            \n        }\n    `);\n    const sideLatestPostsData = sideLatestPostsQuery.latestPost.edges;\n\n    return (\n        <LatestPostInnerWrap>\n            <LatestPostHeader>\n                <div className=\"section-title\">\n                    <h3>Latest Post</h3>\n                </div>\n            </LatestPostHeader>\n            <LatestPostBox>\n                {sideLatestPostsData && sideLatestPostsData.map((latestPosts, i) => {\n                    return ( \n                        <SideLatestPosts\n                            key={i}\n                            title={latestPosts.node.frontmatter.title}\n                            thume_image={latestPosts.node.frontmatter.thume_image}\n                            date={latestPosts.node.frontmatter.date}\n                            dateSlug={latestPosts.node.fields.dateSlug}\n                            slug={latestPosts.node.fields.slug}\n                        />\n                    );\n                })}\n            </LatestPostBox>\n        </LatestPostInnerWrap>\n    )\n}\n\nLatestPostArea.propTypes = {\n\n}\n\nexport default LatestPostArea\n","import styled, { device } from \"@theme/utils\";\n\nexport const BlogDetailsArea = styled.section`\n    padding: 60px 0;\n    ${device.medium} {\n        padding: 80px 0;\n    }\n    ${device.large} {\n        padding: 80px 0;\n    }\n    ${device.xlarge} {\n        padding: 80px 0;\n    }\n`;\nexport const TagTitle = styled.h3`\n    margin-bottom: 30px;\n`\nexport const BlogDetailsRightSidebar = styled.div`\n    margin-left: 0;\n    ${device.xlarge}{\n        margin-left: 40px;\n    }\n`\nexport const BlogAddBanner = styled.div`\n    a {\n        display: block;\n        img {\n            width: 100% !important;\n        }\n    }\n`\n","import PropTypes from \"prop-types\";\nimport Layout from \"@layout\";\nimport SEO from \"@components/seo\";\nimport PageBreadcrumb from \"@components/pagebreadcrumb\";\nimport { graphql } from \"gatsby\";\nimport { Row, Container, Col } from \"react-bootstrap\";\nimport LargeSinglePosts from \"../../components/large-single-post\";\nimport LatestPostArea from '../../container/latest-post';\nimport { StaticImage } from \"gatsby-plugin-image\";\nimport {BlogDetailsArea,TagTitle, BlogDetailsRightSidebar, BlogAddBanner } from \"./style\";\n\nconst TagPosts = ({ data, location, pageContext }) => {\n    const { tag } = pageContext;\n\n    return (\n        <Layout>\n            <SEO title={\"Blog Tags Post\"} pathname=\"/\" />\n            <PageBreadcrumb\n                pageContext={pageContext}\n                location={location}\n                crumbLabel=\"Blog Tag Post\"\n            />\n            <BlogDetailsArea>\n                <Container>\n                    <Row>\n                        <Col>\n                            <TagTitle>{`Tag Posts: ${tag}`}</TagTitle>\n                        </Col>\n                    </Row>\n                    <Row className=\"gx-5\">\n                        <Col lg={8} md={7}>\n                            <Row>\n                                {data.allMarkdownRemark.edges.map((blog, i) => {\n                                    return (\n                                        <Col lg={12} key={i}>\n                                            <LargeSinglePosts\n                                                title={blog.node.frontmatter.title}\n                                                thume_image={\n                                                    blog.node.frontmatter\n                                                        .thume_image\n                                                }\n                                                categories={\n                                                    blog.node.frontmatter.categories\n                                                }\n                                                body={blog.node.excerpt}\n                                                date={blog.node.frontmatter.date}\n                                                slug={blog.node.fields.slug}\n                                                authorId={blog.node.fields.authorId}\n                                                authorSlug={blog.node.fields.authorId}\n                                            />\n                                        </Col>\n                                    );\n                                })}\n                            </Row>\n                        </Col>\n                        <Col lg={4} md={5}>\n                            <BlogDetailsRightSidebar>\n                                <BlogAddBanner>\n                                    <a href=\"#\">\n                                        <StaticImage src=\"../../data/images/banners/add-banner.jpg\" alt=\"\"/>\n                                    </a>\n                                </BlogAddBanner>\n                                <LatestPostArea/>\n                            </BlogDetailsRightSidebar>\n                        </Col>\n                    </Row>\n                </Container>\n            </BlogDetailsArea>\n            \n        </Layout>\n    );\n};\n\nTagPosts.propTypes = {\n    data: PropTypes.object,\n    location: PropTypes.object,\n    pageContext: PropTypes.object,\n};\n\nexport const tagQuery = graphql`\n    query($tag: String!) {\n        allMarkdownRemark(\n            sort: { \n                fields: frontmatter___date, order: DESC }\n                filter: { \n                    frontmatter: { tags: { in: [$tag] }\n                }\n            }\n        ) {\n            edges {\n                node {\n                    id\n                    frontmatter {\n                        categories {\n                            name\n                        }\n                        date(formatString: \"MMMM DD YYYY\")\n                        tags\n                        quote_text\n                        title\n                        thume_image {\n                            childImageSharp {\n                                gatsbyImageData(width: 850, height: 400)\n                            }\n                        }\n                        author {\n                            name\n                        }\n                    }\n                    fields {\n                        slug\n                        authorId\n                    }\n                    excerpt(pruneLength: 100, truncate: true)\n                }\n            }\n        }\n    }\n`;\nexport default TagPosts;\n"],"sourceRoot":""}