{"version":3,"file":"08d28d0bfbfb3ff04a8fc22c998c9fd5c3644980-3c9484da3d24e88147b3.js","mappings":"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","sources":["webpack://gatsby-starter-default/./node_modules/@themesberg/react-bootstrap/lib/esm/Feedback.js","webpack://gatsby-starter-default/./node_modules/@themesberg/react-bootstrap/lib/esm/FormCheckLabel.js","webpack://gatsby-starter-default/./node_modules/@themesberg/react-bootstrap/lib/esm/FormCheck.js","webpack://gatsby-starter-default/./node_modules/@themesberg/react-bootstrap/lib/esm/FormControl.js","webpack://gatsby-starter-default/./node_modules/@themesberg/react-bootstrap/lib/esm/FormGroup.js","webpack://gatsby-starter-default/./node_modules/@themesberg/react-bootstrap/lib/esm/FormLabel.js","webpack://gatsby-starter-default/./node_modules/@themesberg/react-bootstrap/lib/esm/FormRange.js","webpack://gatsby-starter-default/./node_modules/@themesberg/react-bootstrap/lib/esm/FormSelect.js","webpack://gatsby-starter-default/./node_modules/@themesberg/react-bootstrap/lib/esm/FormText.js","webpack://gatsby-starter-default/./node_modules/@themesberg/react-bootstrap/lib/esm/Switch.js","webpack://gatsby-starter-default/./node_modules/@themesberg/react-bootstrap/lib/esm/Form.js","webpack://gatsby-starter-default/./node_modules/@themesberg/react-bootstrap/lib/esm/FormCheckInput.js","webpack://gatsby-starter-default/./node_modules/@themesberg/react-bootstrap/lib/esm/FormContext.js","webpack://gatsby-starter-default/./node_modules/@themesberg/react-bootstrap/lib/esm/InputGroup.js","webpack://gatsby-starter-default/../src/image-utils.ts","webpack://gatsby-starter-default/../src/components/hooks.ts","webpack://gatsby-starter-default/../src/components/layout-wrapper.tsx","webpack://gatsby-starter-default/../src/components/picture.tsx","webpack://gatsby-starter-default/../src/components/placeholder.tsx","webpack://gatsby-starter-default/../src/components/main-image.tsx","webpack://gatsby-starter-default/../src/components/gatsby-image.server.tsx","webpack://gatsby-starter-default/../src/components/gatsby-image.browser.tsx","webpack://gatsby-starter-default/../src/components/static-image.server.tsx","webpack://gatsby-starter-default/../src/components/static-image.tsx","webpack://gatsby-starter-default/./node_modules/gatsby-plugin-image/node_modules/camelcase/index.js","webpack://gatsby-starter-default/./src/components/Logo.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nvar propTypes = {\n  /**\n   * Specify whether the feedback is for valid or invalid fields\n   *\n   * @type {('valid'|'invalid')}\n   */\n  type: PropTypes.string,\n\n  /** Display feedback as a tooltip. */\n  tooltip: PropTypes.bool,\n  as: PropTypes.elementType\n};\nvar Feedback = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\nfunction (_ref, ref) {\n  var _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      className = _ref.className,\n      _ref$type = _ref.type,\n      type = _ref$type === void 0 ? 'valid' : _ref$type,\n      _ref$tooltip = _ref.tooltip,\n      tooltip = _ref$tooltip === void 0 ? false : _ref$tooltip,\n      props = _objectWithoutPropertiesLoose(_ref, [\"as\", \"className\", \"type\", \"tooltip\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n    ref: ref,\n    className: classNames(className, type + \"-\" + (tooltip ? 'tooltip' : 'feedback'))\n  }));\n});\nFeedback.displayName = 'Feedback';\nFeedback.propTypes = propTypes;\nexport default Feedback;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar FormCheckLabel = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      htmlFor = _ref.htmlFor,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"htmlFor\"]);\n\n  var _useContext = useContext(FormContext),\n      controlId = _useContext.controlId;\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check-label');\n  return /*#__PURE__*/React.createElement(\"label\", _extends({}, props, {\n    ref: ref,\n    htmlFor: htmlFor || controlId,\n    className: classNames(className, bsPrefix)\n  }));\n});\nFormCheckLabel.displayName = 'FormCheckLabel';\nexport default FormCheckLabel;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useContext, useMemo } from 'react';\nimport Feedback from './Feedback';\nimport FormCheckInput from './FormCheckInput';\nimport FormCheckLabel from './FormCheckLabel';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar FormCheck = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var id = _ref.id,\n      bsPrefix = _ref.bsPrefix,\n      bsSwitchPrefix = _ref.bsSwitchPrefix,\n      _ref$inline = _ref.inline,\n      inline = _ref$inline === void 0 ? false : _ref$inline,\n      _ref$disabled = _ref.disabled,\n      disabled = _ref$disabled === void 0 ? false : _ref$disabled,\n      _ref$isValid = _ref.isValid,\n      isValid = _ref$isValid === void 0 ? false : _ref$isValid,\n      _ref$isInvalid = _ref.isInvalid,\n      isInvalid = _ref$isInvalid === void 0 ? false : _ref$isInvalid,\n      _ref$feedbackTooltip = _ref.feedbackTooltip,\n      feedbackTooltip = _ref$feedbackTooltip === void 0 ? false : _ref$feedbackTooltip,\n      feedback = _ref.feedback,\n      className = _ref.className,\n      style = _ref.style,\n      _ref$title = _ref.title,\n      title = _ref$title === void 0 ? '' : _ref$title,\n      _ref$type = _ref.type,\n      type = _ref$type === void 0 ? 'checkbox' : _ref$type,\n      label = _ref.label,\n      children = _ref.children,\n      _ref$as = _ref.as,\n      as = _ref$as === void 0 ? 'input' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"id\", \"bsPrefix\", \"bsSwitchPrefix\", \"inline\", \"disabled\", \"isValid\", \"isInvalid\", \"feedbackTooltip\", \"feedback\", \"className\", \"style\", \"title\", \"type\", \"label\", \"children\", \"as\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check');\n  bsSwitchPrefix = useBootstrapPrefix(bsSwitchPrefix, 'form-switch');\n\n  var _useContext = useContext(FormContext),\n      controlId = _useContext.controlId;\n\n  var innerFormContext = useMemo(function () {\n    return {\n      controlId: id || controlId\n    };\n  }, [controlId, id]);\n  var hasLabel = label != null && label !== false && !children;\n  var input = /*#__PURE__*/React.createElement(FormCheckInput, _extends({}, props, {\n    type: type === 'switch' ? 'checkbox' : type,\n    ref: ref,\n    isValid: isValid,\n    isInvalid: isInvalid,\n    disabled: disabled,\n    as: as\n  }));\n  return /*#__PURE__*/React.createElement(FormContext.Provider, {\n    value: innerFormContext\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: style,\n    className: classNames(className, label && bsPrefix, inline && bsPrefix + \"-inline\", type === 'switch' && bsSwitchPrefix)\n  }, children || /*#__PURE__*/React.createElement(React.Fragment, null, input, hasLabel && /*#__PURE__*/React.createElement(FormCheckLabel, {\n    title: title\n  }, label), (isValid || isInvalid) && /*#__PURE__*/React.createElement(Feedback, {\n    type: isValid ? 'valid' : 'invalid',\n    tooltip: feedbackTooltip\n  }, feedback))));\n});\nFormCheck.displayName = 'FormCheck';\nFormCheck.Input = FormCheckInput;\nFormCheck.Label = FormCheckLabel;\nexport default FormCheck;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport warning from 'warning';\nimport Feedback from './Feedback';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar FormControl = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      type = _ref.type,\n      size = _ref.size,\n      htmlSize = _ref.htmlSize,\n      id = _ref.id,\n      className = _ref.className,\n      _ref$isValid = _ref.isValid,\n      isValid = _ref$isValid === void 0 ? false : _ref$isValid,\n      _ref$isInvalid = _ref.isInvalid,\n      isInvalid = _ref$isInvalid === void 0 ? false : _ref$isInvalid,\n      plaintext = _ref.plaintext,\n      readOnly = _ref.readOnly,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'input' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"type\", \"size\", \"htmlSize\", \"id\", \"className\", \"isValid\", \"isInvalid\", \"plaintext\", \"readOnly\", \"as\"]);\n\n  var _useContext = useContext(FormContext),\n      controlId = _useContext.controlId;\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-control');\n  var classes;\n\n  if (plaintext) {\n    var _classes;\n\n    classes = (_classes = {}, _classes[bsPrefix + \"-plaintext\"] = true, _classes);\n  } else {\n    var _classes2;\n\n    classes = (_classes2 = {}, _classes2[bsPrefix] = true, _classes2[bsPrefix + \"-\" + size] = size, _classes2);\n  }\n\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !id, '`controlId` is ignored on `<FormControl>` when `id` is specified.') : void 0;\n  return /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n    type: type,\n    size: htmlSize,\n    ref: ref,\n    readOnly: readOnly,\n    id: id || controlId,\n    className: classNames(className, classes, isValid && \"is-valid\", isInvalid && \"is-invalid\", type === 'color' && bsPrefix + \"-color\")\n  }));\n});\nFormControl.displayName = 'FormControl';\nexport default Object.assign(FormControl, {\n  Feedback: Feedback\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { useMemo } from 'react';\nimport FormContext from './FormContext';\nvar FormGroup = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n      controlId = _ref.controlId,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"children\", \"controlId\", \"as\"]);\n\n  var context = useMemo(function () {\n    return {\n      controlId: controlId\n    };\n  }, [controlId]);\n  return /*#__PURE__*/React.createElement(FormContext.Provider, {\n    value: context\n  }, /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n    ref: ref\n  }), children));\n});\nFormGroup.displayName = 'FormGroup';\nexport default FormGroup;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport warning from 'warning';\nimport Col from './Col';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  column: false,\n  srOnly: false\n};\nvar FormLabel = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'label' : _ref$as,\n      bsPrefix = _ref.bsPrefix,\n      column = _ref.column,\n      srOnly = _ref.srOnly,\n      className = _ref.className,\n      htmlFor = _ref.htmlFor,\n      props = _objectWithoutPropertiesLoose(_ref, [\"as\", \"bsPrefix\", \"column\", \"srOnly\", \"className\", \"htmlFor\"]);\n\n  var _useContext = useContext(FormContext),\n      controlId = _useContext.controlId;\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-label');\n  var columnClass = 'col-form-label';\n  if (typeof column === 'string') columnClass = columnClass + \" \" + columnClass + \"-\" + column;\n  var classes = classNames(className, bsPrefix, srOnly && 'sr-only', column && columnClass);\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !htmlFor, '`controlId` is ignored on `<FormLabel>` when `htmlFor` is specified.') : void 0;\n  htmlFor = htmlFor || controlId;\n  if (column) return /*#__PURE__*/React.createElement(Col, _extends({\n    as: \"label\",\n    className: classes,\n    htmlFor: htmlFor\n  }, props));\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/label-has-for, jsx-a11y/label-has-associated-control\n    React.createElement(Component, _extends({\n      ref: ref,\n      className: classes,\n      htmlFor: htmlFor\n    }, props))\n  );\n});\nFormLabel.displayName = 'FormLabel';\nFormLabel.defaultProps = defaultProps;\nexport default FormLabel;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar FormRange = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-range');\n  return /*#__PURE__*/React.createElement(\"input\", _extends({}, props, {\n    type: \"range\",\n    ref: ref,\n    className: classNames(className, bsPrefix)\n  }));\n});\nFormRange.displayName = 'FormRange';\nexport default FormRange;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar FormSelect = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      size = _ref.size,\n      htmlSize = _ref.htmlSize,\n      className = _ref.className,\n      _ref$isValid = _ref.isValid,\n      isValid = _ref$isValid === void 0 ? false : _ref$isValid,\n      _ref$isInvalid = _ref.isInvalid,\n      isInvalid = _ref$isInvalid === void 0 ? false : _ref$isInvalid,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"size\", \"htmlSize\", \"className\", \"isValid\", \"isInvalid\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-select');\n  return /*#__PURE__*/React.createElement(\"select\", _extends({}, props, {\n    size: htmlSize,\n    ref: ref,\n    className: classNames(className, bsPrefix, size && bsPrefix + \"-\" + size, isValid && \"is-valid\", isInvalid && \"is-invalid\")\n  }));\n});\nFormSelect.displayName = 'FormSelect';\nexport default FormSelect;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar FormText = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\nfunction (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'small' : _ref$as,\n      muted = _ref.muted,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"as\", \"muted\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-text');\n  return /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n    ref: ref,\n    className: classNames(className, bsPrefix, muted && 'text-muted')\n  }));\n});\nFormText.displayName = 'FormText';\nexport default FormText;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport FormCheck from './FormCheck';\nvar Switch = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(FormCheck, _extends({}, props, {\n    ref: ref,\n    type: \"switch\"\n  }));\n});\nSwitch.displayName = 'Switch';\nSwitch.Input = FormCheck.Input;\nSwitch.Label = FormCheck.Label;\nexport default Switch;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport FormCheck from './FormCheck';\nimport FormControl from './FormControl';\nimport FormGroup from './FormGroup';\nimport FormLabel from './FormLabel';\nimport FormRange from './FormRange';\nimport FormSelect from './FormSelect';\nimport FormText from './FormText';\nimport Switch from './Switch';\nvar FormImpl = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var className = _ref.className,\n      validated = _ref.validated,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'form' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"className\", \"validated\", \"as\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n    ref: ref,\n    className: classNames(className, validated && 'was-validated')\n  }));\n});\nFormImpl.displayName = 'Form';\nFormImpl.Group = FormGroup;\nFormImpl.Control = FormControl;\nFormImpl.Check = FormCheck;\nFormImpl.Switch = Switch;\nFormImpl.Label = FormLabel;\nFormImpl.Text = FormText;\nFormImpl.Range = FormRange;\nFormImpl.Select = FormSelect;\nexport default FormImpl;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar FormCheckInput = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var id = _ref.id,\n      bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      _ref$type = _ref.type,\n      type = _ref$type === void 0 ? 'checkbox' : _ref$type,\n      _ref$isValid = _ref.isValid,\n      isValid = _ref$isValid === void 0 ? false : _ref$isValid,\n      _ref$isInvalid = _ref.isInvalid,\n      isInvalid = _ref$isInvalid === void 0 ? false : _ref$isInvalid,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'input' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"id\", \"bsPrefix\", \"className\", \"type\", \"isValid\", \"isInvalid\", \"as\"]);\n\n  var _useContext = useContext(FormContext),\n      controlId = _useContext.controlId;\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check-input');\n  return /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n    ref: ref,\n    type: type,\n    id: id || controlId,\n    className: classNames(className, bsPrefix, isValid && 'is-valid', isInvalid && 'is-invalid')\n  }));\n});\nFormCheckInput.displayName = 'FormCheckInput';\nexport default FormCheckInput;","import React from 'react'; // TODO\n\nvar FormContext = /*#__PURE__*/React.createContext({\n  controlId: undefined\n});\nexport default FormContext;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormCheckInput from './FormCheckInput';\nvar InputGroupText = createWithBsPrefix('input-group-text', {\n  Component: 'span'\n});\n\nvar InputGroupCheckbox = function InputGroupCheckbox(props) {\n  return /*#__PURE__*/React.createElement(InputGroupText, null, /*#__PURE__*/React.createElement(FormCheckInput, _extends({\n    type: \"checkbox\"\n  }, props)));\n};\n\nvar InputGroupRadio = function InputGroupRadio(props) {\n  return /*#__PURE__*/React.createElement(InputGroupText, null, /*#__PURE__*/React.createElement(FormCheckInput, _extends({\n    type: \"radio\"\n  }, props)));\n};\n\n/**\n *\n * @property {InputGroupText} Text\n * @property {InputGroupRadio} Radio\n * @property {InputGroupCheckbox} Checkbox\n */\nvar InputGroup = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      size = _ref.size,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"size\", \"className\", \"as\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'input-group');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, bsPrefix, size && bsPrefix + \"-\" + size)\n  }));\n});\nInputGroup.displayName = 'InputGroup';\n\nvar InputGroupWithExtras = _extends({}, InputGroup, {\n  Text: InputGroupText,\n  Radio: InputGroupRadio,\n  Checkbox: InputGroupCheckbox\n});\n\nexport default InputGroupWithExtras;","import camelCase from \"camelcase\"\nimport type { IGatsbyImageData } from \"./index\"\n\nconst DEFAULT_PIXEL_DENSITIES = [0.25, 0.5, 1, 2]\nexport const DEFAULT_BREAKPOINTS = [750, 1080, 1366, 1920]\nexport const EVERY_BREAKPOINT = [\n  320, 654, 768, 1024, 1366, 1600, 1920, 2048, 2560, 3440, 3840, 4096,\n]\nconst DEFAULT_FLUID_WIDTH = 800\nconst DEFAULT_FIXED_WIDTH = 800\nconst DEFAULT_ASPECT_RATIO = 4 / 3\n\nexport type Fit = \"cover\" | \"fill\" | \"inside\" | \"outside\" | \"contain\"\n\nexport type Layout = \"fixed\" | \"fullWidth\" | \"constrained\"\nexport type ImageFormat = \"jpg\" | \"png\" | \"webp\" | \"avif\" | \"auto\" | \"\"\n\n/**\n * The minimal required reporter, as we don't want to import it from gatsby-cli\n */\nexport interface IReporter {\n  warn(message: string): void\n}\n\nexport interface ISharpGatsbyImageArgs {\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  placeholder?: \"tracedSVG\" | \"dominantColor\" | \"blurred\" | \"none\"\n  tracedSVGOptions?: Record<string, unknown>\n  width?: number\n  height?: number\n  aspectRatio?: number\n  sizes?: string\n  quality?: number\n  transformOptions?: {\n    fit?: Fit\n    cropFocus?: number | string\n    duotone?: {\n      highlight: string\n      shadow: string\n      opacity?: number\n    }\n    grayscale?: boolean\n    rotate?: number\n    trim?: number\n  }\n  jpgOptions?: Record<string, unknown>\n  pngOptions?: Record<string, unknown>\n  webpOptions?: Record<string, unknown>\n  avifOptions?: Record<string, unknown>\n  blurredOptions?: { width?: number; toFormat?: ImageFormat }\n  breakpoints?: Array<number>\n  outputPixelDensities?: Array<number>\n  backgroundColor?: string\n}\n\nexport interface IImageSizeArgs {\n  width?: number\n  height?: number\n  layout?: Layout\n  filename: string\n  outputPixelDensities?: Array<number>\n  breakpoints?: Array<number>\n  fit?: Fit\n  reporter?: IReporter\n  sourceMetadata: { width: number; height: number }\n}\n\nexport interface IImageSizes {\n  sizes: Array<number>\n  presentationWidth: number\n  presentationHeight: number\n  aspectRatio: number\n  unscaledWidth: number\n}\n\nexport interface IImage {\n  src: string\n  width: number\n  height: number\n  format: ImageFormat\n}\n\nexport interface IGatsbyImageHelperArgs {\n  pluginName: string\n  generateImageSource: (\n    filename: string,\n    width: number,\n    height: number,\n    format: ImageFormat,\n    fit?: Fit,\n    options?: Record<string, unknown>\n  ) => IImage\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  filename: string\n  placeholderURL?: string\n  width?: number\n  height?: number\n  sizes?: string\n  reporter?: IReporter\n  sourceMetadata?: { width: number; height: number; format: ImageFormat }\n  fit?: Fit\n  options?: Record<string, unknown>\n  breakpoints?: Array<number>\n  backgroundColor?: string\n  aspectRatio?: number\n}\n\nconst warn = (message: string): void => console.warn(message)\n\nconst sortNumeric = (a: number, b: number): number => a - b\n\nexport const getSizes = (width: number, layout: Layout): string | undefined => {\n  switch (layout) {\n    // If screen is wider than the max size, image width is the max size,\n    // otherwise it's the width of the screen\n    case `constrained`:\n      return `(min-width: ${width}px) ${width}px, 100vw`\n\n    // Image is always the same width, whatever the size of the screen\n    case `fixed`:\n      return `${width}px`\n\n    // Image is always the width of the screen\n    case `fullWidth`:\n      return `100vw`\n\n    default:\n      return undefined\n  }\n}\n\nexport const getSrcSet = (images: Array<IImage>): string =>\n  images.map(image => `${image.src} ${image.width}w`).join(`,\\n`)\n\nexport function formatFromFilename(filename: string): ImageFormat | undefined {\n  const dot = filename.lastIndexOf(`.`)\n  if (dot !== -1) {\n    const ext = filename.slice(dot + 1)\n    if (ext === `jpeg`) {\n      return `jpg`\n    }\n    if (ext.length === 3 || ext.length === 4) {\n      return ext as ImageFormat\n    }\n  }\n  return undefined\n}\n\nexport function setDefaultDimensions(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageHelperArgs {\n  let {\n    layout = `constrained`,\n    width,\n    height,\n    sourceMetadata,\n    breakpoints,\n    aspectRatio,\n    formats = [`auto`, `webp`],\n  } = args\n  formats = formats.map(format => format.toLowerCase() as ImageFormat)\n  layout = camelCase(layout) as Layout\n\n  if (width && height) {\n    return { ...args, formats, layout, aspectRatio: width / height }\n  }\n  if (sourceMetadata.width && sourceMetadata.height && !aspectRatio) {\n    aspectRatio = sourceMetadata.width / sourceMetadata.height\n  }\n\n  if (layout === `fullWidth`) {\n    width = width || sourceMetadata.width || breakpoints[breakpoints.length - 1]\n    height = height || Math.round(width / (aspectRatio || DEFAULT_ASPECT_RATIO))\n  } else {\n    if (!width) {\n      if (height && aspectRatio) {\n        width = height * aspectRatio\n      } else if (sourceMetadata.width) {\n        width = sourceMetadata.width\n      } else if (height) {\n        width = Math.round(height / DEFAULT_ASPECT_RATIO)\n      } else {\n        width = DEFAULT_FIXED_WIDTH\n      }\n    }\n\n    if (aspectRatio && !height) {\n      height = Math.round(width / aspectRatio)\n    } else if (!aspectRatio) {\n      aspectRatio = width / height\n    }\n  }\n  return { ...args, width, height, aspectRatio, layout, formats }\n}\n\n/**\n * Use this for getting an image for the blurred placeholder. This ensures the\n * aspect ratio and crop match the main image\n */\nexport function getLowResolutionImageURL(\n  args: IGatsbyImageHelperArgs,\n  width = 20\n): string {\n  args = setDefaultDimensions(args)\n  const { generateImageSource, filename, aspectRatio } = args\n  return generateImageSource(\n    filename,\n    width,\n    Math.round(width / aspectRatio),\n    args.sourceMetadata.format || `jpg`,\n    args.fit,\n    args.options\n  )?.src\n}\n\nexport function generateImageData(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageData {\n  args = setDefaultDimensions(args)\n\n  let {\n    pluginName,\n    sourceMetadata,\n    generateImageSource,\n    layout,\n    fit,\n    options,\n    width,\n    height,\n    filename,\n    reporter = { warn },\n    backgroundColor,\n    placeholderURL,\n  } = args\n\n  if (!pluginName) {\n    reporter.warn(\n      `[gatsby-plugin-image] \"generateImageData\" was not passed a plugin name`\n    )\n  }\n\n  if (typeof generateImageSource !== `function`) {\n    throw new Error(`generateImageSource must be a function`)\n  }\n\n  if (!sourceMetadata || (!sourceMetadata.width && !sourceMetadata.height)) {\n    // No metadata means we let the CDN handle max size etc, aspect ratio etc\n    sourceMetadata = {\n      width,\n      height,\n      format: sourceMetadata?.format || formatFromFilename(filename) || `auto`,\n    }\n  } else if (!sourceMetadata.format) {\n    sourceMetadata.format = formatFromFilename(filename)\n  }\n\n  const formats = new Set<ImageFormat>(args.formats)\n\n  if (formats.size === 0 || formats.has(`auto`) || formats.has(``)) {\n    formats.delete(`auto`)\n    formats.delete(``)\n    formats.add(sourceMetadata.format)\n  }\n\n  if (formats.has(`jpg`) && formats.has(`png`)) {\n    reporter.warn(\n      `[${pluginName}] Specifying both 'jpg' and 'png' formats is not supported. Using 'auto' instead`\n    )\n    if (sourceMetadata.format === `jpg`) {\n      formats.delete(`png`)\n    } else {\n      formats.delete(`jpg`)\n    }\n  }\n\n  const imageSizes = calculateImageSizes({ ...args, sourceMetadata })\n\n  const result: IGatsbyImageData[\"images\"] = {\n    sources: [],\n  }\n\n  let sizes = args.sizes\n  if (!sizes) {\n    sizes = getSizes(imageSizes.presentationWidth, layout)\n  }\n\n  formats.forEach(format => {\n    const images = imageSizes.sizes\n      .map(size => {\n        const imageSrc = generateImageSource(\n          filename,\n          size,\n          Math.round(size / imageSizes.aspectRatio),\n          format,\n          fit,\n          options\n        )\n        if (\n          !imageSrc?.width ||\n          !imageSrc.height ||\n          !imageSrc.src ||\n          !imageSrc.format\n        ) {\n          reporter.warn(\n            `[${pluginName}] The resolver for image ${filename} returned an invalid value.`\n          )\n          return undefined\n        }\n        return imageSrc\n      })\n      .filter(Boolean)\n\n    if (format === `jpg` || format === `png` || format === `auto`) {\n      const unscaled =\n        images.find(img => img.width === imageSizes.unscaledWidth) || images[0]\n\n      if (unscaled) {\n        result.fallback = {\n          src: unscaled.src,\n          srcSet: getSrcSet(images),\n          sizes,\n        }\n      }\n    } else {\n      result.sources?.push({\n        srcSet: getSrcSet(images),\n        sizes,\n        type: `image/${format}`,\n      })\n    }\n  })\n\n  const imageProps: Partial<IGatsbyImageData> = {\n    images: result,\n    layout,\n    backgroundColor,\n  }\n\n  if (placeholderURL) {\n    imageProps.placeholder = { fallback: placeholderURL }\n  }\n\n  switch (layout) {\n    case `fixed`:\n      imageProps.width = imageSizes.presentationWidth\n      imageProps.height = imageSizes.presentationHeight\n      break\n\n    case `fullWidth`:\n      imageProps.width = 1\n      imageProps.height = 1 / imageSizes.aspectRatio\n      break\n\n    case `constrained`:\n      imageProps.width = args.width || imageSizes.presentationWidth || 1\n      imageProps.height = (imageProps.width || 1) / imageSizes.aspectRatio\n  }\n\n  return imageProps as IGatsbyImageData\n}\n\nconst dedupeAndSortDensities = (values: Array<number>): Array<number> =>\n  Array.from(new Set([1, ...values])).sort(sortNumeric)\n\nexport function calculateImageSizes(args: IImageSizeArgs): IImageSizes {\n  const {\n    width,\n    height,\n    filename,\n    layout = `constrained`,\n    sourceMetadata: imgDimensions,\n    reporter = { warn },\n    breakpoints = DEFAULT_BREAKPOINTS,\n  } = args\n\n  // check that all dimensions provided are positive\n  const userDimensions = { width, height }\n  const erroneousUserDimensions = Object.entries(userDimensions).filter(\n    ([_, size]) => typeof size === `number` && size < 1\n  )\n  if (erroneousUserDimensions.length) {\n    throw new Error(\n      `Specified dimensions for images must be positive numbers (> 0). Problem dimensions you have are ${erroneousUserDimensions\n        .map(dim => dim.join(`: `))\n        .join(`, `)}`\n    )\n  }\n\n  if (layout === `fixed`) {\n    return fixedImageSizes(args)\n  } else if (layout === `constrained`) {\n    return responsiveImageSizes(args)\n  } else if (layout === `fullWidth`) {\n    return responsiveImageSizes({ breakpoints, ...args })\n  } else {\n    reporter.warn(\n      `No valid layout was provided for the image at ${filename}. Valid image layouts are fixed, fullWidth, and constrained. Found ${layout}`\n    )\n    return {\n      sizes: [imgDimensions.width],\n      presentationWidth: imgDimensions.width,\n      presentationHeight: imgDimensions.height,\n      aspectRatio: imgDimensions.width / imgDimensions.height,\n      unscaledWidth: imgDimensions.width,\n    }\n  }\n}\nexport function fixedImageSizes({\n  filename,\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  reporter = { warn },\n}: IImageSizeArgs): IImageSizes {\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  if (!width) {\n    if (!height) {\n      width = DEFAULT_FIXED_WIDTH\n    } else {\n      width = Math.round(height * aspectRatio)\n    }\n  } else if (!height) {\n    height = Math.round(width / aspectRatio)\n  }\n\n  const originalWidth = width // will use this for presentationWidth, don't want to lose it\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n\n  // If the image is smaller than requested, warn the user that it's being processed as such\n  // print out this message with the necessary information before we overwrite it for sizing\n  if (isTopSizeOverriden) {\n    const fixedDimension = imgDimensions.width < width ? `width` : `height`\n    reporter.warn(`\nThe requested ${fixedDimension} \"${\n      fixedDimension === `width` ? width : height\n    }px\" for the image ${filename} was larger than the actual image ${fixedDimension} of ${\n      imgDimensions[fixedDimension]\n    }px. If possible, replace the current image with a larger one.`)\n\n    if (fixedDimension === `width`) {\n      width = imgDimensions.width\n      height = Math.round(width / aspectRatio)\n    } else {\n      height = imgDimensions.height\n      width = height * aspectRatio\n    }\n  }\n\n  const sizes = densities\n    .filter(size => size >= 1) // remove smaller densities because fixed images don't need them\n    .map(density => Math.round(density * (width as number)))\n    .filter(size => size <= imgDimensions.width)\n\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function responsiveImageSizes({\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  breakpoints,\n  layout,\n}: IImageSizeArgs): IImageSizes {\n  let sizes\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  // Case 1: width of height were passed in, make sure it isn't larger than the actual image\n  width = width && Math.min(width, imgDimensions.width)\n  height = height && Math.min(height, imgDimensions.height)\n\n  // Case 2: neither width or height were passed in, use default size\n  if (!width && !height) {\n    width = Math.min(DEFAULT_FLUID_WIDTH, imgDimensions.width)\n    height = width / aspectRatio\n  }\n\n  // if it still hasn't been found, calculate width from the derived height.\n  // TS isn't smart enough to realise the type for height has been narrowed here\n  if (!width) {\n    width = (height as number) * aspectRatio\n  }\n\n  const originalWidth = width\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n  if (isTopSizeOverriden) {\n    width = imgDimensions.width\n    height = imgDimensions.height\n  }\n\n  width = Math.round(width)\n\n  if (breakpoints?.length > 0) {\n    sizes = breakpoints.filter(size => size <= imgDimensions.width)\n\n    // If a larger breakpoint has been filtered-out, add the actual image width instead\n    if (\n      sizes.length < breakpoints.length &&\n      !sizes.includes(imgDimensions.width)\n    ) {\n      sizes.push(imgDimensions.width)\n    }\n  } else {\n    sizes = densities.map(density => Math.round(density * (width as number)))\n    sizes = sizes.filter(size => size <= imgDimensions.width)\n  }\n\n  // ensure that the size passed in is included in the final output\n  if (layout === `constrained` && !sizes.includes(width)) {\n    sizes.push(width)\n  }\n  sizes = sizes.sort(sortNumeric)\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function getDimensionsAndAspectRatio(\n  dimensions,\n  options\n): { width: number; height: number; aspectRatio: number } {\n  // Calculate the eventual width/height of the image.\n  const imageAspectRatio = dimensions.width / dimensions.height\n\n  let width = options.width\n  let height = options.height\n\n  switch (options.fit) {\n    case `fill`: {\n      width = options.width ? options.width : dimensions.width\n      height = options.height ? options.height : dimensions.height\n      break\n    }\n    case `inside`: {\n      const widthOption = options.width\n        ? options.width\n        : Number.MAX_SAFE_INTEGER\n      const heightOption = options.height\n        ? options.height\n        : Number.MAX_SAFE_INTEGER\n\n      width = Math.min(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.min(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n    case `outside`: {\n      const widthOption = options.width ? options.width : 0\n      const heightOption = options.height ? options.height : 0\n\n      width = Math.max(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.max(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n\n    default: {\n      if (options.width && !options.height) {\n        width = options.width\n        height = Math.round(options.width / imageAspectRatio)\n      }\n\n      if (options.height && !options.width) {\n        width = Math.round(options.height * imageAspectRatio)\n        height = options.height\n      }\n    }\n  }\n\n  return {\n    width,\n    height,\n    aspectRatio: width / height,\n  }\n}\n","/* global GATSBY___IMAGE */\nimport { generateImageData, EVERY_BREAKPOINT } from \"../image-utils\"\nimport type { CSSProperties, HTMLAttributes, ImgHTMLAttributes } from \"react\"\nimport type { Node } from \"gatsby\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { IGatsbyImageData } from \"./gatsby-image.browser\"\nimport type {\n  IGatsbyImageHelperArgs,\n  Layout,\n  IImage,\n  ImageFormat,\n} from \"../image-utils\"\n\n// Native lazy-loading support: https://addyosmani.com/blog/lazy-loading/\nexport const hasNativeLazyLoadSupport = (): boolean =>\n  typeof HTMLImageElement !== `undefined` &&\n  `loading` in HTMLImageElement.prototype\n\nexport function gatsbyImageIsInstalled(): boolean {\n  return typeof GATSBY___IMAGE !== `undefined` && GATSBY___IMAGE\n}\n\nexport type IGatsbyImageDataParent<T = never> = T & {\n  gatsbyImageData: IGatsbyImageData\n}\nexport type IGatsbyImageParent<T = never> = T & {\n  gatsbyImage: IGatsbyImageData\n}\nexport type FileNode = Partial<Node> & {\n  childImageSharp?: IGatsbyImageDataParent<Partial<Node>>\n}\n\nconst isGatsbyImageData = (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageData | any\n): node is IGatsbyImageData =>\n  // 🦆 check for a deep prop to be sure this is a valid gatsbyImageData object\n  Boolean(node?.images?.fallback?.src)\n\nconst isGatsbyImageDataParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageDataParent<T> | any\n): node is IGatsbyImageDataParent<T> => Boolean(node?.gatsbyImageData)\n\nconst isGatsbyImageParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageParent<T> | any\n): node is IGatsbyImageParent<T> => Boolean(node?.gatsbyImage)\n\nexport type ImageDataLike =\n  | FileNode\n  | IGatsbyImageDataParent\n  | IGatsbyImageParent\n  | IGatsbyImageData\n\nexport const getImage = (\n  node: ImageDataLike | null\n): IGatsbyImageData | undefined => {\n  // This checks both for gatsbyImageData and gatsbyImage\n  if (isGatsbyImageData(node)) {\n    return node\n  }\n  // gatsbyImageData GraphQL field\n  if (isGatsbyImageDataParent(node)) {\n    return node.gatsbyImageData\n  }\n  // gatsbyImage GraphQL field for Gatsby's Image CDN service\n  if (isGatsbyImageParent(node)) {\n    return node.gatsbyImage\n  }\n  return node?.childImageSharp?.gatsbyImageData\n}\n\nexport const getSrc = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.src\n\nexport const getSrcSet = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.srcSet\n\nexport function getWrapperProps(\n  width: number,\n  height: number,\n  layout: Layout\n): Pick<HTMLAttributes<HTMLElement>, \"className\" | \"style\"> & {\n  \"data-gatsby-image-wrapper\": string\n} {\n  const wrapperStyle: CSSProperties = {}\n\n  let className = `gatsby-image-wrapper`\n\n  // If the plugin isn't installed we need to apply the styles inline\n  if (!gatsbyImageIsInstalled()) {\n    wrapperStyle.position = `relative`\n    wrapperStyle.overflow = `hidden`\n  }\n\n  if (layout === `fixed`) {\n    wrapperStyle.width = width\n    wrapperStyle.height = height\n  } else if (layout === `constrained`) {\n    if (!gatsbyImageIsInstalled()) {\n      wrapperStyle.display = `inline-block`\n      wrapperStyle.verticalAlign = `top`\n    }\n    className = `gatsby-image-wrapper gatsby-image-wrapper-constrained`\n  }\n\n  return {\n    className,\n    \"data-gatsby-image-wrapper\": ``,\n    style: wrapperStyle,\n  }\n}\n\nexport interface IUrlBuilderArgs<OptionsType> {\n  width: number\n  height: number\n  baseUrl: string\n  format: ImageFormat\n  options: OptionsType\n}\nexport interface IGetImageDataArgs<OptionsType = Record<string, unknown>> {\n  baseUrl: string\n  /**\n   * For constrained and fixed images, the size of the image element\n   */\n  width?: number\n  height?: number\n  /**\n   * If available, pass the source image width and height\n   */\n  sourceWidth?: number\n  sourceHeight?: number\n  /**\n   * If only one dimension is passed, then this will be used to calculate the other.\n   */\n  aspectRatio?: number\n  layout?: Layout\n  /**\n   * Returns a URL based on the passed arguments. Should be a pure function\n   */\n  urlBuilder: (args: IUrlBuilderArgs<OptionsType>) => string\n\n  /**\n   * Should be a data URI\n   */\n  placeholderURL?: string\n  backgroundColor?: string\n  /**\n   * Used in error messages etc\n   */\n  pluginName?: string\n\n  /**\n   * If you do not support auto-format, pass an array of image types here\n   */\n  formats?: Array<ImageFormat>\n\n  breakpoints?: Array<number>\n\n  /**\n   * Passed to the urlBuilder function\n   */\n  options?: OptionsType\n}\n\n/**\n * Use this hook to generate gatsby-plugin-image data in the browser.\n */\nexport function getImageData<OptionsType>({\n  baseUrl,\n  urlBuilder,\n  sourceWidth,\n  sourceHeight,\n  pluginName = `getImageData`,\n  formats = [`auto`],\n  breakpoints,\n  options,\n  ...props\n}: IGetImageDataArgs<OptionsType>): IGatsbyImageData {\n  if (\n    !breakpoints?.length &&\n    (props.layout === `fullWidth` || (props.layout as string) === `FULL_WIDTH`)\n  ) {\n    breakpoints = EVERY_BREAKPOINT\n  }\n  const generateImageSource = (\n    baseUrl: string,\n    width: number,\n    height?: number,\n    format?: ImageFormat\n  ): IImage => {\n    return {\n      width,\n      height,\n      format,\n      src: urlBuilder({ baseUrl, width, height, options, format }),\n    }\n  }\n\n  const sourceMetadata: IGatsbyImageHelperArgs[\"sourceMetadata\"] = {\n    width: sourceWidth,\n    height: sourceHeight,\n    format: `auto`,\n  }\n\n  const args: IGatsbyImageHelperArgs = {\n    ...props,\n    pluginName,\n    generateImageSource,\n    filename: baseUrl,\n    formats,\n    breakpoints,\n    sourceMetadata,\n  }\n  return generateImageData(args)\n}\n\nexport function getMainProps(\n  isLoading: boolean,\n  isLoaded: boolean,\n  images: IGatsbyImageData[\"images\"],\n  loading?: \"eager\" | \"lazy\",\n  style: CSSProperties = {}\n): Partial<MainImageProps> {\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      transform: `translateZ(0)`,\n      transition: `opacity 250ms linear`,\n      width: `100%`,\n      willChange: `opacity`,\n      ...style,\n    }\n  }\n\n  const result = {\n    ...images,\n    loading,\n    shouldLoad: isLoading,\n    \"data-main-image\": ``,\n    style: {\n      ...style,\n      opacity: isLoaded ? 1 : 0,\n    },\n  }\n\n  return result\n}\n\nexport type PlaceholderImageAttrs = ImgHTMLAttributes<HTMLImageElement> &\n  Pick<PlaceholderProps, \"sources\" | \"fallback\"> & {\n    \"data-placeholder-image\"?: string\n  }\n\nexport function getPlaceholderProps(\n  placeholder: PlaceholderImageAttrs | undefined,\n  isLoaded: boolean,\n  layout: Layout,\n  width?: number,\n  height?: number,\n  backgroundColor?: string,\n  objectFit?: CSSProperties[\"objectFit\"],\n  objectPosition?: CSSProperties[\"objectPosition\"]\n): PlaceholderImageAttrs {\n  const wrapperStyle: CSSProperties = {}\n\n  if (backgroundColor) {\n    wrapperStyle.backgroundColor = backgroundColor\n\n    if (layout === `fixed`) {\n      wrapperStyle.width = width\n      wrapperStyle.height = height\n      wrapperStyle.backgroundColor = backgroundColor\n      wrapperStyle.position = `relative`\n    } else if (layout === `constrained`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    } else if (layout === `fullWidth`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    }\n  }\n\n  if (objectFit) {\n    wrapperStyle.objectFit = objectFit\n  }\n\n  if (objectPosition) {\n    wrapperStyle.objectPosition = objectPosition\n  }\n  const result: PlaceholderImageAttrs = {\n    ...placeholder,\n    \"aria-hidden\": true,\n    \"data-placeholder-image\": ``,\n    style: {\n      opacity: isLoaded ? 0 : 1,\n      transition: `opacity 500ms linear`,\n      ...wrapperStyle,\n    },\n  }\n\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    result.style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      width: `100%`,\n    }\n  }\n\n  return result\n}\n\nexport interface IArtDirectedImage {\n  media: string\n  image: IGatsbyImageData\n}\n\n/**\n * Generate a Gatsby image data object with multiple, art-directed images that display at different\n * resolutions.\n *\n * @param defaultImage The image displayed when no media query matches.\n * It is also used for all other settings applied to the image, such as width, height and layout.\n * You should pass a className to the component with media queries to adjust the size of the container,\n * as this cannot be adjusted automatically.\n * @param artDirected Array of objects which each contains a `media` string which is a media query\n * such as `(min-width: 320px)`, and the image object to use when that query matches.\n */\nexport function withArtDirection(\n  defaultImage: IGatsbyImageData,\n  artDirected: Array<IArtDirectedImage>\n): IGatsbyImageData {\n  const { images, placeholder, ...props } = defaultImage\n  const output: IGatsbyImageData = {\n    ...props,\n    images: {\n      ...images,\n      sources: [],\n    },\n    placeholder: placeholder && {\n      ...placeholder,\n      sources: [],\n    },\n  }\n\n  artDirected.forEach(({ media, image }) => {\n    if (!media) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(\n          \"[gatsby-plugin-image] All art-directed images passed to must have a value set for `media`. Skipping.\"\n        )\n      }\n      return\n    }\n\n    if (\n      image.layout !== defaultImage.layout &&\n      process.env.NODE_ENV === `development`\n    ) {\n      console.warn(\n        `[gatsby-plugin-image] Mismatched image layout: expected \"${defaultImage.layout}\" but received \"${image.layout}\". All art-directed images use the same layout as the default image`\n      )\n    }\n\n    output.images.sources.push(\n      ...image.images.sources.map(source => {\n        return { ...source, media }\n      }),\n      {\n        media,\n        srcSet: image.images.fallback.srcSet,\n      }\n    )\n\n    if (!output.placeholder) {\n      return\n    }\n\n    output.placeholder.sources.push({\n      media,\n      srcSet: image.placeholder.fallback,\n    })\n  })\n  output.images.sources.push(...images.sources)\n  if (placeholder?.sources) {\n    output.placeholder?.sources.push(...placeholder.sources)\n  }\n  return output\n}\n","import React, { Fragment, FunctionComponent, PropsWithChildren } from \"react\"\nimport terserMacro from \"../../macros/terser.macro\"\nimport { Layout } from \"../image-utils\"\n\nexport interface ILayoutWrapperProps {\n  layout: Layout\n  width: number\n  height: number\n}\n\nconst NativeScriptLoading: FunctionComponent = () => (\n  <script\n    type=\"module\"\n    dangerouslySetInnerHTML={{\n      __html: terserMacro`\nconst hasNativeLazyLoadSupport = typeof HTMLImageElement !== \"undefined\" && \"loading\" in HTMLImageElement.prototype;\nif (hasNativeLazyLoadSupport) {\n  const gatsbyImages = document.querySelectorAll('img[data-main-image]');\n  for (let mainImage of gatsbyImages) {\n    if (mainImage.dataset.src) {\n      mainImage.setAttribute('src', mainImage.dataset.src)\n      mainImage.removeAttribute('data-src')\n    }\n    if (mainImage.dataset.srcset) {\n      mainImage.setAttribute('srcset', mainImage.dataset.srcset)\n      mainImage.removeAttribute('data-srcset')\n    }\n\n    const sources = mainImage.parentNode.querySelectorAll('source[data-srcset]');\n    for (let source of sources) {\n      source.setAttribute('srcset', source.dataset.srcset)\n      source.removeAttribute('data-srcset')\n    }\n\n    if (mainImage.complete) {\n      mainImage.style.opacity = 1;\n\n      // also hide the placeholder\n      mainImage.parentNode.parentNode.querySelector('[data-placeholder-image]').style.opacity = 0;\n    }\n  }\n}\n`,\n    }}\n  />\n)\n\nexport function getSizer(\n  layout: Layout,\n  width: number,\n  height: number\n): string {\n  let sizer = ``\n  if (layout === `fullWidth`) {\n    sizer = `<div aria-hidden=\"true\" style=\"padding-top: ${\n      (height / width) * 100\n    }%;\"></div>`\n  }\n\n  if (layout === `constrained`) {\n    sizer = `<div style=\"max-width: ${width}px; display: block;\"><img alt=\"\" role=\"presentation\" aria-hidden=\"true\" src=\"data:image/svg+xml;charset=utf-8,%3Csvg%20height='${height}'%20width='${width}'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E\" style=\"max-width: 100%; display: block; position: static;\"></div>`\n  }\n\n  return sizer\n}\n\nconst Sizer: FunctionComponent<ILayoutWrapperProps> = function Sizer({\n  layout,\n  width,\n  height,\n}) {\n  if (layout === `fullWidth`) {\n    return (\n      <div aria-hidden style={{ paddingTop: `${(height / width) * 100}%` }} />\n    )\n  }\n\n  if (layout === `constrained`) {\n    return (\n      <div style={{ maxWidth: width, display: `block` }}>\n        <img\n          alt=\"\"\n          role=\"presentation\"\n          aria-hidden=\"true\"\n          src={`data:image/svg+xml;charset=utf-8,%3Csvg%20height='${height}'%20width='${width}'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E`}\n          style={{\n            maxWidth: `100%`,\n            display: `block`,\n            position: `static`,\n          }}\n        />\n      </div>\n    )\n  }\n\n  return null\n}\n\nexport const LayoutWrapper: FunctionComponent<\n  PropsWithChildren<ILayoutWrapperProps>\n> = function LayoutWrapper({ children, ...props }) {\n  return (\n    <Fragment>\n      <Sizer {...props} />\n      {children}\n\n      {SERVER ? <NativeScriptLoading /> : null}\n    </Fragment>\n  )\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\n\nexport interface IResponsiveImageProps {\n  sizes?: string\n  srcSet: string\n}\n\nexport type SourceProps = IResponsiveImageProps &\n  (\n    | {\n        media: string\n        type?: string\n      }\n    | {\n        media?: string\n        type: string\n      }\n  )\n\ntype FallbackProps = { src: string } & Partial<IResponsiveImageProps>\n\ntype ImageProps = ImgHTMLAttributes<HTMLImageElement> & {\n  src: string\n  alt: string\n  shouldLoad: boolean\n}\n\nexport type PictureProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: FallbackProps\n  sources?: Array<SourceProps>\n  alt: string\n  shouldLoad?: boolean\n}\n\nconst Image: FunctionComponent<ImageProps> = function Image({\n  src,\n  srcSet,\n  loading,\n  alt = ``,\n  shouldLoad,\n  ...props\n}) {\n  return (\n    <img\n      {...props}\n      decoding=\"async\"\n      loading={loading}\n      src={shouldLoad ? src : undefined}\n      data-src={!shouldLoad ? src : undefined}\n      srcSet={shouldLoad ? srcSet : undefined}\n      data-srcset={!shouldLoad ? srcSet : undefined}\n      alt={alt}\n    />\n  )\n}\n\nexport const Picture: React.FC<PictureProps> = function Picture({\n  fallback,\n  sources = [],\n  shouldLoad = true,\n  ...props\n}) {\n  const sizes = props.sizes || fallback?.sizes\n  const fallbackImage = (\n    <Image {...props} {...fallback} sizes={sizes} shouldLoad={shouldLoad} />\n  )\n\n  if (!sources.length) {\n    return fallbackImage\n  }\n\n  return (\n    <picture>\n      {sources.map(({ media, srcSet, type }) => (\n        <source\n          key={`${media}-${type}-${srcSet}`}\n          type={type}\n          media={media}\n          srcSet={shouldLoad ? srcSet : undefined}\n          data-srcset={!shouldLoad ? srcSet : undefined}\n          sizes={sizes}\n        />\n      ))}\n      {fallbackImage}\n    </picture>\n  )\n}\n\nImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  sizes: PropTypes.string,\n  srcSet: PropTypes.string,\n  shouldLoad: PropTypes.bool,\n}\n\nPicture.displayName = `Picture`\nPicture.propTypes = {\n  alt: PropTypes.string.isRequired,\n  shouldLoad: PropTypes.bool,\n  fallback: PropTypes.exact({\n    src: PropTypes.string.isRequired,\n    srcSet: PropTypes.string,\n    sizes: PropTypes.string,\n  }),\n  sources: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.exact({\n        media: PropTypes.string.isRequired,\n        type: PropTypes.string,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n      PropTypes.exact({\n        media: PropTypes.string,\n        type: PropTypes.string.isRequired,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n    ])\n  ),\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\nimport { Picture, SourceProps } from \"./picture\"\n\nexport type PlaceholderProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: string\n  sources?: Array<SourceProps>\n}\n\nexport const Placeholder: FunctionComponent<PlaceholderProps> =\n  function Placeholder({ fallback, ...props }) {\n    if (fallback) {\n      return (\n        <Picture\n          {...props}\n          fallback={{\n            src: fallback,\n          }}\n          aria-hidden\n          alt=\"\"\n        />\n      )\n    } else {\n      return <div {...props}></div>\n    }\n  }\n\nPlaceholder.displayName = `Placeholder`\nPlaceholder.propTypes = {\n  fallback: PropTypes.string,\n  sources: Picture.propTypes?.sources,\n  alt: function (props, propName, componentName): Error | null {\n    if (!props[propName]) {\n      return null\n    }\n\n    return new Error(\n      `Invalid prop \\`${propName}\\` supplied to \\`${componentName}\\`. Validation failed.`\n    )\n  },\n}\n","import React from \"react\"\nimport { Picture, PictureProps } from \"./picture\"\n\nexport type MainImageProps = PictureProps\n\nexport const MainImage: React.FC<PictureProps> = function MainImage(props) {\n  return (\n    <>\n      <Picture {...props} />\n      <noscript>\n        <Picture {...props} shouldLoad={true} />\n      </noscript>\n    </>\n  )\n}\n\nMainImage.displayName = `MainImage`\nMainImage.propTypes = Picture.propTypes\n","import React from \"react\"\nimport { getWrapperProps, getMainProps, getPlaceholderProps } from \"./hooks\"\nimport { Placeholder } from \"./placeholder\"\nimport { MainImage, MainImageProps } from \"./main-image\"\nimport { LayoutWrapper } from \"./layout-wrapper\"\nimport PropTypes from \"prop-types\"\nimport type { FunctionComponent, WeakValidationMap } from \"react\"\nimport type { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\n\nconst removeNewLines = (str: string): string => str.replace(/\\n/g, ``)\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> =\n  function GatsbyImage({\n    as = `div`,\n    className,\n    class: preactClass,\n    style,\n    image,\n    loading = `lazy`,\n    imgClassName,\n    imgStyle,\n    backgroundColor,\n    objectFit,\n    objectPosition,\n    ...props\n  }) {\n    if (!image) {\n      console.warn(`[gatsby-plugin-image] Missing image prop`)\n      return null\n    }\n\n    if (preactClass) {\n      className = preactClass\n    }\n\n    imgStyle = {\n      objectFit,\n      objectPosition,\n      backgroundColor,\n      ...imgStyle,\n    }\n\n    const {\n      width,\n      height,\n      layout,\n      images,\n      placeholder,\n      backgroundColor: placeholderBackgroundColor,\n    } = image\n\n    const {\n      style: wStyle,\n      className: wClass,\n      ...wrapperProps\n    } = getWrapperProps(width, height, layout)\n\n    const cleanedImages: IGatsbyImageData[\"images\"] = {\n      fallback: undefined,\n      sources: [],\n    }\n    if (images.fallback) {\n      cleanedImages.fallback = {\n        ...images.fallback,\n        srcSet: images.fallback.srcSet\n          ? removeNewLines(images.fallback.srcSet)\n          : undefined,\n      }\n    }\n\n    if (images.sources) {\n      cleanedImages.sources = images.sources.map(source => {\n        return {\n          ...source,\n          srcSet: removeNewLines(source.srcSet),\n        }\n      })\n    }\n\n    return React.createElement(\n      as,\n      {\n        ...wrapperProps,\n        style: {\n          ...wStyle,\n          ...style,\n          backgroundColor,\n        },\n        className: `${wClass}${className ? ` ${className}` : ``}`,\n      },\n      <LayoutWrapper layout={layout} width={width} height={height}>\n        <Placeholder\n          {...getPlaceholderProps(\n            placeholder,\n            false,\n            layout,\n            width,\n            height,\n            placeholderBackgroundColor,\n            objectFit,\n            objectPosition\n          )}\n        />\n\n        <MainImage\n          data-gatsby-image-ssr=\"\"\n          className={imgClassName}\n          {...(props as Omit<\n            MainImageProps,\n            \"images\" | \"fallback\" | \"onError\" | \"onLoad\"\n          >)}\n          // When eager is set we want to start the isLoading state on true (we want to load the img without react)\n          {...getMainProps(\n            loading === `eager`,\n            false,\n            cleanedImages,\n            loading,\n            imgStyle\n          )}\n        />\n      </LayoutWrapper>\n    )\n  }\n\nexport const altValidator: PropTypes.Validator<string> = (\n  props: GatsbyImageProps,\n  propName,\n  componentName,\n  ...rest\n): Error | undefined => {\n  if (!props.alt && props.alt !== ``) {\n    return new Error(\n      `The \"alt\" prop is required in ${componentName}. If the image is purely presentational then pass an empty string: e.g. alt=\"\". Learn more: https://a11y-style-guide.com/style-guide/section-media.html`\n    )\n  }\n\n  return PropTypes.string(props, propName, componentName, ...rest)\n}\n\nexport const propTypes = {\n  image: PropTypes.object.isRequired,\n  alt: altValidator,\n} as WeakValidationMap<GatsbyImageProps>\n","import {\n  createElement,\n  memo,\n  useMemo,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n} from \"react\"\nimport {\n  getWrapperProps,\n  gatsbyImageIsInstalled,\n  hasNativeLazyLoadSupport,\n} from \"./hooks\"\nimport { getSizer } from \"./layout-wrapper\"\nimport { propTypes } from \"./gatsby-image.server\"\nimport type {\n  FC,\n  ElementType,\n  FunctionComponent,\n  ImgHTMLAttributes,\n  CSSProperties,\n  ReactEventHandler,\n} from \"react\"\nimport type { renderImageToString } from \"./lazy-hydrate\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { Layout } from \"../image-utils\"\n\nconst imageCache = new Set<string>()\nlet renderImageToStringPromise\nlet renderImage: typeof renderImageToString | undefined\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface GatsbyImageProps\n  extends Omit<\n    ImgHTMLAttributes<HTMLImageElement>,\n    \"placeholder\" | \"onLoad\" | \"src\" | \"srcSet\" | \"width\" | \"height\"\n  > {\n  alt: string\n  as?: ElementType\n  className?: string\n  class?: string\n  imgClassName?: string\n  image: IGatsbyImageData\n  imgStyle?: CSSProperties\n  backgroundColor?: string\n  objectFit?: CSSProperties[\"objectFit\"]\n  objectPosition?: CSSProperties[\"objectPosition\"]\n  onLoad?: (props: { wasCached: boolean }) => void\n  onError?: ReactEventHandler<HTMLImageElement>\n  onStartLoad?: (props: { wasCached: boolean }) => void\n}\n\nexport interface IGatsbyImageData {\n  layout: Layout\n  width: number\n  height: number\n  backgroundColor?: string\n  images: Pick<MainImageProps, \"sources\" | \"fallback\">\n  placeholder?: Pick<PlaceholderProps, \"sources\" | \"fallback\">\n}\n\nconst GatsbyImageHydrator: FC<GatsbyImageProps> = function GatsbyImageHydrator({\n  as = `div`,\n  image,\n  style,\n  backgroundColor,\n  className,\n  class: preactClass,\n  onStartLoad,\n  onLoad,\n  onError,\n  ...props\n}) {\n  const { width, height, layout } = image\n  const {\n    style: wStyle,\n    className: wClass,\n    ...wrapperProps\n  } = getWrapperProps(width, height, layout)\n  const root = useRef<HTMLElement>()\n  const cacheKey = useMemo(() => JSON.stringify(image.images), [image.images])\n\n  // Preact uses class instead of className so we need to check for both\n  if (preactClass) {\n    className = preactClass\n  }\n\n  const sizer = getSizer(layout, width, height)\n\n  useEffect(() => {\n    if (!renderImageToStringPromise) {\n      renderImageToStringPromise = import(`./lazy-hydrate`).then(\n        ({ renderImageToString, swapPlaceholderImage }) => {\n          renderImage = renderImageToString\n\n          return {\n            renderImageToString,\n            swapPlaceholderImage,\n          }\n        }\n      )\n    }\n\n    // The plugin image component is a bit special where if it's server-side rendered, we add extra script tags to support lazy-loading without\n    // In this case we stop hydration but fire the correct events.\n    const ssrImage = root.current.querySelector(\n      `[data-gatsby-image-ssr]`\n    ) as HTMLImageElement\n    if (ssrImage && hasNativeLazyLoadSupport()) {\n      if (ssrImage.complete) {\n        // Trigger onStartload and onLoad events\n        onStartLoad?.({\n          wasCached: true,\n        })\n        onLoad?.({\n          wasCached: true,\n        })\n\n        // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n        setTimeout(() => {\n          ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n        }, 0)\n      } else {\n        onStartLoad?.({\n          wasCached: true,\n        })\n\n        ssrImage.addEventListener(`load`, function onLoadListener() {\n          ssrImage.removeEventListener(`load`, onLoadListener)\n\n          onLoad?.({\n            wasCached: true,\n          })\n          // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n          setTimeout(() => {\n            ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n          }, 0)\n        })\n      }\n\n      imageCache.add(cacheKey)\n\n      return\n    }\n\n    if (renderImage && imageCache.has(cacheKey)) {\n      return\n    }\n\n    let animationFrame\n    let cleanupCallback\n    renderImageToStringPromise.then(\n      ({ renderImageToString, swapPlaceholderImage }) => {\n        if (!root.current) {\n          return\n        }\n\n        root.current.innerHTML = renderImageToString({\n          isLoading: true,\n          isLoaded: imageCache.has(cacheKey),\n          image,\n          ...props,\n        })\n\n        if (!imageCache.has(cacheKey)) {\n          animationFrame = requestAnimationFrame(() => {\n            if (root.current) {\n              cleanupCallback = swapPlaceholderImage(\n                root.current,\n                cacheKey,\n                imageCache,\n                style,\n                onStartLoad,\n                onLoad,\n                onError\n              )\n            }\n          })\n        }\n      }\n    )\n\n    // eslint-disable-next-line consistent-return\n    return (): void => {\n      if (animationFrame) {\n        cancelAnimationFrame(animationFrame)\n      }\n      if (cleanupCallback) {\n        cleanupCallback()\n      }\n    }\n  }, [image])\n\n  // useLayoutEffect is ran before React commits to the DOM. This allows us to make sure our HTML is using our cached image version\n  useLayoutEffect(() => {\n    if (imageCache.has(cacheKey) && renderImage) {\n      root.current.innerHTML = renderImage({\n        isLoading: imageCache.has(cacheKey),\n        isLoaded: imageCache.has(cacheKey),\n        image,\n        ...props,\n      })\n\n      // Trigger onStartload and onLoad events\n      onStartLoad?.({\n        wasCached: true,\n      })\n      onLoad?.({\n        wasCached: true,\n      })\n    }\n  }, [image])\n\n  // By keeping all props equal React will keep the component in the DOM\n  return createElement(as, {\n    ...wrapperProps,\n    style: {\n      ...wStyle,\n      ...style,\n      backgroundColor,\n    },\n    className: `${wClass}${className ? ` ${className}` : ``}`,\n    ref: root,\n    dangerouslySetInnerHTML: {\n      __html: sizer,\n    },\n    suppressHydrationWarning: true,\n  })\n}\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> = memo(\n  function GatsbyImage(props) {\n    if (!props.image) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(`[gatsby-plugin-image] Missing image prop`)\n      }\n\n      return null\n    }\n\n    if (!gatsbyImageIsInstalled() && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `[gatsby-plugin-image] You're missing out on some cool performance features. Please add \"gatsby-plugin-image\" to your gatsby-config.js`\n      )\n    }\n\n    return createElement(GatsbyImageHydrator, props)\n  }\n)\n\nGatsbyImage.propTypes = propTypes\nGatsbyImage.displayName = `GatsbyImage`\n","import React, { FunctionComponent, ReactElement } from \"react\"\nimport {\n  altValidator,\n  GatsbyImage as GatsbyImageServer,\n} from \"./gatsby-image.server\"\nimport { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\nimport PropTypes from \"prop-types\"\nimport { ISharpGatsbyImageArgs } from \"../image-utils\"\n\nexport interface IStaticImageProps\n  extends Omit<GatsbyImageProps, \"image\">,\n    Omit<ISharpGatsbyImageArgs, \"backgroundColor\"> {\n  src: string\n  filename?: string\n}\n\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nexport function _getStaticImage(\n  GatsbyImage: FunctionComponent<GatsbyImageProps>\n): React.FC<IStaticImageProps & IPrivateProps> {\n  return function StaticImage({\n    src,\n    __imageData: imageData,\n    __error,\n    // We extract these because they're not meant to be passed-down to GatsbyImage\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    width,\n    height,\n    aspectRatio,\n    tracedSVGOptions,\n    placeholder,\n    formats,\n    quality,\n    transformOptions,\n    jpgOptions,\n    pngOptions,\n    webpOptions,\n    avifOptions,\n    blurredOptions,\n    breakpoints,\n    outputPixelDensities,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    ...props\n  }): ReactElement {\n    if (__error) {\n      console.warn(__error)\n    }\n\n    if (imageData) {\n      return <GatsbyImage image={imageData} {...props} />\n    }\n    console.warn(`Image not loaded`, src)\n    if (!__error && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `Please ensure that \"gatsby-plugin-image\" is included in the plugins array in gatsby-config.js, and that your version of gatsby is at least 2.24.78`\n      )\n    }\n    return null\n  }\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageServer)\n\nconst checkDimensionProps: PropTypes.Validator<number> = (\n  props: IStaticImageProps & IPrivateProps,\n  propName: keyof IStaticImageProps & IPrivateProps,\n  ...rest\n) => {\n  if (\n    props.layout === `fullWidth` &&\n    (propName === `width` || propName === `height`) &&\n    props[propName]\n  ) {\n    return new Error(\n      `\"${propName}\" ${props[propName]} may not be passed when layout is fullWidth.`\n    )\n  }\n  return PropTypes.number(props, propName, ...rest)\n}\n\nconst validLayouts = new Set([`fixed`, `fullWidth`, `constrained`])\n\nexport const propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: altValidator,\n  width: checkDimensionProps,\n  height: checkDimensionProps,\n  sizes: PropTypes.string,\n  layout: (props: IStaticImageProps & IPrivateProps): Error | undefined => {\n    if (props.layout === undefined) {\n      return undefined\n    }\n    if (validLayouts.has(props.layout)) {\n      return undefined\n    }\n\n    return new Error(\n      `Invalid value ${props.layout}\" provided for prop \"layout\". Defaulting to \"constrained\". Valid values are \"fixed\", \"fullWidth\" or \"constrained\".`\n    )\n  },\n}\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import {\n  GatsbyImage as GatsbyImageBrowser,\n  IGatsbyImageData,\n} from \"./gatsby-image.browser\"\nimport React from \"react\"\nimport {\n  _getStaticImage,\n  propTypes,\n  IStaticImageProps,\n} from \"./static-image.server\"\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageBrowser)\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","'use strict';\n\nconst UPPERCASE = /[\\p{Lu}]/u;\nconst LOWERCASE = /[\\p{Ll}]/u;\nconst LEADING_CAPITAL = /^[\\p{Lu}](?![\\p{Lu}])/gu;\nconst IDENTIFIER = /([\\p{Alpha}\\p{N}_]|$)/u;\nconst SEPARATORS = /[_.\\- ]+/;\n\nconst LEADING_SEPARATORS = new RegExp('^' + SEPARATORS.source);\nconst SEPARATORS_AND_IDENTIFIER = new RegExp(SEPARATORS.source + IDENTIFIER.source, 'gu');\nconst NUMBERS_AND_IDENTIFIER = new RegExp('\\\\d+' + IDENTIFIER.source, 'gu');\n\nconst preserveCamelCase = (string, toLowerCase, toUpperCase) => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && UPPERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && LOWERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = toLowerCase(character) === character && toUpperCase(character) !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = toUpperCase(character) === character && toLowerCase(character) !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst preserveConsecutiveUppercase = (input, toLowerCase) => {\n\tLEADING_CAPITAL.lastIndex = 0;\n\n\treturn input.replace(LEADING_CAPITAL, m1 => toLowerCase(m1));\n};\n\nconst postProcess = (input, toUpperCase) => {\n\tSEPARATORS_AND_IDENTIFIER.lastIndex = 0;\n\tNUMBERS_AND_IDENTIFIER.lastIndex = 0;\n\n\treturn input.replace(SEPARATORS_AND_IDENTIFIER, (_, identifier) => toUpperCase(identifier))\n\t\t.replace(NUMBERS_AND_IDENTIFIER, m => toUpperCase(m));\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = {\n\t\tpascalCase: false,\n\t\tpreserveConsecutiveUppercase: false,\n\t\t...options\n\t};\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tconst toLowerCase = options.locale === false ?\n\t\tstring => string.toLowerCase() :\n\t\tstring => string.toLocaleLowerCase(options.locale);\n\tconst toUpperCase = options.locale === false ?\n\t\tstring => string.toUpperCase() :\n\t\tstring => string.toLocaleUpperCase(options.locale);\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? toUpperCase(input) : toLowerCase(input);\n\t}\n\n\tconst hasUpperCase = input !== toLowerCase(input);\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input, toLowerCase, toUpperCase);\n\t}\n\n\tinput = input.replace(LEADING_SEPARATORS, '');\n\n\tif (options.preserveConsecutiveUppercase) {\n\t\tinput = preserveConsecutiveUppercase(input, toLowerCase);\n\t} else {\n\t\tinput = toLowerCase(input);\n\t}\n\n\tif (options.pascalCase) {\n\t\tinput = toUpperCase(input.charAt(0)) + input.slice(1);\n\t}\n\n\treturn postProcess(input, toUpperCase);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","import * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport { StaticImage } from \"gatsby-plugin-image\"\nconst Header = ({ siteTitle }) => (\n    <>\n        <a href=\"/\">\n            <StaticImage src=\"../assets/img/logo.png\" width={128} />\n        </a>\n    </>\n)\n\nexport default Header\n"],"names":["propTypes","type","tooltip","as","Feedback","_ref","ref","_ref$as","Component","className","_ref$type","_ref$tooltip","props","displayName","FormCheckLabel","bsPrefix","htmlFor","controlId","useContext","FormContext","FormCheck","id","bsSwitchPrefix","_ref$inline","inline","_ref$disabled","disabled","_ref$isValid","isValid","_ref$isInvalid","isInvalid","_ref$feedbackTooltip","feedbackTooltip","feedback","style","_ref$title","title","label","children","innerFormContext","useMemo","hasLabel","input","FormCheckInput","Provider","value","Input","Label","FormControl","classes","_classes","_classes2","size","htmlSize","plaintext","readOnly","Object","assign","FormGroup","context","FormLabel","column","srOnly","columnClass","Col","defaultProps","FormRange","FormSelect","FormText","muted","Switch","FormImpl","validated","Group","Control","Check","Text","Range","Select","undefined","InputGroupText","InputGroup","InputGroupWithExtras","Radio","Checkbox","W","hasNativeLazyLoadSupport","HTMLImageElement","prototype","z","e","t","a","i","s","width","height","P","h","loading","shouldLoad","opacity","A","r","n","o","l","backgroundColor","position","top","left","bottom","right","objectFit","objectPosition","d","transition","H","F","_ref5","layout","paddingTop","maxWidth","display","alt","role","src","G","u","V","B","U","srcSet","decoding","Y","fallback","sources","sizes","length","map","_ref6","media","key","X","isRequired","J","Z","Error","K","Q","ee","te","replace","ae","_len","arguments","Array","_key","c","apply","concat","ie","image","se","re","ne","Set","oe","le","de","class","g","onStartLoad","p","onLoad","m","onError","f","w","y","b","v","E","k","S","M","N","$","JSON","stringify","images","I","then","_ref7","renderImageToString","swapPlaceholderImage","current","querySelector","complete","wasCached","setTimeout","removeAttribute","addEventListener","removeEventListener","add","has","_ref8","innerHTML","isLoading","isLoaded","requestAnimationFrame","cancelAnimationFrame","dangerouslySetInnerHTML","__html","suppressHydrationWarning","ce","he","ue","__imageData","__error","console","warn","ge","imgClassName","imgStyle","placeholder","pe","_len2","_key2","me","fe","we","UPPERCASE","LOWERCASE","LEADING_CAPITAL","IDENTIFIER","SEPARATORS","LEADING_SEPARATORS","RegExp","source","SEPARATORS_AND_IDENTIFIER","NUMBERS_AND_IDENTIFIER","camelCase","options","isArray","TypeError","pascalCase","preserveConsecutiveUppercase","x","trim","filter","join","toLowerCase","locale","string","toLocaleLowerCase","toUpperCase","toLocaleUpperCase","preserveCamelCase","isLastCharLower","isLastCharUpper","isLastLastCharUpper","character","test","slice","lastIndex","m1","charAt","postProcess","_","identifier","module","exports","siteTitle","React","href","StaticImage","require"],"sourceRoot":""}