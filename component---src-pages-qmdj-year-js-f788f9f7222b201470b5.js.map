{"version":3,"sources":["webpack:///./src/pages/qmdj/year.js"],"names":["handleSearch","searchFormation","palace","result","chart","now","Date","searchEndDate","addDays","diff","differenceInCalendarDays","Array","keys","map","d","compareDate","key","format","DEAULT_DATE_FORMAT","ChartList","reduce","a","e","formationIndex","findIndex","o","structure","hour","includes","DIRECTION","i","concat","f","ee","BRANCH","indexOf","substr","date","toString","padStart","n","search","Ju","filter","v","find","g","display","square","parseISO","DATETIME_FORMAT","heaven","star","door","god","earth","getChart","dateObject","updateChart","getHours","chartDate","ch","Math","floor","Home","heading","onDateChanged"],"mappings":"oPAoCMA,EAAe,SAACC,EAAiBC,GACrC,IAEMC,EA/BO,SAACC,EAAOF,GACrB,IAAMG,EAAM,IAAIC,KACVC,EAAgBC,YAAQH,EAAK,GAC7BI,EAAOC,YAAyBH,EAAeF,GACrD,OAAO,YAAIM,MAAMF,GAAMG,QAAQC,KAAI,SAAAC,GAC/B,IAAMC,EAAcP,YAAQH,EAAKS,GAC3BE,EAAMC,YAAOF,EAAaG,KAEhC,OAAOC,GAAaA,EAAUH,GAC7BI,QAAO,SAACC,EAAGC,GACR,IAAMC,EAAiBnB,EAAMoB,WAAU,SAAAC,GAAC,OAAIH,EAAEI,YAAcD,EAAEC,WAAaJ,EAAEK,OAASF,EAAEE,QACxF,OAAGJ,GAAkB,GAAKrB,EAAO0B,SAASC,IAAUzB,EAAMmB,GAAgBD,EAAEQ,IACjET,EAAEU,OAAO,CAAC,OAAD,UACTT,EADS,CAEZU,EAAE,OAAD,UAAO5B,EAAMmB,GAAgBD,EAA7B,CAAgCR,EAAGe,IAAUN,SAG/CF,IAET,IACDR,KAAI,SAAAoB,GACD,IAAMN,EAA8C,EAAvCO,IAAOC,QAAQF,EAAGN,KAAKS,OAAO,EAAG,IAC9C,OAAO,OAAP,UAAYH,EAAZ,CAAgBI,KAASrB,EAAL,IAAYW,EAAKW,WAAWC,SAAS,EAAG,KAAxC,iBAG3BnB,QAAO,SAACC,EAAGmB,GAAJ,OAAUnB,EAAEU,OAAOS,KAAI,IAMhBC,CAFDC,EAAGC,QAAO,SAAAC,GAAC,OAAIA,EAAExC,MAAMyC,MAAK,SAAAC,GAAC,OAAIA,EAAEd,GAAKc,EAAEd,EAAEG,QAAQlC,IAAoB,QACrFY,KAAI,SAAAS,GAAC,MAAK,CAAEI,UAAWJ,EAAEI,UAAWC,KAAML,EAAEK,KAAML,EAAE,OAAD,UAAOA,EAAElB,MAAMyC,MAAK,SAAAvB,GAAC,OAAIA,EAAEU,IAAM/B,KAAjC,CAAmD6B,EAAGR,EAAElB,MAAMoB,WAAU,SAAAF,GAAC,OAAIA,EAAEU,IAAM/B,WAC5GC,GACvB6C,EAAU,SAACH,EAAGI,GAAJ,OAAkB/B,YAAOgC,YAAS,GAAGL,GAAMM,KAA3C,IAA+DF,EAAOG,OAAtE,IAAgFH,EAAOI,KAAvF,IAA+FJ,EAAOK,KAAtG,IAA8GL,EAAOM,IAArH,IAA4HN,EAAOO,MAAnI,IAA4I1B,IAAUmB,EAAOlB,IAC7K,OAAO3B,EAAOU,KAAI,SAAC+B,EAAGd,GAAJ,wBAAgBc,EAAhB,CAAmBG,QAASA,EAAQH,EAAEP,KAAMO,EAAEZ,SAG5DwB,EAAW,SAACC,EAAYC,GAE5B,IAAM/B,EAAO8B,EAAWE,WAClBC,EAAY3C,YAAOwC,EAAY,YAC/BI,EAAK1C,EAAUyC,GAAWE,KAAKC,MAAOpC,EAAQ,IAEpD+B,EADmBhB,EAAGG,MAAK,SAAAvB,GAAC,OAAIA,EAAEI,YAAcmC,EAAGnC,WAAaJ,EAAEK,OAASkC,EAAGlC,UAajEqC,UATF,WAEX,OAAO,kBAAC,IAAD,KAAQ,kBAAC,UAAD,CACbC,QAAQ,4BACRjE,aAAcA,EACdkE,cAAeV","file":"component---src-pages-qmdj-year-js-f788f9f7222b201470b5.js","sourcesContent":["import React from \"react\"\nimport Layout from '../../containers/layout'\nimport ChartList from '../../cm-lib/reference/DetailChart.json'\nimport Ju from '../../cm-lib/reference/Ju.json'\nimport { DEAULT_DATE_FORMAT, BRANCH, DATETIME_FORMAT, DIRECTION } from '../../cm-lib/constants'\nimport { format, parseISO, addDays, differenceInCalendarDays } from 'date-fns';\nimport Common from './common'\n\nconst search = (chart, palace) => {\n  const now = new Date();\n  const searchEndDate = addDays(now, 5);\n  const diff = differenceInCalendarDays(searchEndDate, now);\n  return [...Array(diff).keys()].map(d => {\n      const compareDate = addDays(now, d);\n      const key = format(compareDate, DEAULT_DATE_FORMAT);\n     \n      return ChartList && ChartList[key]\n      .reduce((a, e) => {\n          const formationIndex = chart.findIndex(o => e.structure === o.structure && e.hour === o.hour)\n          if(formationIndex > -1 && palace.includes(DIRECTION[chart[formationIndex].e.i])) {\n              return a.concat([{\n                  ...e,\n                  f: { ...chart[formationIndex].e, d: DIRECTION[formationIndex] }\n              }])\n          }\n          return a;\n      }\n      , [])\n      .map(ee =>  {\n          const hour = BRANCH.indexOf(ee.hour.substr(1, 1)) * 2;\n          return { ...ee, date: `${key}T${hour.toString().padStart(2, '0')}:00:00`};\n      })\n  })\n  .reduce((a, n) => a.concat(n), [])\n}\n\nconst handleSearch = (searchFormation, palace) => {\n  const found = Ju.filter(v => v.chart.find(g => g.f && g.f.indexOf(searchFormation) > -1 ))\n  .map(e => ({ structure: e.structure, hour: e.hour, e: { ...e.chart.find(e => e.f === searchFormation), i: e.chart.findIndex(e => e.f === searchFormation) }}))\n  const result = search(found, palace);\n  const display = (v, square) => `${format(parseISO(`${v}`), DATETIME_FORMAT)} ${square.heaven} ${square.star} ${square.door} ${square.god} ${square.earth} ${DIRECTION[square.i]}`\n  return result.map((v, i) => ({ ...v, display: display(v.date, v.f)}))\n}\n\nconst getChart = (dateObject, updateChart) => {\n    \n  const hour = dateObject.getHours();\n  const chartDate = format(dateObject, 'yyyyMMdd')\n  const ch = ChartList[chartDate][Math.floor((hour) / 2)];\n  const foundChart = Ju.find(e => e.structure === ch.structure && e.hour === ch.hour);\n  updateChart(foundChart);\n}  \n\nconst Home = () => {\n\n  return <Layout><Common\n    heading=\"Qi Men Dun Jia Year Chart\"\n    handleSearch={handleSearch} \n    onDateChanged={getChart}\n  /></Layout>\n}\n\nexport default Home\n"],"sourceRoot":""}