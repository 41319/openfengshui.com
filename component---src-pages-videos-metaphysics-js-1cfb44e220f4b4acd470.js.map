{"version":3,"sources":["webpack:///./src/pages/videos/metaphysics.js"],"names":["Index","data","useState","allYoutubeVideo","edges","map","e","node","thumbnail","url","videoId","cta","href","label","dataList","setDataList","useEffect","array","temporaryValue","randomIndex","currentIndex","length","Math","floor","random","shuffle","slice","max","query"],"mappings":"4FAAA,0GAmDeA,UA1BD,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAAW,EACMC,mBAC9BD,EAAKE,gBAAgBC,MAAMC,KAAI,SAAAC,GAAC,wBAC3BA,EAAEC,KADyB,CAE9BC,UAAWF,EAAEC,KAAKC,UAAUC,IAC5BA,IAAI,kCAAmCH,EAAEC,KAAKG,QAC9CC,IACE,kBAAC,IAAD,CACEC,KAAI,kCAAoCN,EAAEC,KAAKG,QAC/CG,MAAM,gBARPC,EADmB,KACTC,EADS,KAmB1B,OAJAC,qBAAU,WACRD,EAnCU,SAAUE,GAKtB,IAJA,IACIC,EAAgBC,EADhBC,EAAeH,EAAMI,OAIlB,IAAMD,GAEXD,EAAcG,KAAKC,MAAMD,KAAKE,SAAWJ,GAIzCF,EAAiBD,EAHjBG,GAAgB,GAIhBH,EAAMG,GAAgBH,EAAME,GAC5BF,EAAME,GAAeD,EAGvB,OAAOD,EAmBOQ,CAAQX,EAASY,YAC5B,IAGD,kBAAC,IAAD,CAAQC,IAAI,UACV,kBAAC,IAAD,CAAab,SAAUA,MAOtB,IAAMc,EAAK","file":"component---src-pages-videos-metaphysics-js-1cfb44e220f4b4acd470.js","sourcesContent":["import React, { useEffect, useState } from \"react\"\nimport Layout from \"../../containers/layout\"\nimport CardListing from \"../../components/CardListing\"\nimport { Anchor } from \"grommet\"\nimport { graphql } from \"gatsby\"\n\nvar shuffle = function (array) {\n  var currentIndex = array.length\n  var temporaryValue, randomIndex\n\n  // While there remain elements to shuffle...\n  while (0 !== currentIndex) {\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex)\n    currentIndex -= 1\n\n    // And swap it with the current element.\n    temporaryValue = array[currentIndex]\n    array[currentIndex] = array[randomIndex]\n    array[randomIndex] = temporaryValue\n  }\n\n  return array\n}\n\nconst Index = ({ data }) => {\n  const [dataList, setDataList] = useState(\n    data.allYoutubeVideo.edges.map(e => ({\n      ...e.node,\n      thumbnail: e.node.thumbnail.url,\n      url: `http://www.youtube.com/watch?v=${e.node.videoId}`,\n      cta: (\n        <Anchor\n          href={`http://www.youtube.com/watch?v=${e.node.videoId}`}\n          label=\"Watch\"\n        />\n      ),\n    }))\n  )\n\n  useEffect(() => {\n    setDataList(shuffle(dataList.slice()))\n  }, [])\n\n  return (\n    <Layout max=\"1240px\">\n      <CardListing dataList={dataList} />\n    </Layout>\n  )\n}\n\nexport default Index\n\nexport const query = graphql`\n  query HomePage {\n    allYoutubeVideo {\n      edges {\n        node {\n          id\n          title\n          description\n          videoId\n          publishedAt\n          privacyStatus\n          channelTitle\n          thumbnail {\n            url\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}