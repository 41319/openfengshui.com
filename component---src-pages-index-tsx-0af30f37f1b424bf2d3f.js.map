{"version":3,"file":"component---src-pages-index-tsx-0af30f37f1b424bf2d3f.js","mappings":"kMAAA,MAoBaA,EAAQ,CACjB,SAAY,CAAC,KAAM,MACnB,SAAY,CAAC,KAAM,MACnB,SAAY,CAAC,KAAM,MACnB,SAAY,CAAC,KAAM,MAEnB,QAAW,CAAC,KAAM,MAClB,QAAW,CAAC,KAAM,MAClB,QAAW,CAAC,KAAM,MAClB,QAAW,CAAC,KAAM,MAElB,SAAY,CAAC,KAAM,MACnB,SAAY,CAAC,KAAM,MACnB,SAAY,CAAC,KAAM,MACnB,SAAY,CAAC,KAAM,MAEnB,OAAU,CAAC,KAAM,MACjB,OAAU,CAAC,KAAM,MACjB,OAAU,CAAC,KAAM,MACjB,OAAU,CAAC,KAAM,MAEjB,QAAW,CAAC,KAAM,MAClB,QAAW,CAAC,KAAM,MAClB,QAAW,CAAC,KAAM,MAClB,QAAW,CAAC,KAAM,MAElB,QAAW,CAAC,KAAM,MAClB,QAAW,CAAC,KAAM,MAClB,QAAW,CAAC,KAAM,MAClB,QAAW,CAAC,KAAM,MAElB,OAAU,CAAC,KAAM,MACjB,OAAU,CAAC,KAAM,MACjB,OAAU,CAAC,KAAM,MACjB,OAAU,CAAC,KAAM,MAEjB,SAAY,CAAC,KAAM,MACnB,SAAY,CAAC,KAAM,MACnB,SAAY,CAAC,KAAM,MACnB,SAAY,CAAC,KAAM,MAEnB,OAAU,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MACvH,MAAS,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,OAwBvF,kBACVA,EAAgB,WAAC,OACjBA,EAAgB,WAAC,OACjBA,EAAgB,WAAC,OACjBA,EAAgB,WAAC,OAEjBA,EAAe,UAAC,OAChBA,EAAe,UAAC,OAChBA,EAAe,UAAC,OAChBA,EAAe,UAAC,OAEhBA,EAAgB,WAAC,OACjBA,EAAgB,WAAC,OACjBA,EAAgB,WAAC,OACjBA,EAAgB,WAAC,OAEjBA,EAAc,SAAC,OACfA,EAAc,SAAC,OACfA,EAAc,SAAC,OACfA,EAAc,SCtCrB,MA9DuC,KAErC,MAAM,EAACC,EAAK,EAAEC,IAAYC,EAAAA,EAAAA,UAAS,kBAC7B,EAACC,EAAW,EAAEC,IAAkBF,EAAAA,EAAAA,UAAS,KACzC,EAACG,EAAU,EAAEC,IAAiBJ,EAAAA,EAAAA,UAAS,IAqD7C,OACEK,EAAAA,cAAAA,MAAAA,KAAK,YAAe,EAMjB,MAAMC,EAAe,IAAMD,EAAAA,cAAAA,QAAAA,KAAO,Y","sources":["webpack://web13/./src/helpers/NumberEnergy.js","webpack://web13/./src/pages/index.tsx"],"sourcesContent":["const SHENGQI = 'shengqi'\nconst TIANYI = 'tianyi'\nconst WUGUI = 'wugui'\nconst FUWEI = 'fuwei';\nconst YANNIAN = 'yannian';\nconst HUOHAI = 'huohai';\nconst LIUSHA = 'liusha';\nconst JUEMING = 'jueming';\n\nexport const stars = [\n    SHENGQI,\n    TIANYI,\n    WUGUI,\n    FUWEI,\n    YANNIAN,\n    HUOHAI,\n    LIUSHA,\n    JUEMING\n]\n\nexport const combo = {\n    \"shengqi1\": [\"14\", \"41\"],\n    \"shengqi2\": [\"67\", \"76\"],\n    \"shengqi3\": [\"39\", \"93\"],\n    \"shengqi4\": [\"28\", \"82\"],\n\n    \"tianyi1\": [\"13\", \"31\"],\n    \"tianyi2\": [\"68\", \"86\"],\n    \"tianyi3\": [\"49\", \"94\"],\n    \"tianyi4\": [\"27\", \"72\"],\n\n    \"yannian1\": [\"19\", \"91\"],\n    \"yannian2\": [\"78\", \"87\"],\n    \"yannian3\": [\"34\", \"43\"],\n    \"yannian4\": [\"26\", \"62\"],\n\n    \"fuwei1\": [\"11\", \"22\"],\n    \"fuwei2\": [\"88\", \"99\"],\n    \"fuwei3\": [\"66\", \"77\"],\n    \"fuwei4\": [\"33\", \"44\"],\n\n    \"liusha1\": [\"16\", \"61\"],\n    \"liusha2\": [\"47\", \"74\"],\n    \"liusha3\": [\"38\", \"83\"],\n    \"liusha4\": [\"29\", \"92\"],\n\n    \"huohai1\": [\"17\", \"71\"],\n    \"huohai2\": [\"89\", \"98\"],\n    \"huohai3\": [\"46\", \"64\"],\n    \"huohai4\": [\"23\", \"32\"],\n\n    \"wugui1\": [\"18\", \"81\"],\n    \"wugui2\": [\"79\", \"97\"],\n    \"wugui3\": [\"36\", \"63\"],\n    \"wugui4\": [\"24\", \"42\"],\n\n    \"jueming1\": [\"12\", \"21\"],\n    \"jueming2\": [\"69\", \"96\"],\n    \"jueming3\": [\"48\", \"84\"],\n    \"jueming4\": [\"37\", \"73\"],\n\n    \"good05\": [\"01\", \"03\", \"05\", \"06\", \"07\", \"08\", \"15\", \"25\", \"30\", \"35\", \"45\", \"51\", \"52\", \"57\", \"58\", \"65\", \"75\", \"85\", \"95\"],\n    \"bad05\": [\"02\", \"04\", \"09\", \"10\", \"20\", \"40\", \"50\", \"53\", \"54\", \"55\", \"56\", \"59\", \"60\", \"70\", \"80\", \"90\"]\n\n}\n\n\nexport const numberToStar = (num) => {\n    return Object.keys(combo).reduce((prev, k) => {\n        const check = `${num}`;\n        \n        if(prev) {\n            return prev;\n        }\n        if(combo[k].includes(check)) {\n\n            return {\n                type: k.substr(0, k.length - 1),\n                level: k.substr(-1)\n            }\n        } else {\n            return '';\n        }\n    }, '')\n}\n\nconst GOOD_NUMBER = [\n    ...combo[\"shengqi1\"],\n    ...combo[\"shengqi2\"],\n    ...combo[\"shengqi3\"],\n    ...combo[\"shengqi4\"],\n\n    ...combo[\"tianyi1\"],\n    ...combo[\"tianyi2\"],\n    ...combo[\"tianyi3\"],\n    ...combo[\"tianyi4\"],\n\n    ...combo[\"yannian1\"],\n    ...combo[\"yannian2\"],\n    ...combo[\"yannian3\"],\n    ...combo[\"yannian4\"],\n\n    ...combo[\"fuwei1\"],\n    ...combo[\"fuwei2\"],\n    ...combo[\"fuwei3\"],\n    ...combo[\"fuwei4\"],\n]\n\nconst removeFiveZero = (str) => {\n    return str.split(\"\").reduce((prev, next) => {\n  \n      if(next !== \"0\" && next !== \"5\") {\n        return prev + next;\n      } else {\n        return prev\n      }\n    }, \"\")\n  }\n\nexport const numberMeaning = {\n    shengqi: \"Optimistic, forgiving, attract benefactors, lazy, issue with digesitive system.\",\n    yannian: \"Male ego, firm, leadership, responsibility, able to retain wealth, heart issue\",\n    fuwei: \"Perserverance, hidden talent, stubborn, patiene, enhancing other star\",\n    tianyi: \"Smart, represent wealth, kind, easily attract money but may not be able to retain it, blood pressure issue.\",\n    wugui: \"Talented, unstable, sensitive, agile\",\n    jueming: \"Emotion management issue, extremist, bad temper, kidney and liver issue\",\n    huohai: \"Gossip, gift of gab, sickness, blunt\",\n    liusha: \"Relationship, fickle-minded, service, skin issue\"\n}\n  \nexport const breakNumber = (str) => {\n    const result = []\n    const number = removeFiveZero(str)\n    for(let i = 0; i < number.length; i++) {\n    let subNumber = number[i]\n    if([\"0\", \"5\"].includes(subNumber) || i === number.length - 1) {\n        continue;\n    }\n\n    let nextNumberIndex = i + 1; \n    while(true) {\n\n        if(nextNumberIndex  === number.length) {\n        break;\n        }\n        subNumber = subNumber + number[nextNumberIndex]\n        if(![\"0\", \"5\"].includes(subNumber[subNumber.length - 1])) {\n        break;\n        }\n        nextNumberIndex++;\n    }\n    result.push(subNumber)\n    }\n    return result\n}\n\n\nexport const isGoodNumber = num => {\n    const chunk = breakNumber(num)\n    let noOfFive = 0;\n    let badNumber = 0\n    return chunk.reduce((prev, next, i) => {\n        if(noOfFive > 1) {\n            return false;\n        }\n        if(num.includes('5')) {\n            noOfFive = noOfFive + 1;\n        }\n        if(num.includes('0')) {\n            return false;\n        }\n        if(!prev) {\n            return prev;\n        }\n        if( !GOOD_NUMBER.includes(next) ) {\n            badNumber = badNumber + 1\n        }\n\n        if(badNumber > 1) {\n            return false\n        }\n        return true\n    }, true)\n}\n\n","import * as React from \"react\"\nimport { useState } from \"react\"\nimport type { HeadFC, PageProps } from \"gatsby\"\nimport { breakNumber, numberToStar, numberMeaning, stars } from '../helpers/NumberEnergy'\nimport Ad from '../components/ad'\nconst IndexPage: React.FC<PageProps> = () => {\n\n  const [query, setQuery] = useState('9111441423434')\n  const [numberChunk, setNumberChunk] = useState([])\n  const [moreClause, setMoreClause] = useState([])\n\n  const analyseNumber = (query) => {\n    const result = []\n    const chunk = breakNumber(query);\n    const lastNumberPair = chunk[chunk.length - 1];\n\n    const starRepresentation = chunk.map(e => numberToStar(e).type)\n    const year = new Date().getFullYear()\n\n    const numOfStar = stars.map(star => {\n      return {\n        star,\n        count: starRepresentation.filter(_star => _star === star).length\n      }\n    })\n\n    if(query.includes('91')) {\n      result.push('91 is not advisable to be used by women.')\n    }\n\n    if(query.includes('87')) {\n      result.push('87 is not advisable to be used by ladies.')\n    }\n\n    if(query.includes('0')) {\n      result.push('Avoid 0 in the number.')\n    }\n\n    if(['wugui', 'liusha', 'huohai', 'jueming'].includes(numberToStar(chunk[chunk.length - 1]).type)) {\n      result.push(`Avoid ${lastNumberPair} at the end.`)\n    }\n\n    numOfStar.forEach(e => {\n      if(e.count > 2) {\n        result.push(`${e.count} ${e.star} in the number. Too many of a certain star may not be a good thing.`)\n      }\n    })\n\n    \n\n\n    return result;\n  }\n\n  const handleQuery = () => {\n    const chunk = breakNumber(query)\n    setNumberChunk(chunk)\n    setMoreClause(analyseNumber(query))\n  }\n\n  const isGoodEnergy = (star) => ['tianyi', 'yannian', 'shengqi'].includes(star.trim())\n\n  return (\n    <div>Revamping</div>\n  )\n}\n\nexport default IndexPage\n\nexport const Head: HeadFC = () => <title>Home Page</title>\n"],"names":["combo","query","setQuery","useState","numberChunk","setNumberChunk","moreClause","setMoreClause","React","Head"],"sourceRoot":""}