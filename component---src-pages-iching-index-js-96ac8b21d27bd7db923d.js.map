{"version":3,"sources":["webpack:///./src/containers/IChing/utils.ts","webpack:///./src/components/Bazi/index.js","webpack:///./src/cm-lib/IChing/index.js","webpack:///./src/containers/IChing/Hexline.css.tsx","webpack:///./src/containers/IChing/HexLine.tsx","webpack:///./src/containers/IChing/Hex.tsx","webpack:///./src/pages/iching/index.js","webpack:///./src/containers/Ad.js","webpack:///./src/components/BoxButton/index.js","webpack:///./src/components/Pillar/index.js","webpack:///./src/containers/Bazi/BaziPillar.js"],"names":["Coin","Line","Home","inputDate","hideOtherInformation","onBazi","t","useTranslation","qs","getQueryString","dateObject","useState","Date","pillars","setPillars","parseInt","g","gender","setGender","bazi","dateObjectToBazi","useEffect","bz","header","ganzhi","GanZhiHour","GanZhiDay","GanZhiMonth","GanZhiYear","map","e","BaziPillar","hiddenStems","luckHeader","tenYearCycle","i","startWesternAge","hundredYear","chunk","year","pillar","BoxButton","activeIndex","onClick","buttons","label","Pillar","list","Accordion","AccordionPanel","Object","keys","stars","classical","k","elementRelationship","first","second","lookup","firstIndex","findIndex","distance","slice","concat","getHex","binary","searchHexagram","split","join","getSixAnimal","dayMaster","index","甲","乙","丙","丁","戊","己","庚","辛","壬","癸","SIX_ANIMALS","changeLine","hexagram","lineIndex","replace","replaceAt","key","value","Hexagram","find","h","word","replacement","substr","length","Tails","Heads","Trigrams","Straight","Broken","TRIGRAM_LOOKUP_ORDER","HEXAGRAM_LOOKUP_TABLE","HEXAGRAM_NAMES","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","Trigram","lines","coinToss","Math","round","random","getLine","this","getKey","trigramName","trigramLookup","changing","some","line","BrokenPlus","StraightPlus","normalizeLine","changeLines","normalizeLines","normalizedLines","lowerTrigram","upperTrigram","hexagramNumber","hexagramName","getLinesAscending","getLinesDescending","reverse","getChangingHex","styled","div","props","change","BrokenContainer","BrokenSegment","BrokenSegmentPlus","HexLine","console","log","Hex","queryString","require","binToHexagram","lowerLines","upperLines","queryDate","parseStringDate","search","hex","setHex","date","lunarMonth","lunarDay","yBranch","dStem","hBranch","sumOfYMD","sumOfYMDH","changingLine","upper","lower","mainHexagram","changeHexagram","changeHexagramObject","mainHexagramObject","getTrigram","ii","dateToBazi","EB","EARLY_HEAVEN_TRIGRAM","relation","Branch","ee","element","EBElement","animals","mainHex","Binary","changeHex","assign","stringify","format","DATETIME_FORMAT","Bazi","Box","direction","alignContent","fill","pad","Ad","client","slot","align","color","background","wrap","gap","StandardBox","children","justify","PillarGrid","getColor","width","size","textAlign","HIDDEN_STEMS"],"mappings":"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","file":"component---src-pages-iching-index-js-96ac8b21d27bd7db923d.js","sourcesContent":["/*\nTODO:\n1. organize/break into files\n2. hand drawn lines\n3. Animations on line and draw\n4. Click to re-cast\n7. SEO\n*/\n\nenum Coin {\n  Tails = 0,\n  Heads = 1\n}\n\nexport enum Line {\n  BrokenPlus = Coin.Tails + Coin.Tails + Coin.Tails, // 0\n  Straight = Coin.Heads + Coin.Tails + Coin.Tails, // 1\n  Broken = Coin.Heads + Coin.Heads + Coin.Tails, // 2\n  StraightPlus = Coin.Heads + Coin.Heads + Coin.Heads, // 3\n}\n\n\ninterface Trigrams {\n  [key: string]: string;\n}\n// TODO: convert to enum.\nconst Trigrams: Trigrams = {\n  [`${Line.Straight}${Line.Straight}${Line.Straight}`]: 'Ch\\'ien',\n  // '222': 'Ch\\'ien',\n  // '211': 'Chen',\n  [`${Line.Straight}${Line.Broken}${Line.Broken}`]: 'Chen',\n  // '121': 'K\\'an',\n  [`${Line.Broken}${Line.Straight}${Line.Broken}`]: 'K\\'an',\n  // '112': 'Ken',\n  [`${Line.Broken}${Line.Broken}${Line.Straight}`]: 'Ken',\n  // '111': 'K\\'un',\n  [`${Line.Broken}${Line.Broken}${Line.Broken}`]: 'K\\'un',\n  // '122': 'Sun',\n  [`${Line.Broken}${Line.Straight}${Line.Straight}`]: 'Sun',\n  // '212': 'Li',\n  [`${Line.Straight}${Line.Broken}${Line.Straight}`]: 'Li',\n  // '221': 'Tui',\n  [`${Line.Straight}${Line.Straight}${Line.Broken}`]: 'Tui',\n}\n\ninterface TrigramLookupOrder {\n  [Key: string]: number;\n}\nconst TRIGRAM_LOOKUP_ORDER: TrigramLookupOrder = {\n  'Ch\\'ien': 0,\n  'Chen': 1,\n  'K\\'an': 2,\n  'Ken': 3,\n  'K\\'un': 4,\n  'Sun': 5,\n  'Li': 6,\n  'Tui': 7,\n}\n\nconst HEXAGRAM_LOOKUP_TABLE = [\n  [1, 34, 5, 26, 11, 9, 14, 43],\n  [25, 51, 3, 27, 24, 42, 21, 17],\n  [6, 40, 29, 4, 7, 59, 64, 47],\n  [33, 62, 39, 52, 15, 53, 56, 31],\n  [12, 16, 8, 23, 2, 20, 35, 45],\n  [44, 32, 48, 18, 46, 57, 50, 28],\n  [13, 55, 63, 22, 36, 37, 30, 49],\n  [10, 54, 60, 41, 19, 61, 38, 58]\n];\n\ninterface HexagramNames {\n  [key: number]: string;\n}\n// TODO: correct names\nconst HEXAGRAM_NAMES: HexagramNames = {\n  1: 'The Creative',\n  2: 'The Receptive',\n  3: 'Difficulty at the Beginning',\n  4: 'Youthful Folly',\n  5: 'Waiting (Nourishment)',\n  6: 'Conflict',\n  7: 'The Army',\n  8: 'Holding Together [Union]',\n  9: 'The Taming Power of the Small',\n  10: 'Treading [Conduct]',\n  11: 'Peace',\n  12: 'Standstill [Stagnation]',\n  13: 'Fellowship',\n  14: 'Possession in Great Measure',\n  15: 'Modesty',\n  16: 'Enthusiasm',\n  17: 'Following',\n  18: 'Work on What Has Been Spoiled',\n  19: 'Approach',\n  20: 'Contemplation (View)',\n  21: 'Biting Through',\n  22: 'Grace',\n  23: 'Splitting Apart',\n  24: 'Return (The Turning Point)',\n  25: 'Innocence (The Unexpected)',\n  26: 'The Taming Power of the Great',\n  27: 'The Corners of the Mouth',\n  28: 'Preponderance of the Great',\n  29: 'The Abysmal (Water)',\n  30: 'The Clinging, Fire',\n  31: 'Influence (Wooing)',\n  32: 'Duration',\n  33: 'Retreat',\n  34: 'The Power of the Great',\n  35: 'Progress',\n  36: 'Darkening of the Light',\n  37: 'The Family [The Clan]',\n  38: 'Opposition',\n  39: 'Obstruction',\n  40: 'Deliverance',\n  41: 'Decrease',\n  42: 'Increase',\n  43: 'Break-through (Resoluteness)',\n  44: 'Coming to Meet',\n  45: 'Gathering Together [Massing]',\n  46: 'Pushing Upward',\n  47: 'Oppression (Exhaustion)',\n  48: 'The Well',\n  49: 'Revolution (Molting)',\n  50: 'The Cauldron',\n  51: 'The Arousing (Shock, Thunder)',\n  52: 'Keeping Still, Mountain',\n  53: 'Development (Gradual Progress)',\n  54: 'The Marrying Maiden',\n  55: 'Abundance [Fullness]',\n  56: 'The Wanderer',\n  57: 'The Gentle (The Penetrating, Wind)',\n  58: 'The Joyous, Lake',\n  59: 'Dispersion [Dissolution]',\n  60: 'Limitation',\n  61: 'Inner Truth',\n  62: 'Preponderance of the Small',\n  63: 'After Completion',\n  64: 'Before Completion',\n};\n\nexport class Trigram {\n  lines: [Line, Line, Line];\n  key: string;\n  trigramName: string;\n  trigramLookup: number;\n  changing: boolean;\n\n  constructor(lines?: [Line, Line, Line]) {\n    this.lines = lines || [this.getLine(), this.getLine(), this.getLine()];\n    this.key = this.getKey(this.lines);\n    this.trigramName = Trigrams[this.key];\n    this.trigramLookup = TRIGRAM_LOOKUP_ORDER[this.trigramName];\n    this.changing = this.lines.some((line: Line) => line === Line.BrokenPlus || line === Line.StraightPlus);\n  }\n\n  coinToss = (): Coin => (\n    Math.round(Math.random()) as Coin\n  )\n\n  getLine = (): Line => (\n    (this.coinToss() + this.coinToss() + this.coinToss()) as Line\n  )\n\n  normalizeLine(line: Line): Line {\n    switch (line) {\n      case Line.BrokenPlus:\n        return Line.Broken;\n      case Line.StraightPlus:\n        return Line.Straight;\n      default:\n        return line;\n    }\n  }\n\n  changeLine(line: Line): Line {\n    switch (line) {\n      case Line.BrokenPlus:\n        return Line.Straight;\n      case Line.StraightPlus:\n        return Line.Broken;\n      default:\n        return line;\n    }\n  }\n\n  changeLines(): [Line, Line, Line]{\n    return this.lines.map((line: Line) => this.changeLine(line)) as [Line, Line, Line];\n  }\n\n  normalizeLines(): [Line, Line, Line]{\n    return this.lines.map((line: Line) => this.normalizeLine(line)) as [Line, Line, Line];\n  }\n\n  getKey(lines: Line[]) {\n    const normalizedLines = lines.map((line: Line) => this.normalizeLine(line));\n    const key = '' + normalizedLines[0] + normalizedLines[1] + normalizedLines[2];\n    return key;\n  }\n}\n\nexport class Hexagram {\n  lowerTrigram: Trigram;\n  upperTrigram: Trigram;\n  hexagramNumber: number;\n  hexagramName: string;\n  changing: boolean;\n\n  constructor(lowerTrigram?: Trigram, upperTrigram?: Trigram) {\n    this.lowerTrigram = lowerTrigram || new Trigram();\n    this.upperTrigram = upperTrigram || new Trigram();\n    this.hexagramNumber = HEXAGRAM_LOOKUP_TABLE[this.lowerTrigram.trigramLookup][this.upperTrigram.trigramLookup];\n    this.hexagramName = HEXAGRAM_NAMES[this.hexagramNumber];\n    this.changing = this.lowerTrigram.changing || this.upperTrigram.changing;\n  }\n\n  private getLinesAscending(): Line[] {\n    return [...this.lowerTrigram.lines, ...this.upperTrigram.lines]\n  }\n\n  getLinesDescending(): Line[] {\n    return this.getLinesAscending().reverse();\n  }\n\n  getChangingHex(): Hexagram | null {\n    if (!this.changing) {\n      return null;\n    }\n\n    const newLower = new Trigram(this.lowerTrigram.changeLines());\n    const newUpper = new Trigram(this.upperTrigram.changeLines());\n    return new Hexagram(newLower, newUpper);\n  }\n}\n\n\n","import React, { useState, useEffect } from \"react\"\nimport { Accordion, AccordionPanel } from 'grommet';\nimport DateTimePicker from '../../components/DateTimePicker'\nimport Pillar from '../../components/Pillar'\nimport BaziPillar from '../../containers/Bazi/BaziPillar'\nimport BoxButton from '../../components/BoxButton'\n\nimport { dateObjectToBazi } from '../../cm-lib/FourPillar'\nimport { useTranslation } from 'react-i18next';\nimport { parseStringDate, getQueryString, chunk } from '../../helpers'\nimport { format } from 'date-fns';\n\nconst isBrowser = typeof window !== `undefined`\n\nconst Home = ({ inputDate, onBazi, hideOtherInformation }) => {\n  const { t } = useTranslation();\n  const qs = getQueryString()\n  const [dateObject] = useState(inputDate || new Date())\n  const [pillars, setPillars] = useState(null)\n  const [gender, setGender] = useState(parseInt(qs.g) || 0)\n  const [bazi] = useState(dateObjectToBazi(dateObject, gender === 0 ? 'M' : 'F' ))\n  useEffect(() => {\n    const bz = [\n      {\n        header: 'Hour',\n        ganzhi: bazi.GanZhiHour.ganzhi\n      },\n      {\n        header: 'Day',\n        ganzhi: bazi.GanZhiDay.ganzhi\n      },\n      {\n        header: 'Month',\n        ganzhi: bazi.GanZhiMonth.ganzhi\n      },\n      {\n        header: 'Year',\n        ganzhi: bazi.GanZhiYear.ganzhi\n      },\n\n    ].map(e => <BaziPillar hiddenStems header={e.header} ganzhi={e.ganzhi} />)\n\n    const luckHeader = bazi.tenYearCycle\n    .map((e, i) => {\n      \n      return <BaziPillar header={bazi.startWesternAge + i * 10} ganzhi={e} />\n    \n    })\n\n    setPillars({\n      bz,\n      hundredYear: chunk(bazi.hundredYear.map(e => <BaziPillar header={e.year} ganzhi={e.pillar} />), 10),\n      luckHeader,\n      bazi,\n    })\n  }, [bazi])\n  return <>\n\n      {\n        !hideOtherInformation && <BoxButton activeIndex={gender} onClick={(e, i) => setGender(i)} buttons={[\n      { \n        label: 'M', \n        \n      },\n      {\n        label: 'F',\n      }\n    ]} />\n  }\n    <br />\n\n    {\n      pillars && <Pillar list={pillars.bz} />\n    }\n\n    {\n      !hideOtherInformation && <Accordion>\n        <AccordionPanel label=\"More Information\">\n        {\n          Object.keys(bazi.stars.classical).map(k => <AccordionPanel label={`${k} ${t(k)}: ${bazi.stars.classical[k]}`}></AccordionPanel>)\n        }\n        </AccordionPanel>\n      </Accordion>\n    }\n<br />\n    {\n      !hideOtherInformation && pillars && <Pillar list={pillars.luckHeader} />\n    }\n\n<br />\n    {\n      !hideOtherInformation && pillars && pillars.hundredYear.map(e => <Pillar list={e} />)\n    }\n\n  </>\n}\n\nexport default Home\n","import { dateToBazi } from '../FourPillar'\nimport { EB, HS, EARLY_HEAVEN_TRIGRAM, SIX_ANIMALS, EBElement } from '../constants'\nimport Hexagram from './Hexagram.json'\n\nconst elementRelationship = (first, second) => {\n    const lookup = [\"water\", \"wood\", \"fire\", \"earth\", \"metal\"]\n    const firstIndex = lookup.findIndex(e => e === first);\n    const distance = lookup.slice(firstIndex).concat(lookup.slice(0, firstIndex)).findIndex(e => e === second);\n\n    if(distance === 0) {\n        return '兄'\n    }\n    if(distance === 1) {\n        return '子'\n    }\n    if(distance === 2) {\n        return '妻'\n    }\n    if(distance === 3) {\n        return '官'\n    }\n    if(distance === 4) {\n        return '父'\n    }\n}\n\nexport const dateToHexagram = date => {\n    \n    const bazi = dateToBazi(date);\n    const { lunarMonth, lunarDay } = bazi;\n    const [yStem, yBranch] = bazi.GanZhiYear.ganzhi.split('');\n    const [dStem, dBranch] = bazi.GanZhiDay.ganzhi.split('');\n    const [hStem, hBranch] = bazi.GanZhiHour.ganzhi.split('');\n    const yearNum = EB.findIndex(e => e === yBranch) + 1;\n    const hourNum = EB.findIndex(e => e === hBranch) + 1;\n\n    const sumOfYMD = lunarDay + lunarMonth + yearNum;\n\n\n    const sumOfYMDH = sumOfYMD + hourNum;\n    const upperTrigram = (sumOfYMD - 1) % 8;\n    const lowerTrigram = (sumOfYMDH - 1) % 8;\n    const changingLine = (sumOfYMDH - 1) % 6;\n\n\n    const upper = EARLY_HEAVEN_TRIGRAM[Object.keys(EARLY_HEAVEN_TRIGRAM)[upperTrigram]];\n    const lower = EARLY_HEAVEN_TRIGRAM[Object.keys(EARLY_HEAVEN_TRIGRAM)[lowerTrigram]];\n    const mainHexagram = `${lower}${upper}`\n    const changeHexagram = changeLine(mainHexagram, changingLine);\n    const changeHexagramObject = getHex(changeHexagram)\n    const mainHexagramObject = getHex(mainHexagram)\n\n    const getTrigram = binary => Object.keys(EARLY_HEAVEN_TRIGRAM).find(e => EARLY_HEAVEN_TRIGRAM[e] === binary);\n    return {\n        mainHexagram: {\n            ...mainHexagramObject,\n            relation: mainHexagramObject.Branch.split('').map(ee => elementRelationship(mainHexagramObject.element, EBElement[ee])),\n            upper: getTrigram(upper),\n            lower: getTrigram(lower),\n        },\n        changeHexagram: {\n            ...changeHexagramObject,\n            relation: changeHexagramObject.Branch.split('').map(ee => elementRelationship(mainHexagramObject.element, EBElement[ee])),\n            upper: getTrigram(changeHexagram.substr(3, 3)),\n            lower: getTrigram(changeHexagram.substr(0, 3)),\n        },\n        changingLine,\n        animals: getSixAnimal(dStem)\n    }\n}\n\nexport const getHex = binary => {\n    return searchHexagram('Binary', binary.split('').join(''))\n}\n\nexport const getSixAnimal = dayMaster => {\n    const lookup = {\n        甲: 0,\n        乙: 0,\n        丙: 1,\n        丁: 1,\n        戊: 2,\n        己: 3,\n        庚: 4,\n        辛: 4,\n        壬: 5,\n        癸: 5\n    }\n    const index = lookup[dayMaster];\n    return SIX_ANIMALS.slice(index).concat(SIX_ANIMALS.slice(0, index));\n}\n\nexport const getEB = hexagramBinary => {\n    const lowerTrigram = hexagramBinary.substr(0, 3);\n    const upperTrigram = hexagramBinary.substr(3, 3);\n    const lookup = {\n        '111': 0,\n        '100': 0,\n        '001': 4,\n        '010': 2,\n        '000': 7,\n        '101': 3,\n        '011': 1,\n        '110': 5,\n    }\n    const lowerStart = lookup[lowerTrigram];\n    const upperStart = lookup[upperTrigram];\n\n    return [...Array(6).keys()].map(i => {\n        if(i < 3) {\n            const isYin = [0, 5, 3, 6].includes(parseInt(lowerTrigram, 2));\n            if(isYin) {\n                const seq = EB.slice().reverse();\n                return seq[((11 - lowerStart) + i * 2) % 12];\n            } else {\n                return EB[(lowerStart + i * 2) % 12];\n                \n            }\n        } else {\n            const isYin = [0, 5, 3, 6].includes(parseInt(upperTrigram, 2));\n            if(isYin) {\n                const seq = EB.slice().reverse();\n                return seq[((11 - upperStart) + i * 2) % 12];\n            } else {\n                return EB[(upperStart + i * 2)  % 12];\n            }\n        }\n    })\n}\n\nconst changeLine = (hexagram, lineIndex) => {\n    const replace = hexagram[lineIndex] === '1' ? '0' : '1';\n    return replaceAt(hexagram, lineIndex, replace);\n}\n\nexport const searchHexagram = (key, value) => {\n    return Hexagram.find(h => h[key] === value);\n}\n\nconst replaceAt = (word, index, replacement) => {\n    return word.substr(0, index) + replacement+ word.substr(index + replacement.length);\n}","import styled from 'styled-components';\nimport React from 'react';\n\nexport const Straight = styled.div`\n  height: 20px;\n  background-color: ${ props => props.change ? 'tomato' : 'darkslategrey' };\n  margin: 10px auto;\n  width: 100%;\n`;\n\nexport const StraightPlus = styled(Straight)`\n  background-color: tomato;\n`;\n\nexport const BrokenContainer = styled.div`\n  display: flex;\n  height: 20px;\n  width: 100%;\n  justify-content: space-between;\n  margin: 10px auto;\n\n`\n\nexport const BrokenSegment = styled.div`\n  height: 100%;\n  width: 33%;\n  background-color: ${ props => props.change ? 'tomato' : 'darkslategrey' };\n\n`;\n\nexport const BrokenSegmentPlus = styled(BrokenSegment)`\n  background-color: tomato;\n`;\n\nexport const Broken = ({ change }) => (\n  <BrokenContainer>\n    <BrokenSegment  change={change}/>\n\n    <BrokenSegment  change={change}/>\n  </BrokenContainer>\n);\n\nexport const BrokenPlus = () => (\n  <BrokenContainer>\n    <BrokenSegmentPlus/>\n\n    <BrokenSegmentPlus/>\n  </BrokenContainer>\n);\n","import React from 'react';\nimport { Line } from './utils';\nimport { Straight, StraightPlus, Broken, BrokenPlus } from './Hexline.css';\ninterface Props {\n  line: Line;\n}\n\nconst HexLine = ({ line, change }) => {\n  console.log(change)\n  switch (line) {\n    case Line.Broken:\n      return <Broken change={change} />\n    case Line.BrokenPlus:\n      return <BrokenPlus/>\n    case Line.Straight:\n      return <Straight  change={change}/>\n    case Line.StraightPlus:\n      return <StraightPlus/>\n    default:\n      return <p>woops</p>\n  }\n};\n\nexport default HexLine;\n","import React from 'react';\n\nimport { Hexagram, Line } from './utils';\nimport HexLine from './HexLine';\nimport { HexagramWrapper, Title } from './Hex.css';\n\ninterface Props {\n  hexagram: Hexagram;\n}\n\nconst Hex = ({ hexagram, changeLine }) => (\n  <>\n    \n    {hexagram.getLinesDescending().map((line: Line, i) => {\n      \n      return <HexLine line={line} change={i === changeLine} />\n    \n    })}\n    { hexagram.hexagramName }\n  </>\n);\n\nexport default Hex;\n","import React, { useState, useEffect } from \"react\"\nimport Layout from '../../containers/layout'\nimport Bazi from '../../components/Bazi'\nimport { dateToHexagram } from '../../cm-lib/IChing'\nimport DatePicker from '../../components/DateTimePicker'\nimport { Hexagram, Line, Trigram } from '../../containers/IChing/utils'\nimport Hex from '../../containers/IChing/Hex'\nimport { Box } from 'grommet'\nimport { DATETIME_FORMAT, DATE_FORMAT, READABLE_DATETIME_FORMAT } from '../../constants'\nimport { assign, getQueryString, parseStringDate } from '../../helpers'\nimport { format } from 'date-fns'\nimport Ad from '../../containers/Ad'\n\nconst queryString = require('query-string');\n\nconst binToHexagram = (lines) => {\n    const lowerLines = lines.slice(0, 3).map(e => e === '0' ? Line.Broken : Line.Straight)\n    const upperLines = lines.slice(3, 6).map(e => e === '0' ? Line.Broken : Line.Straight)\n    return new Hexagram(new Trigram(lowerLines), new Trigram(upperLines))\n}\n\nconst Home = () => {\n  const qs = getQueryString()\n  const queryDate = parseStringDate(qs.search, new Date());\n  const [hex, setHex] = useState(null)\n  useEffect(() => {\n    \n    const ii = dateToHexagram(queryDate)\n    const mainHex = binToHexagram(ii.mainHexagram.Binary.split(''))\n    const changeHex = binToHexagram(ii.changeHexagram.Binary.split(''))\n    console.log(ii)\n    setHex([\n        {\n            hex: mainHex,\n            changeLine: 5 - ii.changingLine\n        },\n        {\n            hex: changeHex,\n        },\n    ])\n  }, [])\n\n\n  return <Layout>\n\n    <DatePicker \n        dateObject={queryDate}\n        onClick={date => assign('?' + queryString.stringify({\n        search: format(date, DATETIME_FORMAT)\n        }))} \n    />\n\n    <Bazi inputDate={queryDate} hideOtherInformation={true}  />\n    <Box direction=\"row\" alignContent='stretch'>\n        {\n            hex && hex.map(e => <Box fill={true} pad=\"medium\"><Hex hexagram={e.hex} changeLine={e.changeLine} /></Box>)\n        }\n    </Box>\n    <Ad />\n  </Layout>\n}\n\nexport default Home\n","import React from \"react\"\nimport { Adsense } from '@ctrl/react-adsense';\n\nconst Ad = () => <Adsense\n    client=\"ca-pub-6343289823091285\"\n    slot=\"5114483936\"\n    />\n\nexport default Ad;\n\n","import React from \"react\"\nimport { Box, Text } from 'grommet';\n\nconst Home = ({ onClick, buttons, activeIndex }) => {\n  return <>\n    <Box direction=\"row-responsive\">\n      {\n        buttons && buttons.map((e, i) => <Box \n            key={i}\n            onClick={() => (onClick && onClick(e, i))}\n            align=\"center\" color=\"white\"  \n            background={activeIndex === i ? 'brand' : 'black'} \n            fill=\"horizontal\" \n            pad=\"small\">\n            <Text color=\"white\"> { e.label }</Text>\n          </Box>)\n      }\n    </Box>\n  </>\n}\n\nexport default Home\n","import React from \"react\"\nimport { Box } from 'grommet';\n\nconst Home = ({ list, wrap }) => {\n\n  return <>\n    <Box\n      wrap={wrap}\n      direction=\"row\"\n      gap=\"xxsmall\"\n    >\n    {list}\n    </Box>\n  </>\n}\n\nexport default Home\n","import React from \"react\"\nimport { Box, Text } from 'grommet';\nimport { getColor } from '../../cm-lib/QiMen'\nimport { HIDDEN_STEMS } from '../../cm-lib/constants'\nimport { useTranslation } from \"react-i18next\";\n\n\nconst StandardBox = ({ children }) => <Box\n  justify=\"center\"\n  align=\"center\"\n  alignContent=\"center\"\n>{ children }</Box>\n\n  const PillarGrid = ( { children, t, background }) => <Box background={background || getColor(t)}\n    pad=\"small\"\n    \n    fill=\"horizontal\" \n    justify=\"center\"\n    align=\"center\"\n    alignContent=\"center\"\n  > { children } </Box>\n\nconst Home = ({ header, ganzhi, width, hiddenStems }) => {\n    const { t } = useTranslation()\n  return <><Box \n\n                direction=\"column\"\n                fill={\"horizontal\"}\n                gap=\"xxsmall\"\n              >\n      <PillarGrid background=\"light-2\">\n        <StandardBox> { header }</StandardBox>\n      </PillarGrid>\n      <PillarGrid t={ganzhi.substr(0, 1)}>\n        <StandardBox> { ganzhi.substr(0, 1) }</StandardBox><StandardBox> <Text size=\"12px\" textAlign=\"center\">{ t(ganzhi.substr(0, 1)) }</Text></StandardBox>\n      </PillarGrid>\n      <PillarGrid t={ganzhi.substr(1, 1)}>\n      <StandardBox> { ganzhi.substr(1, 1) }</StandardBox><StandardBox> <Text size=\"12px\" textAlign=\"center\">{ t(ganzhi.substr(1, 1)) }</Text></StandardBox>\n      </PillarGrid>\n      {\n        hiddenStems && <PillarGrid t={ganzhi.substr(1, 1)}>\n        <StandardBox> { HIDDEN_STEMS[ganzhi.substr(1, 1)] }</StandardBox>\n        </PillarGrid>\n      }\n    </Box>\n  </>\n}\n\nexport default Home\n"],"sourceRoot":""}