{"version":3,"file":"component---src-pages-reset-password-js-638225742f5c8d1d1d2e.js","mappings":"gRASA,MAAM,SAAEA,GAAaC,EAErB,eAEE,MAAMC,GAAWC,EAAAA,EAAAA,eACXC,EAAK,IAAIC,gBAAgBH,EAASI,QAClCC,EAAQH,EAAGI,IAAI,KACfC,EAASL,EAAGI,IAAI,MACfE,EAAOC,GAAYX,EAASS,GAAU,KACtCG,EAAaC,GAAkBb,EAAS,KACxCc,EAAiBC,GAAsBf,EAAS,IAGvD,OACEC,EAAAA,cAAA,YACEA,EAAAA,cAAA,WAASe,UAAU,0DACjBf,EAAAA,cAACgB,EAAAA,EAAS,KACRhB,EAAAA,cAACiB,EAAAA,EAAG,CAACF,UAAU,0BACbf,EAAAA,cAACkB,EAAAA,EAAG,CAACC,GAAI,GAAIJ,UAAU,oDACrBf,EAAAA,cAAA,OAAKe,UAAU,8EACbf,EAAAA,cAAA,OAAKe,UAAU,2CACbf,EAAAA,cAACoB,EAAAA,EAAI,MACLpB,EAAAA,cAAA,MAAIe,UAAU,QAAO,mBAEvBf,EAAAA,cAACqB,EAAAA,EAAI,MAEAf,GAASN,EAAAA,cAACqB,EAAAA,EAAKC,MAAK,CAACC,GAAG,QAAQR,UAAU,QACzCf,EAAAA,cAACqB,EAAAA,EAAKG,MAAK,KAAC,cACZxB,EAAAA,cAACyB,EAAAA,EAAU,KACTzB,EAAAA,cAACyB,EAAAA,EAAWC,KAAI,KACd1B,EAAAA,cAAC2B,EAAAA,EAAe,CAACC,KAAMC,EAAAA,OAEzB7B,EAAAA,cAACqB,EAAAA,EAAKS,QAAO,CAACC,WAAS,EAACC,MAAOvB,EAAOwB,UAAQ,EAACC,KAAK,QAAQC,YAAY,sBACtEC,SAAWC,IACT3B,EAAS2B,EAAEC,OAAON,MAAM,MAQhC1B,GAASN,EAAAA,cAAAA,EAAAA,SAAA,KAAEA,EAAAA,cAACqB,EAAAA,EAAKC,MAAK,CAACC,GAAG,WAAWR,UAAU,QAC7Cf,EAAAA,cAACqB,EAAAA,EAAKG,MAAK,KAAC,iBACZxB,EAAAA,cAACyB,EAAAA,EAAU,KACTzB,EAAAA,cAACyB,EAAAA,EAAWC,KAAI,KACd1B,EAAAA,cAAC2B,EAAAA,EAAe,CAACC,KAAMW,EAAAA,OAEzBvC,EAAAA,cAACqB,EAAAA,EAAKS,QAAO,CACXE,MAAOrB,EACPsB,UAAQ,EACRC,KAAK,WACLC,YAAY,WACZC,SAAWC,IACTzB,EAAeyB,EAAEC,OAAON,MAAM,MAKpChC,EAAAA,cAACqB,EAAAA,EAAKC,MAAK,CAACC,GAAG,kBAAkBR,UAAU,QACzCf,EAAAA,cAACqB,EAAAA,EAAKG,MAAK,KAAC,oBACZxB,EAAAA,cAACyB,EAAAA,EAAU,KACTzB,EAAAA,cAACyB,EAAAA,EAAWC,KAAI,KACd1B,EAAAA,cAAC2B,EAAAA,EAAe,CAACC,KAAMW,EAAAA,OAEzBvC,EAAAA,cAACqB,EAAAA,EAAKS,QAAO,CACXE,MAAOnB,EACPoB,UAAQ,EACRC,KAAK,WACLC,YAAY,mBACZC,SAAWC,IACTvB,EAAmBuB,EAAEC,OAAON,MAAM,OAM9ChC,EAAAA,cAACwC,EAAAA,EAAM,CAACC,QAAQ,UAAUC,QAASC,UAC7BrC,EACEO,IAAoBF,UAChBiC,EAAAA,EAAMC,MAAMC,IAAI,iBAAkB,CACtCC,IAAKzC,EACL0C,SAAUrC,EACVF,WAEFwC,EAAAA,EAAAA,UAAS,MAGXL,EAAAA,EAAMC,MAAMC,IAAI,sBAAuB,CACrCrC,SAEJ,EACCM,UAAU,SAAQ,wBAWtC,C","sources":["webpack://gatsby-starter-default/./src/pages/resetPassword.js"],"sourcesContent":["\nimport React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faAngleLeft, faEnvelope, faUnlockAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { Col, Row, Form, Card, Button, Container, InputGroup } from '@themesberg/react-bootstrap';\nimport { navigate } from 'gatsby';\nimport { useLocation } from '@reach/router';\nimport Logo from '../components/Logo'\nimport Parse from '../vendor/Parse'\nconst { useState } = React;\n\nexport default () => {\n\n  const location = useLocation();\n  const qs = new URLSearchParams(location.search)\n  const token = qs.get('o')\n  const _email = qs.get('e')\n  const [email, setEmail] = useState(_email || '')\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('')\n\n\n  return (\n    <main>\n      <section className=\"bg-soft d-flex align-items-center my-5 mt-lg-6 mb-lg-5\">\n        <Container>\n          <Row className=\"justify-content-center\">\n            <Col xs={12} className=\"d-flex align-items-center justify-content-center\">\n              <div className=\"bg-white shadow-soft border rounded border-light p-4 p-lg-5 w-100 fmxw-500\">\n                <div className=\"text-center text-md-center mb-4 mt-md-0\">\n                  <Logo />\n                  <h3 className=\"mb-0\">Reset password</h3>\n                </div>\n                <Form>\n                  {\n                    !token && <Form.Group id=\"email\" className=\"mb-4\">\n                      <Form.Label>Your Email</Form.Label>\n                      <InputGroup>\n                        <InputGroup.Text>\n                          <FontAwesomeIcon icon={faEnvelope} />\n                        </InputGroup.Text>\n                        <Form.Control autoFocus value={email} required type=\"email\" placeholder=\"example@company.com\"\n                          onChange={(e) => {\n                            setEmail(e.target.value)\n                          }}\n                        />\n                      </InputGroup>\n                    </Form.Group>\n                  }\n\n                  {\n                    token && <><Form.Group id=\"password\" className=\"mb-4\">\n                      <Form.Label>Your Password</Form.Label>\n                      <InputGroup>\n                        <InputGroup.Text>\n                          <FontAwesomeIcon icon={faUnlockAlt} />\n                        </InputGroup.Text>\n                        <Form.Control\n                          value={newPassword}\n                          required\n                          type=\"password\"\n                          placeholder=\"Password\"\n                          onChange={(e) => {\n                            setNewPassword(e.target.value)\n                          }}\n                        />\n                      </InputGroup>\n                    </Form.Group>\n                      <Form.Group id=\"confirmPassword\" className=\"mb-4\">\n                        <Form.Label>Confirm Password</Form.Label>\n                        <InputGroup>\n                          <InputGroup.Text>\n                            <FontAwesomeIcon icon={faUnlockAlt} />\n                          </InputGroup.Text>\n                          <Form.Control\n                            value={confirmPassword}\n                            required\n                            type=\"password\"\n                            placeholder=\"Confirm Password\"\n                            onChange={(e) => {\n                              setConfirmPassword(e.target.value)\n                            }}\n                          />\n                        </InputGroup>\n                      </Form.Group></>\n                  }\n                  <Button variant=\"primary\" onClick={async () => {\n                    if (token) {\n                      if (confirmPassword === newPassword) {\n                        await Parse.Cloud.run('updatePassword', {\n                          otp: token,\n                          password: newPassword,\n                          email\n                        })\n                        navigate('/')\n                      }\n                    } else {\n                      Parse.Cloud.run('requestPasswordLink', {\n                        email\n                      })\n                    }\n                  }} className=\"w-100\">\n                    Reset password\n                  </Button>\n                </Form>\n              </div>\n            </Col>\n          </Row>\n        </Container>\n      </section>\n    </main>\n  );\n};\n"],"names":["useState","React","location","useLocation","qs","URLSearchParams","search","token","get","_email","email","setEmail","newPassword","setNewPassword","confirmPassword","setConfirmPassword","className","Container","Row","Col","xs","Logo","Form","Group","id","Label","InputGroup","Text","FontAwesomeIcon","icon","faEnvelope","Control","autoFocus","value","required","type","placeholder","onChange","e","target","faUnlockAlt","Button","variant","onClick","async","Parse","Cloud","run","otp","password","navigate"],"sourceRoot":""}