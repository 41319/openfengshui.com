{"version":3,"sources":["webpack:///./node_modules/date-fns/esm/addDays/index.js"],"names":["addDays","dirtyDate","dirtyAmount","arguments","date","amount","isNaN","Date","NaN","setDate","getDate"],"mappings":"8FAAA,0EA0Be,SAASA,EAAQC,EAAWC,GACzC,YAAa,EAAGC,WAChB,IAAIC,EAAO,YAAOH,GACdI,EAAS,YAAUH,GAEvB,OAAII,MAAMD,GACD,IAAIE,KAAKC,KAGbH,GAKLD,EAAKK,QAAQL,EAAKM,UAAYL,GACvBD,GAJEA,I","file":"69463ead7de12bfa2b241bc0234595e06c18fc22-bcab95cc3bcf95e1a6b6.js","sourcesContent":["import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name addDays\n * @category Day Helpers\n * @summary Add the specified number of days to the given date.\n *\n * @description\n * Add the specified number of days to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of days to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the days added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 10 days to 1 September 2014:\n * var result = addDays(new Date(2014, 8, 1), 10)\n * //=> Thu Sep 11 2014 00:00:00\n */\n\nexport default function addDays(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var amount = toInteger(dirtyAmount);\n\n  if (isNaN(amount)) {\n    return new Date(NaN);\n  }\n\n  if (!amount) {\n    // If 0 days, no-op to avoid changing times in the hour before end of DST\n    return date;\n  }\n\n  date.setDate(date.getDate() + amount);\n  return date;\n}"],"sourceRoot":""}