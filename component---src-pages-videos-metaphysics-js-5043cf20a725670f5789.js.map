{"version":3,"sources":["webpack:///./src/pages/videos/metaphysics.js"],"names":["query","Index","data","useState","allYoutubeVideo","edges","map","e","node","thumbnail","url","cta","href","videoId","label","dataList","setDataList","useEffect","array","temporaryValue","randomIndex","currentIndex","length","Math","floor","random","shuffle","slice","max"],"mappings":"4FAAA,0GAkCaA,EAAK,aAwCHC,UAnBD,SAAC,GAAY,IAAXC,EAAU,EAAVA,KAAU,EACUC,mBAASD,EAAKE,gBAAgBC,MAAMC,KAAI,SAAAC,GAAC,wBAClEA,EAAEC,KADgE,CAErEC,UAAWF,EAAEC,KAAKC,UAAUC,IAC5BC,IAAK,kBAAC,IAAD,CAAQC,KAAI,kCAAoCL,EAAEC,KAAKK,QAAWC,MAAM,gBAH1EC,EADe,KACLC,EADK,KAWtB,OAJAC,qBAAU,WACRD,EAjDQ,SAAUE,GAMvB,IAJA,IACIC,EAAgBC,EADhBC,EAAeH,EAAMI,OAIlB,IAAMD,GAEZD,EAAcG,KAAKC,MAAMD,KAAKE,SAAWJ,GAIzCF,EAAiBD,EAHjBG,GAAgB,GAIhBH,EAAMG,GAAgBH,EAAME,GAC5BF,EAAME,GAAeD,EAGtB,OAAOD,EAgCWQ,CAAQX,EAASY,YAC7B,IAGC,kBAAC,IAAD,CAAQC,IAAI,UACR,2BAAG,kBAAC,IAAD,CAAQhB,KAAK,gCAAgCE,MAAM,YAAtD,2CACA,kBAAC,IAAD,CAAaC,SAAUA","file":"component---src-pages-videos-metaphysics-js-5043cf20a725670f5789.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Layout from '../../containers/layout'\nimport CardListing from '../../components/CardListing'\nimport {\n    Anchor,\n    Box,\n    Card,\n    CardBody,\n    CardFooter,\n    Heading,\n    Image,\n  } from 'grommet';\nimport { graphql } from 'gatsby'\n\nvar shuffle = function (array) {\n\n\tvar currentIndex = array.length;\n\tvar temporaryValue, randomIndex;\n\n\t// While there remain elements to shuffle...\n\twhile (0 !== currentIndex) {\n\t\t// Pick a remaining element...\n\t\trandomIndex = Math.floor(Math.random() * currentIndex);\n\t\tcurrentIndex -= 1;\n\n\t\t// And swap it with the current element.\n\t\ttemporaryValue = array[currentIndex];\n\t\tarray[currentIndex] = array[randomIndex];\n\t\tarray[randomIndex] = temporaryValue;\n\t}\n\n\treturn array;\n\n};\nexport const query = graphql`\n    query HomePage {\n    allYoutubeVideo {\n        edges {\n            node {\n                id\n                title\n                description\n                videoId\n                publishedAt\n                privacyStatus\n                channelTitle\n                thumbnail {\n                    url\n                }\n            }\n        }\n    }\n}\n`\n\nconst Index = ({data}) => {\n    const [dataList, setDataList] = useState(data.allYoutubeVideo.edges.map(e => ({\n        ...e.node,\n        thumbnail: e.node.thumbnail.url,\n        cta: <Anchor href={`http://www.youtube.com/watch?v=${e.node.videoId}`} label=\"Watch\" />\n    })))\n\n    useEffect(() => {\n      setDataList( shuffle(dataList.slice()) )\n    }, [])\n\n    return (\n        <Layout max=\"1240px\">\n            <p><Anchor href=\"mailto:openfengshui@gmail.com\" label=\"Contact\" /> us to add/remove your youtube channel </p>\n            <CardListing dataList={dataList} />\n        </Layout>\n    );\n}\n\nexport default Index;"],"sourceRoot":""}